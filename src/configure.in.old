#                                               -*- Autoconf -*-
#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ([2.67])
AC_INIT([python-tesseract], [0.5], [freetogo@gmail.com])
AC_CONFIG_SRCDIR([main_dummy.cpp])
AC_CONFIG_HEADERS([config.h])
# Checks for programs.
AC_PROG_CXX
AC_PROG_CC

# autoheader templates
# detect system type and define some specific settings
AC_CANONICAL_TARGET

case "$target_os" in
   lion*)
     AC_DEFINE([__macos__], [], [Mac OS X])
     ;;
   
   tiger*)
     AC_DEFINE([__macos__], [], [Mac OS X])
     ;;
   darwin*)
     AC_DEFINE([__macos__], [], [Mac OS X])
     need_macos_dt=no
     if test x"$MACOSX_DEPLOYMENT_TARGET" = x; then
        AC_MSG_WARN([MACOSX_DEPLOYMENT_TARGET environment variable not set. Setting it to 10.3])
        need_macos_dt=yes
     else
        vermajor=`expr x"$MACOSX_DEPLOYMENT_TARGET" : 'x\([[0-9]][[0-9]]*\).[[0-9]][[0-9]]*'`
        verminor=`expr x"$MACOSX_DEPLOYMENT_TARGET" : 'x[[0-9]][[0-9]]*.\([[0-9]][[0-9]]*\)'`
        if test 0"$vermajor" -lt 10 ; then need_macos_dt=ok;
        else if test 0"$vermajor" -eq 10 -a 0"$verminor" -lt 3; then need_macos_dt=failed;
              fi
        fi

        if test x"$need_macos_dt" = xfailed; then
           AC_MSG_ERROR([MACOSX_DEPLOYMENT_TARGET must be >= 10.3 (current value: $MACOSX_DEPLOYMENT_TARGET)])
        fi
     fi
     ;;
   apple*)
     AC_DEFINE([__macos__], [], [Mac OS X])
     ;;
   linux*)
     AC_DEFINE([__linux__], [], [Linux system])
     ;;
   solaris*)
     TARGET_OS=solaris
     AC_DEFINE([__solaris__],[], [Sun Solaris])
     CC_PREFERENCE="cc gcc"
     CXX_PREFERENCE="CC g++"
     DFLT_OPT="-O2"
     extra_inc_path_default="$extra_inc_path_default /usr/local/include"
     extra_lib_path_default="$extra_lib_path_default /usr/local/lib"
     ;;
   *)
     AC_MSG_WARN([untested operating system])
   ;;
esac

AM_CONDITIONAL(NEED_MACOS_DEPLOYMENT_TARGET,[test x"$need_macos_dt" = xyes])
# Checks for libraries.

# Checks for header files.
AC_CHECK_HEADERS([arpa/inet.h fcntl.h float.h inttypes.h libintl.h limits.h locale.h netdb.h netinet/in.h stdint.h stdlib.h string.h sys/socket.h sys/time.h syslog.h unistd.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL
AC_C_RESTRICT
AC_TYPE_SIZE_T
AC_TYPE_UINT16_T
AC_TYPE_UINT32_T

# Checks for library functions.
AC_FUNC_ERROR_AT_LINE
AC_FUNC_MALLOC
AC_CHECK_FUNCS([floor memset setlocale strdup strrchr strstr])

AC_OUTPUT
