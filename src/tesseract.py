# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.0
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_tesseract', [dirname(__file__)])
        except ImportError:
            import _tesseract
            return _tesseract
        if fp is not None:
            try:
                _mod = imp.load_module('_tesseract', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _tesseract = swig_import_helper()
    del swig_import_helper
else:
    import _tesseract
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0



def new_intp():
  return _tesseract.new_intp()
new_intp = _tesseract.new_intp

def copy_intp(*args):
  return _tesseract.copy_intp(*args)
copy_intp = _tesseract.copy_intp

def delete_intp(*args):
  return _tesseract.delete_intp(*args)
delete_intp = _tesseract.delete_intp

def intp_assign(*args):
  return _tesseract.intp_assign(*args)
intp_assign = _tesseract.intp_assign

def intp_value(*args):
  return _tesseract.intp_value(*args)
intp_value = _tesseract.intp_value

def cdata(*args):
  return _tesseract.cdata(*args)
cdata = _tesseract.cdata

def memmove(*args):
  return _tesseract.memmove(*args)
memmove = _tesseract.memmove
class intArray(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, intArray, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, intArray, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _tesseract.new_intArray(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _tesseract.delete_intArray
    __del__ = lambda self : None;
    def __getitem__(self, *args): return _tesseract.intArray___getitem__(self, *args)
    def __setitem__(self, *args): return _tesseract.intArray___setitem__(self, *args)
    def cast(self): return _tesseract.intArray_cast(self)
    __swig_getmethods__["frompointer"] = lambda x: _tesseract.intArray_frompointer
    if _newclass:frompointer = staticmethod(_tesseract.intArray_frompointer)
intArray_swigregister = _tesseract.intArray_swigregister
intArray_swigregister(intArray)

def intArray_frompointer(*args):
  return _tesseract.intArray_frompointer(*args)
intArray_frompointer = _tesseract.intArray_frompointer

LIBLEPT_MAJOR_VERSION = _tesseract.LIBLEPT_MAJOR_VERSION
LIBLEPT_MINOR_VERSION = _tesseract.LIBLEPT_MINOR_VERSION

def pixBackgroundNormSimple(*args):
  return _tesseract.pixBackgroundNormSimple(*args)
pixBackgroundNormSimple = _tesseract.pixBackgroundNormSimple

def pixBackgroundNorm(*args):
  return _tesseract.pixBackgroundNorm(*args)
pixBackgroundNorm = _tesseract.pixBackgroundNorm

def pixBackgroundNormMorph(*args):
  return _tesseract.pixBackgroundNormMorph(*args)
pixBackgroundNormMorph = _tesseract.pixBackgroundNormMorph

def pixBackgroundNormGrayArray(*args):
  return _tesseract.pixBackgroundNormGrayArray(*args)
pixBackgroundNormGrayArray = _tesseract.pixBackgroundNormGrayArray

def pixBackgroundNormRGBArrays(*args):
  return _tesseract.pixBackgroundNormRGBArrays(*args)
pixBackgroundNormRGBArrays = _tesseract.pixBackgroundNormRGBArrays

def pixBackgroundNormGrayArrayMorph(*args):
  return _tesseract.pixBackgroundNormGrayArrayMorph(*args)
pixBackgroundNormGrayArrayMorph = _tesseract.pixBackgroundNormGrayArrayMorph

def pixBackgroundNormRGBArraysMorph(*args):
  return _tesseract.pixBackgroundNormRGBArraysMorph(*args)
pixBackgroundNormRGBArraysMorph = _tesseract.pixBackgroundNormRGBArraysMorph

def pixGetBackgroundGrayMap(*args):
  return _tesseract.pixGetBackgroundGrayMap(*args)
pixGetBackgroundGrayMap = _tesseract.pixGetBackgroundGrayMap

def pixGetBackgroundRGBMap(*args):
  return _tesseract.pixGetBackgroundRGBMap(*args)
pixGetBackgroundRGBMap = _tesseract.pixGetBackgroundRGBMap

def pixGetBackgroundGrayMapMorph(*args):
  return _tesseract.pixGetBackgroundGrayMapMorph(*args)
pixGetBackgroundGrayMapMorph = _tesseract.pixGetBackgroundGrayMapMorph

def pixGetBackgroundRGBMapMorph(*args):
  return _tesseract.pixGetBackgroundRGBMapMorph(*args)
pixGetBackgroundRGBMapMorph = _tesseract.pixGetBackgroundRGBMapMorph

def pixFillMapHoles(*args):
  return _tesseract.pixFillMapHoles(*args)
pixFillMapHoles = _tesseract.pixFillMapHoles

def pixExtendByReplication(*args):
  return _tesseract.pixExtendByReplication(*args)
pixExtendByReplication = _tesseract.pixExtendByReplication

def pixSmoothConnectedRegions(*args):
  return _tesseract.pixSmoothConnectedRegions(*args)
pixSmoothConnectedRegions = _tesseract.pixSmoothConnectedRegions

def pixGetInvBackgroundMap(*args):
  return _tesseract.pixGetInvBackgroundMap(*args)
pixGetInvBackgroundMap = _tesseract.pixGetInvBackgroundMap

def pixApplyInvBackgroundGrayMap(*args):
  return _tesseract.pixApplyInvBackgroundGrayMap(*args)
pixApplyInvBackgroundGrayMap = _tesseract.pixApplyInvBackgroundGrayMap

def pixApplyInvBackgroundRGBMap(*args):
  return _tesseract.pixApplyInvBackgroundRGBMap(*args)
pixApplyInvBackgroundRGBMap = _tesseract.pixApplyInvBackgroundRGBMap

def pixApplyVariableGrayMap(*args):
  return _tesseract.pixApplyVariableGrayMap(*args)
pixApplyVariableGrayMap = _tesseract.pixApplyVariableGrayMap

def pixGlobalNormRGB(*args):
  return _tesseract.pixGlobalNormRGB(*args)
pixGlobalNormRGB = _tesseract.pixGlobalNormRGB

def pixGlobalNormNoSatRGB(*args):
  return _tesseract.pixGlobalNormNoSatRGB(*args)
pixGlobalNormNoSatRGB = _tesseract.pixGlobalNormNoSatRGB

def pixThresholdSpreadNorm(*args):
  return _tesseract.pixThresholdSpreadNorm(*args)
pixThresholdSpreadNorm = _tesseract.pixThresholdSpreadNorm

def pixBackgroundNormFlex(*args):
  return _tesseract.pixBackgroundNormFlex(*args)
pixBackgroundNormFlex = _tesseract.pixBackgroundNormFlex

def pixContrastNorm(*args):
  return _tesseract.pixContrastNorm(*args)
pixContrastNorm = _tesseract.pixContrastNorm

def pixMinMaxTiles(*args):
  return _tesseract.pixMinMaxTiles(*args)
pixMinMaxTiles = _tesseract.pixMinMaxTiles

def pixSetLowContrast(*args):
  return _tesseract.pixSetLowContrast(*args)
pixSetLowContrast = _tesseract.pixSetLowContrast

def pixLinearTRCTiled(*args):
  return _tesseract.pixLinearTRCTiled(*args)
pixLinearTRCTiled = _tesseract.pixLinearTRCTiled

def pixAffineSampledPta(*args):
  return _tesseract.pixAffineSampledPta(*args)
pixAffineSampledPta = _tesseract.pixAffineSampledPta

def pixAffineSampled(*args):
  return _tesseract.pixAffineSampled(*args)
pixAffineSampled = _tesseract.pixAffineSampled

def pixAffinePta(*args):
  return _tesseract.pixAffinePta(*args)
pixAffinePta = _tesseract.pixAffinePta

def pixAffine(*args):
  return _tesseract.pixAffine(*args)
pixAffine = _tesseract.pixAffine

def pixAffinePtaColor(*args):
  return _tesseract.pixAffinePtaColor(*args)
pixAffinePtaColor = _tesseract.pixAffinePtaColor

def pixAffineColor(*args):
  return _tesseract.pixAffineColor(*args)
pixAffineColor = _tesseract.pixAffineColor

def pixAffinePtaGray(*args):
  return _tesseract.pixAffinePtaGray(*args)
pixAffinePtaGray = _tesseract.pixAffinePtaGray

def pixAffineGray(*args):
  return _tesseract.pixAffineGray(*args)
pixAffineGray = _tesseract.pixAffineGray

def pixAffinePtaWithAlpha(*args):
  return _tesseract.pixAffinePtaWithAlpha(*args)
pixAffinePtaWithAlpha = _tesseract.pixAffinePtaWithAlpha

def getAffineXformCoeffs(*args):
  return _tesseract.getAffineXformCoeffs(*args)
getAffineXformCoeffs = _tesseract.getAffineXformCoeffs

def affineInvertXform(*args):
  return _tesseract.affineInvertXform(*args)
affineInvertXform = _tesseract.affineInvertXform

def affineXformSampledPt(*args):
  return _tesseract.affineXformSampledPt(*args)
affineXformSampledPt = _tesseract.affineXformSampledPt

def affineXformPt(*args):
  return _tesseract.affineXformPt(*args)
affineXformPt = _tesseract.affineXformPt

def linearInterpolatePixelColor(*args):
  return _tesseract.linearInterpolatePixelColor(*args)
linearInterpolatePixelColor = _tesseract.linearInterpolatePixelColor

def linearInterpolatePixelGray(*args):
  return _tesseract.linearInterpolatePixelGray(*args)
linearInterpolatePixelGray = _tesseract.linearInterpolatePixelGray

def gaussjordan(*args):
  return _tesseract.gaussjordan(*args)
gaussjordan = _tesseract.gaussjordan

def pixAffineSequential(*args):
  return _tesseract.pixAffineSequential(*args)
pixAffineSequential = _tesseract.pixAffineSequential

def createMatrix2dTranslate(*args):
  return _tesseract.createMatrix2dTranslate(*args)
createMatrix2dTranslate = _tesseract.createMatrix2dTranslate

def createMatrix2dScale(*args):
  return _tesseract.createMatrix2dScale(*args)
createMatrix2dScale = _tesseract.createMatrix2dScale

def createMatrix2dRotate(*args):
  return _tesseract.createMatrix2dRotate(*args)
createMatrix2dRotate = _tesseract.createMatrix2dRotate

def ptaTranslate(*args):
  return _tesseract.ptaTranslate(*args)
ptaTranslate = _tesseract.ptaTranslate

def ptaScale(*args):
  return _tesseract.ptaScale(*args)
ptaScale = _tesseract.ptaScale

def ptaRotate(*args):
  return _tesseract.ptaRotate(*args)
ptaRotate = _tesseract.ptaRotate

def boxaTranslate(*args):
  return _tesseract.boxaTranslate(*args)
boxaTranslate = _tesseract.boxaTranslate

def boxaScale(*args):
  return _tesseract.boxaScale(*args)
boxaScale = _tesseract.boxaScale

def boxaRotate(*args):
  return _tesseract.boxaRotate(*args)
boxaRotate = _tesseract.boxaRotate

def ptaAffineTransform(*args):
  return _tesseract.ptaAffineTransform(*args)
ptaAffineTransform = _tesseract.ptaAffineTransform

def boxaAffineTransform(*args):
  return _tesseract.boxaAffineTransform(*args)
boxaAffineTransform = _tesseract.boxaAffineTransform

def l_productMatVec(*args):
  return _tesseract.l_productMatVec(*args)
l_productMatVec = _tesseract.l_productMatVec

def l_productMat2(*args):
  return _tesseract.l_productMat2(*args)
l_productMat2 = _tesseract.l_productMat2

def l_productMat3(*args):
  return _tesseract.l_productMat3(*args)
l_productMat3 = _tesseract.l_productMat3

def l_productMat4(*args):
  return _tesseract.l_productMat4(*args)
l_productMat4 = _tesseract.l_productMat4

def l_getDataBit(*args):
  return _tesseract.l_getDataBit(*args)
l_getDataBit = _tesseract.l_getDataBit

def l_setDataBit(*args):
  return _tesseract.l_setDataBit(*args)
l_setDataBit = _tesseract.l_setDataBit

def l_clearDataBit(*args):
  return _tesseract.l_clearDataBit(*args)
l_clearDataBit = _tesseract.l_clearDataBit

def l_setDataBitVal(*args):
  return _tesseract.l_setDataBitVal(*args)
l_setDataBitVal = _tesseract.l_setDataBitVal

def l_getDataDibit(*args):
  return _tesseract.l_getDataDibit(*args)
l_getDataDibit = _tesseract.l_getDataDibit

def l_setDataDibit(*args):
  return _tesseract.l_setDataDibit(*args)
l_setDataDibit = _tesseract.l_setDataDibit

def l_clearDataDibit(*args):
  return _tesseract.l_clearDataDibit(*args)
l_clearDataDibit = _tesseract.l_clearDataDibit

def l_getDataQbit(*args):
  return _tesseract.l_getDataQbit(*args)
l_getDataQbit = _tesseract.l_getDataQbit

def l_setDataQbit(*args):
  return _tesseract.l_setDataQbit(*args)
l_setDataQbit = _tesseract.l_setDataQbit

def l_clearDataQbit(*args):
  return _tesseract.l_clearDataQbit(*args)
l_clearDataQbit = _tesseract.l_clearDataQbit

def l_getDataByte(*args):
  return _tesseract.l_getDataByte(*args)
l_getDataByte = _tesseract.l_getDataByte

def l_setDataByte(*args):
  return _tesseract.l_setDataByte(*args)
l_setDataByte = _tesseract.l_setDataByte

def l_getDataTwoBytes(*args):
  return _tesseract.l_getDataTwoBytes(*args)
l_getDataTwoBytes = _tesseract.l_getDataTwoBytes

def l_setDataTwoBytes(*args):
  return _tesseract.l_setDataTwoBytes(*args)
l_setDataTwoBytes = _tesseract.l_setDataTwoBytes

def l_getDataFourBytes(*args):
  return _tesseract.l_getDataFourBytes(*args)
l_getDataFourBytes = _tesseract.l_getDataFourBytes

def l_setDataFourBytes(*args):
  return _tesseract.l_setDataFourBytes(*args)
l_setDataFourBytes = _tesseract.l_setDataFourBytes

def barcodeDispatchDecoder(*args):
  return _tesseract.barcodeDispatchDecoder(*args)
barcodeDispatchDecoder = _tesseract.barcodeDispatchDecoder

def barcodeFormatIsSupported(*args):
  return _tesseract.barcodeFormatIsSupported(*args)
barcodeFormatIsSupported = _tesseract.barcodeFormatIsSupported

def pixFindBaselines(*args):
  return _tesseract.pixFindBaselines(*args)
pixFindBaselines = _tesseract.pixFindBaselines

def pixDeskewLocal(*args):
  return _tesseract.pixDeskewLocal(*args)
pixDeskewLocal = _tesseract.pixDeskewLocal

def pixGetLocalSkewTransform(*args):
  return _tesseract.pixGetLocalSkewTransform(*args)
pixGetLocalSkewTransform = _tesseract.pixGetLocalSkewTransform

def pixGetLocalSkewAngles(*args):
  return _tesseract.pixGetLocalSkewAngles(*args)
pixGetLocalSkewAngles = _tesseract.pixGetLocalSkewAngles

def bbufferCreate(*args):
  return _tesseract.bbufferCreate(*args)
bbufferCreate = _tesseract.bbufferCreate

def bbufferDestroy(*args):
  return _tesseract.bbufferDestroy(*args)
bbufferDestroy = _tesseract.bbufferDestroy

def bbufferDestroyAndSaveData(*args):
  return _tesseract.bbufferDestroyAndSaveData(*args)
bbufferDestroyAndSaveData = _tesseract.bbufferDestroyAndSaveData

def bbufferRead(*args):
  return _tesseract.bbufferRead(*args)
bbufferRead = _tesseract.bbufferRead

def bbufferReadStream(*args):
  return _tesseract.bbufferReadStream(*args)
bbufferReadStream = _tesseract.bbufferReadStream

def bbufferWrite(*args):
  return _tesseract.bbufferWrite(*args)
bbufferWrite = _tesseract.bbufferWrite

def bbufferWriteStream(*args):
  return _tesseract.bbufferWriteStream(*args)
bbufferWriteStream = _tesseract.bbufferWriteStream

def bbufferBytesToWrite(*args):
  return _tesseract.bbufferBytesToWrite(*args)
bbufferBytesToWrite = _tesseract.bbufferBytesToWrite

def bbufferReadStdin(*args):
  return _tesseract.bbufferReadStdin(*args)
bbufferReadStdin = _tesseract.bbufferReadStdin

def pixBilateral(*args):
  return _tesseract.pixBilateral(*args)
pixBilateral = _tesseract.pixBilateral

def pixBilateralGray(*args):
  return _tesseract.pixBilateralGray(*args)
pixBilateralGray = _tesseract.pixBilateralGray

def pixBilateralExact(*args):
  return _tesseract.pixBilateralExact(*args)
pixBilateralExact = _tesseract.pixBilateralExact

def pixBilateralGrayExact(*args):
  return _tesseract.pixBilateralGrayExact(*args)
pixBilateralGrayExact = _tesseract.pixBilateralGrayExact

def pixBlockBilateralExact(*args):
  return _tesseract.pixBlockBilateralExact(*args)
pixBlockBilateralExact = _tesseract.pixBlockBilateralExact

def makeRangeKernel(*args):
  return _tesseract.makeRangeKernel(*args)
makeRangeKernel = _tesseract.makeRangeKernel

def pixBilinearSampledPta(*args):
  return _tesseract.pixBilinearSampledPta(*args)
pixBilinearSampledPta = _tesseract.pixBilinearSampledPta

def pixBilinearSampled(*args):
  return _tesseract.pixBilinearSampled(*args)
pixBilinearSampled = _tesseract.pixBilinearSampled

def pixBilinearPta(*args):
  return _tesseract.pixBilinearPta(*args)
pixBilinearPta = _tesseract.pixBilinearPta

def pixBilinear(*args):
  return _tesseract.pixBilinear(*args)
pixBilinear = _tesseract.pixBilinear

def pixBilinearPtaColor(*args):
  return _tesseract.pixBilinearPtaColor(*args)
pixBilinearPtaColor = _tesseract.pixBilinearPtaColor

def pixBilinearColor(*args):
  return _tesseract.pixBilinearColor(*args)
pixBilinearColor = _tesseract.pixBilinearColor

def pixBilinearPtaGray(*args):
  return _tesseract.pixBilinearPtaGray(*args)
pixBilinearPtaGray = _tesseract.pixBilinearPtaGray

def pixBilinearGray(*args):
  return _tesseract.pixBilinearGray(*args)
pixBilinearGray = _tesseract.pixBilinearGray

def pixBilinearPtaWithAlpha(*args):
  return _tesseract.pixBilinearPtaWithAlpha(*args)
pixBilinearPtaWithAlpha = _tesseract.pixBilinearPtaWithAlpha

def getBilinearXformCoeffs(*args):
  return _tesseract.getBilinearXformCoeffs(*args)
getBilinearXformCoeffs = _tesseract.getBilinearXformCoeffs

def bilinearXformSampledPt(*args):
  return _tesseract.bilinearXformSampledPt(*args)
bilinearXformSampledPt = _tesseract.bilinearXformSampledPt

def bilinearXformPt(*args):
  return _tesseract.bilinearXformPt(*args)
bilinearXformPt = _tesseract.bilinearXformPt

def pixOtsuAdaptiveThreshold(*args):
  return _tesseract.pixOtsuAdaptiveThreshold(*args)
pixOtsuAdaptiveThreshold = _tesseract.pixOtsuAdaptiveThreshold

def pixOtsuThreshOnBackgroundNorm(*args):
  return _tesseract.pixOtsuThreshOnBackgroundNorm(*args)
pixOtsuThreshOnBackgroundNorm = _tesseract.pixOtsuThreshOnBackgroundNorm

def pixMaskedThreshOnBackgroundNorm(*args):
  return _tesseract.pixMaskedThreshOnBackgroundNorm(*args)
pixMaskedThreshOnBackgroundNorm = _tesseract.pixMaskedThreshOnBackgroundNorm

def pixSauvolaBinarizeTiled(*args):
  return _tesseract.pixSauvolaBinarizeTiled(*args)
pixSauvolaBinarizeTiled = _tesseract.pixSauvolaBinarizeTiled

def pixSauvolaBinarize(*args):
  return _tesseract.pixSauvolaBinarize(*args)
pixSauvolaBinarize = _tesseract.pixSauvolaBinarize

def pixSauvolaGetThreshold(*args):
  return _tesseract.pixSauvolaGetThreshold(*args)
pixSauvolaGetThreshold = _tesseract.pixSauvolaGetThreshold

def pixApplyLocalThreshold(*args):
  return _tesseract.pixApplyLocalThreshold(*args)
pixApplyLocalThreshold = _tesseract.pixApplyLocalThreshold

def pixExpandBinaryReplicate(*args):
  return _tesseract.pixExpandBinaryReplicate(*args)
pixExpandBinaryReplicate = _tesseract.pixExpandBinaryReplicate

def pixExpandBinaryPower2(*args):
  return _tesseract.pixExpandBinaryPower2(*args)
pixExpandBinaryPower2 = _tesseract.pixExpandBinaryPower2

def pixReduceBinary2(*args):
  return _tesseract.pixReduceBinary2(*args)
pixReduceBinary2 = _tesseract.pixReduceBinary2

def pixReduceRankBinaryCascade(*args):
  return _tesseract.pixReduceRankBinaryCascade(*args)
pixReduceRankBinaryCascade = _tesseract.pixReduceRankBinaryCascade

def pixReduceRankBinary2(*args):
  return _tesseract.pixReduceRankBinary2(*args)
pixReduceRankBinary2 = _tesseract.pixReduceRankBinary2

def makeSubsampleTab2x():
  return _tesseract.makeSubsampleTab2x()
makeSubsampleTab2x = _tesseract.makeSubsampleTab2x

def pixBlend(*args):
  return _tesseract.pixBlend(*args)
pixBlend = _tesseract.pixBlend

def pixBlendMask(*args):
  return _tesseract.pixBlendMask(*args)
pixBlendMask = _tesseract.pixBlendMask

def pixBlendGray(*args):
  return _tesseract.pixBlendGray(*args)
pixBlendGray = _tesseract.pixBlendGray

def pixBlendGrayInverse(*args):
  return _tesseract.pixBlendGrayInverse(*args)
pixBlendGrayInverse = _tesseract.pixBlendGrayInverse

def pixBlendColor(*args):
  return _tesseract.pixBlendColor(*args)
pixBlendColor = _tesseract.pixBlendColor

def pixBlendColorByChannel(*args):
  return _tesseract.pixBlendColorByChannel(*args)
pixBlendColorByChannel = _tesseract.pixBlendColorByChannel

def pixBlendGrayAdapt(*args):
  return _tesseract.pixBlendGrayAdapt(*args)
pixBlendGrayAdapt = _tesseract.pixBlendGrayAdapt

def pixFadeWithGray(*args):
  return _tesseract.pixFadeWithGray(*args)
pixFadeWithGray = _tesseract.pixFadeWithGray

def pixBlendHardLight(*args):
  return _tesseract.pixBlendHardLight(*args)
pixBlendHardLight = _tesseract.pixBlendHardLight

def pixBlendCmap(*args):
  return _tesseract.pixBlendCmap(*args)
pixBlendCmap = _tesseract.pixBlendCmap

def pixBlendWithGrayMask(*args):
  return _tesseract.pixBlendWithGrayMask(*args)
pixBlendWithGrayMask = _tesseract.pixBlendWithGrayMask

def pixBlendBackgroundToColor(*args):
  return _tesseract.pixBlendBackgroundToColor(*args)
pixBlendBackgroundToColor = _tesseract.pixBlendBackgroundToColor

def pixMultiplyByColor(*args):
  return _tesseract.pixMultiplyByColor(*args)
pixMultiplyByColor = _tesseract.pixMultiplyByColor

def pixAlphaBlendUniform(*args):
  return _tesseract.pixAlphaBlendUniform(*args)
pixAlphaBlendUniform = _tesseract.pixAlphaBlendUniform

def pixAddAlphaToBlend(*args):
  return _tesseract.pixAddAlphaToBlend(*args)
pixAddAlphaToBlend = _tesseract.pixAddAlphaToBlend

def pixSetAlphaOverWhite(*args):
  return _tesseract.pixSetAlphaOverWhite(*args)
pixSetAlphaOverWhite = _tesseract.pixSetAlphaOverWhite

def bmfCreate(*args):
  return _tesseract.bmfCreate(*args)
bmfCreate = _tesseract.bmfCreate

def bmfDestroy(*args):
  return _tesseract.bmfDestroy(*args)
bmfDestroy = _tesseract.bmfDestroy

def bmfGetPix(*args):
  return _tesseract.bmfGetPix(*args)
bmfGetPix = _tesseract.bmfGetPix

def bmfGetWidth(*args):
  return _tesseract.bmfGetWidth(*args)
bmfGetWidth = _tesseract.bmfGetWidth

def bmfGetBaseline(*args):
  return _tesseract.bmfGetBaseline(*args)
bmfGetBaseline = _tesseract.bmfGetBaseline

def pixaGetFont(*args):
  return _tesseract.pixaGetFont(*args)
pixaGetFont = _tesseract.pixaGetFont

def pixaSaveFont(*args):
  return _tesseract.pixaSaveFont(*args)
pixaSaveFont = _tesseract.pixaSaveFont

def pixaGenerateFont(*args):
  return _tesseract.pixaGenerateFont(*args)
pixaGenerateFont = _tesseract.pixaGenerateFont

def pixReadStreamBmp(*args):
  return _tesseract.pixReadStreamBmp(*args)
pixReadStreamBmp = _tesseract.pixReadStreamBmp

def pixWriteStreamBmp(*args):
  return _tesseract.pixWriteStreamBmp(*args)
pixWriteStreamBmp = _tesseract.pixWriteStreamBmp

def pixReadMemBmp(*args):
  return _tesseract.pixReadMemBmp(*args)
pixReadMemBmp = _tesseract.pixReadMemBmp

def pixWriteMemBmp(*args):
  return _tesseract.pixWriteMemBmp(*args)
pixWriteMemBmp = _tesseract.pixWriteMemBmp

def boxCreate(*args):
  return _tesseract.boxCreate(*args)
boxCreate = _tesseract.boxCreate

def boxCreateValid(*args):
  return _tesseract.boxCreateValid(*args)
boxCreateValid = _tesseract.boxCreateValid

def boxCopy(*args):
  return _tesseract.boxCopy(*args)
boxCopy = _tesseract.boxCopy

def boxClone(*args):
  return _tesseract.boxClone(*args)
boxClone = _tesseract.boxClone

def boxDestroy(*args):
  return _tesseract.boxDestroy(*args)
boxDestroy = _tesseract.boxDestroy

def boxGetGeometry(*args):
  return _tesseract.boxGetGeometry(*args)
boxGetGeometry = _tesseract.boxGetGeometry

def boxSetGeometry(*args):
  return _tesseract.boxSetGeometry(*args)
boxSetGeometry = _tesseract.boxSetGeometry

def boxGetSideLocation(*args):
  return _tesseract.boxGetSideLocation(*args)
boxGetSideLocation = _tesseract.boxGetSideLocation

def boxGetRefcount(*args):
  return _tesseract.boxGetRefcount(*args)
boxGetRefcount = _tesseract.boxGetRefcount

def boxChangeRefcount(*args):
  return _tesseract.boxChangeRefcount(*args)
boxChangeRefcount = _tesseract.boxChangeRefcount

def boxIsValid(*args):
  return _tesseract.boxIsValid(*args)
boxIsValid = _tesseract.boxIsValid

def boxaCreate(*args):
  return _tesseract.boxaCreate(*args)
boxaCreate = _tesseract.boxaCreate

def boxaCopy(*args):
  return _tesseract.boxaCopy(*args)
boxaCopy = _tesseract.boxaCopy

def boxaDestroy(*args):
  return _tesseract.boxaDestroy(*args)
boxaDestroy = _tesseract.boxaDestroy

def boxaAddBox(*args):
  return _tesseract.boxaAddBox(*args)
boxaAddBox = _tesseract.boxaAddBox

def boxaExtendArray(*args):
  return _tesseract.boxaExtendArray(*args)
boxaExtendArray = _tesseract.boxaExtendArray

def boxaExtendArrayToSize(*args):
  return _tesseract.boxaExtendArrayToSize(*args)
boxaExtendArrayToSize = _tesseract.boxaExtendArrayToSize

def boxaGetCount(*args):
  return _tesseract.boxaGetCount(*args)
boxaGetCount = _tesseract.boxaGetCount

def boxaGetValidCount(*args):
  return _tesseract.boxaGetValidCount(*args)
boxaGetValidCount = _tesseract.boxaGetValidCount

def boxaGetBox(*args):
  return _tesseract.boxaGetBox(*args)
boxaGetBox = _tesseract.boxaGetBox

def boxaGetValidBox(*args):
  return _tesseract.boxaGetValidBox(*args)
boxaGetValidBox = _tesseract.boxaGetValidBox

def boxaGetBoxGeometry(*args):
  return _tesseract.boxaGetBoxGeometry(*args)
boxaGetBoxGeometry = _tesseract.boxaGetBoxGeometry

def boxaIsFull(*args):
  return _tesseract.boxaIsFull(*args)
boxaIsFull = _tesseract.boxaIsFull

def boxaReplaceBox(*args):
  return _tesseract.boxaReplaceBox(*args)
boxaReplaceBox = _tesseract.boxaReplaceBox

def boxaInsertBox(*args):
  return _tesseract.boxaInsertBox(*args)
boxaInsertBox = _tesseract.boxaInsertBox

def boxaRemoveBox(*args):
  return _tesseract.boxaRemoveBox(*args)
boxaRemoveBox = _tesseract.boxaRemoveBox

def boxaRemoveBoxAndSave(*args):
  return _tesseract.boxaRemoveBoxAndSave(*args)
boxaRemoveBoxAndSave = _tesseract.boxaRemoveBoxAndSave

def boxaInitFull(*args):
  return _tesseract.boxaInitFull(*args)
boxaInitFull = _tesseract.boxaInitFull

def boxaClear(*args):
  return _tesseract.boxaClear(*args)
boxaClear = _tesseract.boxaClear

def boxaaCreate(*args):
  return _tesseract.boxaaCreate(*args)
boxaaCreate = _tesseract.boxaaCreate

def boxaaCopy(*args):
  return _tesseract.boxaaCopy(*args)
boxaaCopy = _tesseract.boxaaCopy

def boxaaDestroy(*args):
  return _tesseract.boxaaDestroy(*args)
boxaaDestroy = _tesseract.boxaaDestroy

def boxaaAddBoxa(*args):
  return _tesseract.boxaaAddBoxa(*args)
boxaaAddBoxa = _tesseract.boxaaAddBoxa

def boxaaExtendArray(*args):
  return _tesseract.boxaaExtendArray(*args)
boxaaExtendArray = _tesseract.boxaaExtendArray

def boxaaExtendArrayToSize(*args):
  return _tesseract.boxaaExtendArrayToSize(*args)
boxaaExtendArrayToSize = _tesseract.boxaaExtendArrayToSize

def boxaaGetCount(*args):
  return _tesseract.boxaaGetCount(*args)
boxaaGetCount = _tesseract.boxaaGetCount

def boxaaGetBoxCount(*args):
  return _tesseract.boxaaGetBoxCount(*args)
boxaaGetBoxCount = _tesseract.boxaaGetBoxCount

def boxaaGetBoxa(*args):
  return _tesseract.boxaaGetBoxa(*args)
boxaaGetBoxa = _tesseract.boxaaGetBoxa

def boxaaGetBox(*args):
  return _tesseract.boxaaGetBox(*args)
boxaaGetBox = _tesseract.boxaaGetBox

def boxaaInitFull(*args):
  return _tesseract.boxaaInitFull(*args)
boxaaInitFull = _tesseract.boxaaInitFull

def boxaaExtendWithInit(*args):
  return _tesseract.boxaaExtendWithInit(*args)
boxaaExtendWithInit = _tesseract.boxaaExtendWithInit

def boxaaReplaceBoxa(*args):
  return _tesseract.boxaaReplaceBoxa(*args)
boxaaReplaceBoxa = _tesseract.boxaaReplaceBoxa

def boxaaInsertBoxa(*args):
  return _tesseract.boxaaInsertBoxa(*args)
boxaaInsertBoxa = _tesseract.boxaaInsertBoxa

def boxaaRemoveBoxa(*args):
  return _tesseract.boxaaRemoveBoxa(*args)
boxaaRemoveBoxa = _tesseract.boxaaRemoveBoxa

def boxaaAddBox(*args):
  return _tesseract.boxaaAddBox(*args)
boxaaAddBox = _tesseract.boxaaAddBox

def boxaaReadFromFiles(*args):
  return _tesseract.boxaaReadFromFiles(*args)
boxaaReadFromFiles = _tesseract.boxaaReadFromFiles

def boxaaRead(*args):
  return _tesseract.boxaaRead(*args)
boxaaRead = _tesseract.boxaaRead

def boxaaReadStream(*args):
  return _tesseract.boxaaReadStream(*args)
boxaaReadStream = _tesseract.boxaaReadStream

def boxaaWrite(*args):
  return _tesseract.boxaaWrite(*args)
boxaaWrite = _tesseract.boxaaWrite

def boxaaWriteStream(*args):
  return _tesseract.boxaaWriteStream(*args)
boxaaWriteStream = _tesseract.boxaaWriteStream

def boxaRead(*args):
  return _tesseract.boxaRead(*args)
boxaRead = _tesseract.boxaRead

def boxaReadStream(*args):
  return _tesseract.boxaReadStream(*args)
boxaReadStream = _tesseract.boxaReadStream

def boxaReadMem(*args):
  return _tesseract.boxaReadMem(*args)
boxaReadMem = _tesseract.boxaReadMem

def boxaWrite(*args):
  return _tesseract.boxaWrite(*args)
boxaWrite = _tesseract.boxaWrite

def boxaWriteStream(*args):
  return _tesseract.boxaWriteStream(*args)
boxaWriteStream = _tesseract.boxaWriteStream

def boxaWriteMem(*args):
  return _tesseract.boxaWriteMem(*args)
boxaWriteMem = _tesseract.boxaWriteMem

def boxPrintStreamInfo(*args):
  return _tesseract.boxPrintStreamInfo(*args)
boxPrintStreamInfo = _tesseract.boxPrintStreamInfo

def boxContains(*args):
  return _tesseract.boxContains(*args)
boxContains = _tesseract.boxContains

def boxIntersects(*args):
  return _tesseract.boxIntersects(*args)
boxIntersects = _tesseract.boxIntersects

def boxaContainedInBox(*args):
  return _tesseract.boxaContainedInBox(*args)
boxaContainedInBox = _tesseract.boxaContainedInBox

def boxaIntersectsBox(*args):
  return _tesseract.boxaIntersectsBox(*args)
boxaIntersectsBox = _tesseract.boxaIntersectsBox

def boxaClipToBox(*args):
  return _tesseract.boxaClipToBox(*args)
boxaClipToBox = _tesseract.boxaClipToBox

def boxaCombineOverlaps(*args):
  return _tesseract.boxaCombineOverlaps(*args)
boxaCombineOverlaps = _tesseract.boxaCombineOverlaps

def boxOverlapRegion(*args):
  return _tesseract.boxOverlapRegion(*args)
boxOverlapRegion = _tesseract.boxOverlapRegion

def boxBoundingRegion(*args):
  return _tesseract.boxBoundingRegion(*args)
boxBoundingRegion = _tesseract.boxBoundingRegion

def boxOverlapFraction(*args):
  return _tesseract.boxOverlapFraction(*args)
boxOverlapFraction = _tesseract.boxOverlapFraction

def boxOverlapArea(*args):
  return _tesseract.boxOverlapArea(*args)
boxOverlapArea = _tesseract.boxOverlapArea

def boxaHandleOverlaps(*args):
  return _tesseract.boxaHandleOverlaps(*args)
boxaHandleOverlaps = _tesseract.boxaHandleOverlaps

def boxSeparationDistance(*args):
  return _tesseract.boxSeparationDistance(*args)
boxSeparationDistance = _tesseract.boxSeparationDistance

def boxContainsPt(*args):
  return _tesseract.boxContainsPt(*args)
boxContainsPt = _tesseract.boxContainsPt

def boxaGetNearestToPt(*args):
  return _tesseract.boxaGetNearestToPt(*args)
boxaGetNearestToPt = _tesseract.boxaGetNearestToPt

def boxGetCenter(*args):
  return _tesseract.boxGetCenter(*args)
boxGetCenter = _tesseract.boxGetCenter

def boxIntersectByLine(*args):
  return _tesseract.boxIntersectByLine(*args)
boxIntersectByLine = _tesseract.boxIntersectByLine

def boxClipToRectangle(*args):
  return _tesseract.boxClipToRectangle(*args)
boxClipToRectangle = _tesseract.boxClipToRectangle

def boxClipToRectangleParams(*args):
  return _tesseract.boxClipToRectangleParams(*args)
boxClipToRectangleParams = _tesseract.boxClipToRectangleParams

def boxRelocateOneSide(*args):
  return _tesseract.boxRelocateOneSide(*args)
boxRelocateOneSide = _tesseract.boxRelocateOneSide

def boxAdjustSides(*args):
  return _tesseract.boxAdjustSides(*args)
boxAdjustSides = _tesseract.boxAdjustSides

def boxaSetSide(*args):
  return _tesseract.boxaSetSide(*args)
boxaSetSide = _tesseract.boxaSetSide

def boxaAdjustWidthToTarget(*args):
  return _tesseract.boxaAdjustWidthToTarget(*args)
boxaAdjustWidthToTarget = _tesseract.boxaAdjustWidthToTarget

def boxaAdjustHeightToTarget(*args):
  return _tesseract.boxaAdjustHeightToTarget(*args)
boxaAdjustHeightToTarget = _tesseract.boxaAdjustHeightToTarget

def boxEqual(*args):
  return _tesseract.boxEqual(*args)
boxEqual = _tesseract.boxEqual

def boxaEqual(*args):
  return _tesseract.boxaEqual(*args)
boxaEqual = _tesseract.boxaEqual

def boxSimilar(*args):
  return _tesseract.boxSimilar(*args)
boxSimilar = _tesseract.boxSimilar

def boxaSimilar(*args):
  return _tesseract.boxaSimilar(*args)
boxaSimilar = _tesseract.boxaSimilar

def boxaJoin(*args):
  return _tesseract.boxaJoin(*args)
boxaJoin = _tesseract.boxaJoin

def boxaaJoin(*args):
  return _tesseract.boxaaJoin(*args)
boxaaJoin = _tesseract.boxaaJoin

def boxaSplitEvenOdd(*args):
  return _tesseract.boxaSplitEvenOdd(*args)
boxaSplitEvenOdd = _tesseract.boxaSplitEvenOdd

def boxaMergeEvenOdd(*args):
  return _tesseract.boxaMergeEvenOdd(*args)
boxaMergeEvenOdd = _tesseract.boxaMergeEvenOdd

def boxaTransform(*args):
  return _tesseract.boxaTransform(*args)
boxaTransform = _tesseract.boxaTransform

def boxTransform(*args):
  return _tesseract.boxTransform(*args)
boxTransform = _tesseract.boxTransform

def boxaTransformOrdered(*args):
  return _tesseract.boxaTransformOrdered(*args)
boxaTransformOrdered = _tesseract.boxaTransformOrdered

def boxTransformOrdered(*args):
  return _tesseract.boxTransformOrdered(*args)
boxTransformOrdered = _tesseract.boxTransformOrdered

def boxaRotateOrth(*args):
  return _tesseract.boxaRotateOrth(*args)
boxaRotateOrth = _tesseract.boxaRotateOrth

def boxRotateOrth(*args):
  return _tesseract.boxRotateOrth(*args)
boxRotateOrth = _tesseract.boxRotateOrth

def boxaSort(*args):
  return _tesseract.boxaSort(*args)
boxaSort = _tesseract.boxaSort

def boxaBinSort(*args):
  return _tesseract.boxaBinSort(*args)
boxaBinSort = _tesseract.boxaBinSort

def boxaSortByIndex(*args):
  return _tesseract.boxaSortByIndex(*args)
boxaSortByIndex = _tesseract.boxaSortByIndex

def boxaSort2d(*args):
  return _tesseract.boxaSort2d(*args)
boxaSort2d = _tesseract.boxaSort2d

def boxaSort2dByIndex(*args):
  return _tesseract.boxaSort2dByIndex(*args)
boxaSort2dByIndex = _tesseract.boxaSort2dByIndex

def boxaExtractAsNuma(*args):
  return _tesseract.boxaExtractAsNuma(*args)
boxaExtractAsNuma = _tesseract.boxaExtractAsNuma

def boxaExtractAsPta(*args):
  return _tesseract.boxaExtractAsPta(*args)
boxaExtractAsPta = _tesseract.boxaExtractAsPta

def boxaGetRankSize(*args):
  return _tesseract.boxaGetRankSize(*args)
boxaGetRankSize = _tesseract.boxaGetRankSize

def boxaGetMedian(*args):
  return _tesseract.boxaGetMedian(*args)
boxaGetMedian = _tesseract.boxaGetMedian

def boxaaGetExtent(*args):
  return _tesseract.boxaaGetExtent(*args)
boxaaGetExtent = _tesseract.boxaaGetExtent

def boxaaFlattenToBoxa(*args):
  return _tesseract.boxaaFlattenToBoxa(*args)
boxaaFlattenToBoxa = _tesseract.boxaaFlattenToBoxa

def boxaaFlattenAligned(*args):
  return _tesseract.boxaaFlattenAligned(*args)
boxaaFlattenAligned = _tesseract.boxaaFlattenAligned

def boxaEncapsulateAligned(*args):
  return _tesseract.boxaEncapsulateAligned(*args)
boxaEncapsulateAligned = _tesseract.boxaEncapsulateAligned

def boxaaAlignBox(*args):
  return _tesseract.boxaaAlignBox(*args)
boxaaAlignBox = _tesseract.boxaaAlignBox

def pixMaskConnComp(*args):
  return _tesseract.pixMaskConnComp(*args)
pixMaskConnComp = _tesseract.pixMaskConnComp

def pixMaskBoxa(*args):
  return _tesseract.pixMaskBoxa(*args)
pixMaskBoxa = _tesseract.pixMaskBoxa

def pixPaintBoxa(*args):
  return _tesseract.pixPaintBoxa(*args)
pixPaintBoxa = _tesseract.pixPaintBoxa

def pixSetBlackOrWhiteBoxa(*args):
  return _tesseract.pixSetBlackOrWhiteBoxa(*args)
pixSetBlackOrWhiteBoxa = _tesseract.pixSetBlackOrWhiteBoxa

def pixPaintBoxaRandom(*args):
  return _tesseract.pixPaintBoxaRandom(*args)
pixPaintBoxaRandom = _tesseract.pixPaintBoxaRandom

def pixBlendBoxaRandom(*args):
  return _tesseract.pixBlendBoxaRandom(*args)
pixBlendBoxaRandom = _tesseract.pixBlendBoxaRandom

def pixDrawBoxa(*args):
  return _tesseract.pixDrawBoxa(*args)
pixDrawBoxa = _tesseract.pixDrawBoxa

def pixDrawBoxaRandom(*args):
  return _tesseract.pixDrawBoxaRandom(*args)
pixDrawBoxaRandom = _tesseract.pixDrawBoxaRandom

def boxaaDisplay(*args):
  return _tesseract.boxaaDisplay(*args)
boxaaDisplay = _tesseract.boxaaDisplay

def pixSplitIntoBoxa(*args):
  return _tesseract.pixSplitIntoBoxa(*args)
pixSplitIntoBoxa = _tesseract.pixSplitIntoBoxa

def pixSplitComponentIntoBoxa(*args):
  return _tesseract.pixSplitComponentIntoBoxa(*args)
pixSplitComponentIntoBoxa = _tesseract.pixSplitComponentIntoBoxa

def boxaCompareRegions(*args):
  return _tesseract.boxaCompareRegions(*args)
boxaCompareRegions = _tesseract.boxaCompareRegions

def boxaSelectRange(*args):
  return _tesseract.boxaSelectRange(*args)
boxaSelectRange = _tesseract.boxaSelectRange

def boxaaSelectRange(*args):
  return _tesseract.boxaaSelectRange(*args)
boxaaSelectRange = _tesseract.boxaaSelectRange

def boxaSelectBySize(*args):
  return _tesseract.boxaSelectBySize(*args)
boxaSelectBySize = _tesseract.boxaSelectBySize

def boxaMakeSizeIndicator(*args):
  return _tesseract.boxaMakeSizeIndicator(*args)
boxaMakeSizeIndicator = _tesseract.boxaMakeSizeIndicator

def boxaSelectByArea(*args):
  return _tesseract.boxaSelectByArea(*args)
boxaSelectByArea = _tesseract.boxaSelectByArea

def boxaMakeAreaIndicator(*args):
  return _tesseract.boxaMakeAreaIndicator(*args)
boxaMakeAreaIndicator = _tesseract.boxaMakeAreaIndicator

def boxaSelectWithIndicator(*args):
  return _tesseract.boxaSelectWithIndicator(*args)
boxaSelectWithIndicator = _tesseract.boxaSelectWithIndicator

def boxaPermutePseudorandom(*args):
  return _tesseract.boxaPermutePseudorandom(*args)
boxaPermutePseudorandom = _tesseract.boxaPermutePseudorandom

def boxaPermuteRandom(*args):
  return _tesseract.boxaPermuteRandom(*args)
boxaPermuteRandom = _tesseract.boxaPermuteRandom

def boxaSwapBoxes(*args):
  return _tesseract.boxaSwapBoxes(*args)
boxaSwapBoxes = _tesseract.boxaSwapBoxes

def boxaConvertToPta(*args):
  return _tesseract.boxaConvertToPta(*args)
boxaConvertToPta = _tesseract.boxaConvertToPta

def ptaConvertToBoxa(*args):
  return _tesseract.ptaConvertToBoxa(*args)
ptaConvertToBoxa = _tesseract.ptaConvertToBoxa

def boxaSmoothSequence(*args):
  return _tesseract.boxaSmoothSequence(*args)
boxaSmoothSequence = _tesseract.boxaSmoothSequence

def boxaLinearFit(*args):
  return _tesseract.boxaLinearFit(*args)
boxaLinearFit = _tesseract.boxaLinearFit

def boxaConstrainSize(*args):
  return _tesseract.boxaConstrainSize(*args)
boxaConstrainSize = _tesseract.boxaConstrainSize

def boxaReconcileEvenOddHeight(*args):
  return _tesseract.boxaReconcileEvenOddHeight(*args)
boxaReconcileEvenOddHeight = _tesseract.boxaReconcileEvenOddHeight

def boxaPlotSides(*args):
  return _tesseract.boxaPlotSides(*args)
boxaPlotSides = _tesseract.boxaPlotSides

def boxaGetExtent(*args):
  return _tesseract.boxaGetExtent(*args)
boxaGetExtent = _tesseract.boxaGetExtent

def boxaGetCoverage(*args):
  return _tesseract.boxaGetCoverage(*args)
boxaGetCoverage = _tesseract.boxaGetCoverage

def boxaaSizeRange(*args):
  return _tesseract.boxaaSizeRange(*args)
boxaaSizeRange = _tesseract.boxaaSizeRange

def boxaSizeRange(*args):
  return _tesseract.boxaSizeRange(*args)
boxaSizeRange = _tesseract.boxaSizeRange

def boxaLocationRange(*args):
  return _tesseract.boxaLocationRange(*args)
boxaLocationRange = _tesseract.boxaLocationRange

def boxaGetArea(*args):
  return _tesseract.boxaGetArea(*args)
boxaGetArea = _tesseract.boxaGetArea

def boxaDisplayTiled(*args):
  return _tesseract.boxaDisplayTiled(*args)
boxaDisplayTiled = _tesseract.boxaDisplayTiled

def l_byteaCreate(*args):
  return _tesseract.l_byteaCreate(*args)
l_byteaCreate = _tesseract.l_byteaCreate

def l_byteaInitFromMem(*args):
  return _tesseract.l_byteaInitFromMem(*args)
l_byteaInitFromMem = _tesseract.l_byteaInitFromMem

def l_byteaInitFromFile(*args):
  return _tesseract.l_byteaInitFromFile(*args)
l_byteaInitFromFile = _tesseract.l_byteaInitFromFile

def l_byteaInitFromStream(*args):
  return _tesseract.l_byteaInitFromStream(*args)
l_byteaInitFromStream = _tesseract.l_byteaInitFromStream

def l_byteaCopy(*args):
  return _tesseract.l_byteaCopy(*args)
l_byteaCopy = _tesseract.l_byteaCopy

def l_byteaDestroy(*args):
  return _tesseract.l_byteaDestroy(*args)
l_byteaDestroy = _tesseract.l_byteaDestroy

def l_byteaGetSize(*args):
  return _tesseract.l_byteaGetSize(*args)
l_byteaGetSize = _tesseract.l_byteaGetSize

def l_byteaGetData(*args):
  return _tesseract.l_byteaGetData(*args)
l_byteaGetData = _tesseract.l_byteaGetData

def l_byteaCopyData(*args):
  return _tesseract.l_byteaCopyData(*args)
l_byteaCopyData = _tesseract.l_byteaCopyData

def l_byteaAppendData(*args):
  return _tesseract.l_byteaAppendData(*args)
l_byteaAppendData = _tesseract.l_byteaAppendData

def l_byteaAppendString(*args):
  return _tesseract.l_byteaAppendString(*args)
l_byteaAppendString = _tesseract.l_byteaAppendString

def l_byteaJoin(*args):
  return _tesseract.l_byteaJoin(*args)
l_byteaJoin = _tesseract.l_byteaJoin

def l_byteaSplit(*args):
  return _tesseract.l_byteaSplit(*args)
l_byteaSplit = _tesseract.l_byteaSplit

def l_byteaFindEachSequence(*args):
  return _tesseract.l_byteaFindEachSequence(*args)
l_byteaFindEachSequence = _tesseract.l_byteaFindEachSequence

def l_byteaWrite(*args):
  return _tesseract.l_byteaWrite(*args)
l_byteaWrite = _tesseract.l_byteaWrite

def l_byteaWriteStream(*args):
  return _tesseract.l_byteaWriteStream(*args)
l_byteaWriteStream = _tesseract.l_byteaWriteStream

def ccbaCreate(*args):
  return _tesseract.ccbaCreate(*args)
ccbaCreate = _tesseract.ccbaCreate

def ccbaDestroy(*args):
  return _tesseract.ccbaDestroy(*args)
ccbaDestroy = _tesseract.ccbaDestroy

def ccbCreate(*args):
  return _tesseract.ccbCreate(*args)
ccbCreate = _tesseract.ccbCreate

def ccbDestroy(*args):
  return _tesseract.ccbDestroy(*args)
ccbDestroy = _tesseract.ccbDestroy

def ccbaAddCcb(*args):
  return _tesseract.ccbaAddCcb(*args)
ccbaAddCcb = _tesseract.ccbaAddCcb

def ccbaGetCount(*args):
  return _tesseract.ccbaGetCount(*args)
ccbaGetCount = _tesseract.ccbaGetCount

def ccbaGetCcb(*args):
  return _tesseract.ccbaGetCcb(*args)
ccbaGetCcb = _tesseract.ccbaGetCcb

def pixGetAllCCBorders(*args):
  return _tesseract.pixGetAllCCBorders(*args)
pixGetAllCCBorders = _tesseract.pixGetAllCCBorders

def pixGetCCBorders(*args):
  return _tesseract.pixGetCCBorders(*args)
pixGetCCBorders = _tesseract.pixGetCCBorders

def pixGetOuterBordersPtaa(*args):
  return _tesseract.pixGetOuterBordersPtaa(*args)
pixGetOuterBordersPtaa = _tesseract.pixGetOuterBordersPtaa

def pixGetOuterBorderPta(*args):
  return _tesseract.pixGetOuterBorderPta(*args)
pixGetOuterBorderPta = _tesseract.pixGetOuterBorderPta

def pixGetOuterBorder(*args):
  return _tesseract.pixGetOuterBorder(*args)
pixGetOuterBorder = _tesseract.pixGetOuterBorder

def pixGetHoleBorder(*args):
  return _tesseract.pixGetHoleBorder(*args)
pixGetHoleBorder = _tesseract.pixGetHoleBorder

def findNextBorderPixel(*args):
  return _tesseract.findNextBorderPixel(*args)
findNextBorderPixel = _tesseract.findNextBorderPixel

def locateOutsideSeedPixel(*args):
  return _tesseract.locateOutsideSeedPixel(*args)
locateOutsideSeedPixel = _tesseract.locateOutsideSeedPixel

def ccbaGenerateGlobalLocs(*args):
  return _tesseract.ccbaGenerateGlobalLocs(*args)
ccbaGenerateGlobalLocs = _tesseract.ccbaGenerateGlobalLocs

def ccbaGenerateStepChains(*args):
  return _tesseract.ccbaGenerateStepChains(*args)
ccbaGenerateStepChains = _tesseract.ccbaGenerateStepChains

def ccbaStepChainsToPixCoords(*args):
  return _tesseract.ccbaStepChainsToPixCoords(*args)
ccbaStepChainsToPixCoords = _tesseract.ccbaStepChainsToPixCoords

def ccbaGenerateSPGlobalLocs(*args):
  return _tesseract.ccbaGenerateSPGlobalLocs(*args)
ccbaGenerateSPGlobalLocs = _tesseract.ccbaGenerateSPGlobalLocs

def ccbaGenerateSinglePath(*args):
  return _tesseract.ccbaGenerateSinglePath(*args)
ccbaGenerateSinglePath = _tesseract.ccbaGenerateSinglePath

def getCutPathForHole(*args):
  return _tesseract.getCutPathForHole(*args)
getCutPathForHole = _tesseract.getCutPathForHole

def ccbaDisplayBorder(*args):
  return _tesseract.ccbaDisplayBorder(*args)
ccbaDisplayBorder = _tesseract.ccbaDisplayBorder

def ccbaDisplaySPBorder(*args):
  return _tesseract.ccbaDisplaySPBorder(*args)
ccbaDisplaySPBorder = _tesseract.ccbaDisplaySPBorder

def ccbaDisplayImage1(*args):
  return _tesseract.ccbaDisplayImage1(*args)
ccbaDisplayImage1 = _tesseract.ccbaDisplayImage1

def ccbaDisplayImage2(*args):
  return _tesseract.ccbaDisplayImage2(*args)
ccbaDisplayImage2 = _tesseract.ccbaDisplayImage2

def ccbaWrite(*args):
  return _tesseract.ccbaWrite(*args)
ccbaWrite = _tesseract.ccbaWrite

def ccbaWriteStream(*args):
  return _tesseract.ccbaWriteStream(*args)
ccbaWriteStream = _tesseract.ccbaWriteStream

def ccbaRead(*args):
  return _tesseract.ccbaRead(*args)
ccbaRead = _tesseract.ccbaRead

def ccbaReadStream(*args):
  return _tesseract.ccbaReadStream(*args)
ccbaReadStream = _tesseract.ccbaReadStream

def ccbaWriteSVG(*args):
  return _tesseract.ccbaWriteSVG(*args)
ccbaWriteSVG = _tesseract.ccbaWriteSVG

def ccbaWriteSVGString(*args):
  return _tesseract.ccbaWriteSVGString(*args)
ccbaWriteSVGString = _tesseract.ccbaWriteSVGString

def pixThin(*args):
  return _tesseract.pixThin(*args)
pixThin = _tesseract.pixThin

def pixThinGeneral(*args):
  return _tesseract.pixThinGeneral(*args)
pixThinGeneral = _tesseract.pixThinGeneral

def pixThinExamples(*args):
  return _tesseract.pixThinExamples(*args)
pixThinExamples = _tesseract.pixThinExamples

def jbCorrelation(*args):
  return _tesseract.jbCorrelation(*args)
jbCorrelation = _tesseract.jbCorrelation

def jbRankHaus(*args):
  return _tesseract.jbRankHaus(*args)
jbRankHaus = _tesseract.jbRankHaus

def jbWordsInTextlines(*args):
  return _tesseract.jbWordsInTextlines(*args)
jbWordsInTextlines = _tesseract.jbWordsInTextlines

def pixGetWordsInTextlines(*args):
  return _tesseract.pixGetWordsInTextlines(*args)
pixGetWordsInTextlines = _tesseract.pixGetWordsInTextlines

def pixGetWordBoxesInTextlines(*args):
  return _tesseract.pixGetWordBoxesInTextlines(*args)
pixGetWordBoxesInTextlines = _tesseract.pixGetWordBoxesInTextlines

def boxaExtractSortedPattern(*args):
  return _tesseract.boxaExtractSortedPattern(*args)
boxaExtractSortedPattern = _tesseract.boxaExtractSortedPattern

def numaaCompareImagesByBoxes(*args):
  return _tesseract.numaaCompareImagesByBoxes(*args)
numaaCompareImagesByBoxes = _tesseract.numaaCompareImagesByBoxes

def pixColorContent(*args):
  return _tesseract.pixColorContent(*args)
pixColorContent = _tesseract.pixColorContent

def pixColorMagnitude(*args):
  return _tesseract.pixColorMagnitude(*args)
pixColorMagnitude = _tesseract.pixColorMagnitude

def pixMaskOverColorPixels(*args):
  return _tesseract.pixMaskOverColorPixels(*args)
pixMaskOverColorPixels = _tesseract.pixMaskOverColorPixels

def pixColorFraction(*args):
  return _tesseract.pixColorFraction(*args)
pixColorFraction = _tesseract.pixColorFraction

def pixNumSignificantGrayColors(*args):
  return _tesseract.pixNumSignificantGrayColors(*args)
pixNumSignificantGrayColors = _tesseract.pixNumSignificantGrayColors

def pixColorsForQuantization(*args):
  return _tesseract.pixColorsForQuantization(*args)
pixColorsForQuantization = _tesseract.pixColorsForQuantization

def pixNumColors(*args):
  return _tesseract.pixNumColors(*args)
pixNumColors = _tesseract.pixNumColors

def pixGetMostPopulatedColors(*args):
  return _tesseract.pixGetMostPopulatedColors(*args)
pixGetMostPopulatedColors = _tesseract.pixGetMostPopulatedColors

def pixSimpleColorQuantize(*args):
  return _tesseract.pixSimpleColorQuantize(*args)
pixSimpleColorQuantize = _tesseract.pixSimpleColorQuantize

def pixGetRGBHistogram(*args):
  return _tesseract.pixGetRGBHistogram(*args)
pixGetRGBHistogram = _tesseract.pixGetRGBHistogram

def makeRGBIndexTables(*args):
  return _tesseract.makeRGBIndexTables(*args)
makeRGBIndexTables = _tesseract.makeRGBIndexTables

def getRGBFromIndex(*args):
  return _tesseract.getRGBFromIndex(*args)
getRGBFromIndex = _tesseract.getRGBFromIndex

def pixColorGrayRegions(*args):
  return _tesseract.pixColorGrayRegions(*args)
pixColorGrayRegions = _tesseract.pixColorGrayRegions

def pixColorGray(*args):
  return _tesseract.pixColorGray(*args)
pixColorGray = _tesseract.pixColorGray

def pixSnapColor(*args):
  return _tesseract.pixSnapColor(*args)
pixSnapColor = _tesseract.pixSnapColor

def pixSnapColorCmap(*args):
  return _tesseract.pixSnapColorCmap(*args)
pixSnapColorCmap = _tesseract.pixSnapColorCmap

def pixLinearMapToTargetColor(*args):
  return _tesseract.pixLinearMapToTargetColor(*args)
pixLinearMapToTargetColor = _tesseract.pixLinearMapToTargetColor

def pixelLinearMapToTargetColor(*args):
  return _tesseract.pixelLinearMapToTargetColor(*args)
pixelLinearMapToTargetColor = _tesseract.pixelLinearMapToTargetColor

def pixShiftByComponent(*args):
  return _tesseract.pixShiftByComponent(*args)
pixShiftByComponent = _tesseract.pixShiftByComponent

def pixelShiftByComponent(*args):
  return _tesseract.pixelShiftByComponent(*args)
pixelShiftByComponent = _tesseract.pixelShiftByComponent

def pixelFractionalShift(*args):
  return _tesseract.pixelFractionalShift(*args)
pixelFractionalShift = _tesseract.pixelFractionalShift

def pixcmapCreate(*args):
  return _tesseract.pixcmapCreate(*args)
pixcmapCreate = _tesseract.pixcmapCreate

def pixcmapCreateRandom(*args):
  return _tesseract.pixcmapCreateRandom(*args)
pixcmapCreateRandom = _tesseract.pixcmapCreateRandom

def pixcmapCreateLinear(*args):
  return _tesseract.pixcmapCreateLinear(*args)
pixcmapCreateLinear = _tesseract.pixcmapCreateLinear

def pixcmapCopy(*args):
  return _tesseract.pixcmapCopy(*args)
pixcmapCopy = _tesseract.pixcmapCopy

def pixcmapDestroy(*args):
  return _tesseract.pixcmapDestroy(*args)
pixcmapDestroy = _tesseract.pixcmapDestroy

def pixcmapAddColor(*args):
  return _tesseract.pixcmapAddColor(*args)
pixcmapAddColor = _tesseract.pixcmapAddColor

def pixcmapAddRGBA(*args):
  return _tesseract.pixcmapAddRGBA(*args)
pixcmapAddRGBA = _tesseract.pixcmapAddRGBA

def pixcmapAddNewColor(*args):
  return _tesseract.pixcmapAddNewColor(*args)
pixcmapAddNewColor = _tesseract.pixcmapAddNewColor

def pixcmapAddNearestColor(*args):
  return _tesseract.pixcmapAddNearestColor(*args)
pixcmapAddNearestColor = _tesseract.pixcmapAddNearestColor

def pixcmapUsableColor(*args):
  return _tesseract.pixcmapUsableColor(*args)
pixcmapUsableColor = _tesseract.pixcmapUsableColor

def pixcmapAddBlackOrWhite(*args):
  return _tesseract.pixcmapAddBlackOrWhite(*args)
pixcmapAddBlackOrWhite = _tesseract.pixcmapAddBlackOrWhite

def pixcmapSetBlackAndWhite(*args):
  return _tesseract.pixcmapSetBlackAndWhite(*args)
pixcmapSetBlackAndWhite = _tesseract.pixcmapSetBlackAndWhite

def pixcmapGetCount(*args):
  return _tesseract.pixcmapGetCount(*args)
pixcmapGetCount = _tesseract.pixcmapGetCount

def pixcmapGetFreeCount(*args):
  return _tesseract.pixcmapGetFreeCount(*args)
pixcmapGetFreeCount = _tesseract.pixcmapGetFreeCount

def pixcmapGetDepth(*args):
  return _tesseract.pixcmapGetDepth(*args)
pixcmapGetDepth = _tesseract.pixcmapGetDepth

def pixcmapGetMinDepth(*args):
  return _tesseract.pixcmapGetMinDepth(*args)
pixcmapGetMinDepth = _tesseract.pixcmapGetMinDepth

def pixcmapClear(*args):
  return _tesseract.pixcmapClear(*args)
pixcmapClear = _tesseract.pixcmapClear

def pixcmapGetColor(*args):
  return _tesseract.pixcmapGetColor(*args)
pixcmapGetColor = _tesseract.pixcmapGetColor

def pixcmapGetColor32(*args):
  return _tesseract.pixcmapGetColor32(*args)
pixcmapGetColor32 = _tesseract.pixcmapGetColor32

def pixcmapGetRGBA(*args):
  return _tesseract.pixcmapGetRGBA(*args)
pixcmapGetRGBA = _tesseract.pixcmapGetRGBA

def pixcmapGetRGBA32(*args):
  return _tesseract.pixcmapGetRGBA32(*args)
pixcmapGetRGBA32 = _tesseract.pixcmapGetRGBA32

def pixcmapResetColor(*args):
  return _tesseract.pixcmapResetColor(*args)
pixcmapResetColor = _tesseract.pixcmapResetColor

def pixcmapGetIndex(*args):
  return _tesseract.pixcmapGetIndex(*args)
pixcmapGetIndex = _tesseract.pixcmapGetIndex

def pixcmapHasColor(*args):
  return _tesseract.pixcmapHasColor(*args)
pixcmapHasColor = _tesseract.pixcmapHasColor

def pixcmapIsOpaque(*args):
  return _tesseract.pixcmapIsOpaque(*args)
pixcmapIsOpaque = _tesseract.pixcmapIsOpaque

def pixcmapCountGrayColors(*args):
  return _tesseract.pixcmapCountGrayColors(*args)
pixcmapCountGrayColors = _tesseract.pixcmapCountGrayColors

def pixcmapGetRankIntensity(*args):
  return _tesseract.pixcmapGetRankIntensity(*args)
pixcmapGetRankIntensity = _tesseract.pixcmapGetRankIntensity

def pixcmapGetNearestIndex(*args):
  return _tesseract.pixcmapGetNearestIndex(*args)
pixcmapGetNearestIndex = _tesseract.pixcmapGetNearestIndex

def pixcmapGetNearestGrayIndex(*args):
  return _tesseract.pixcmapGetNearestGrayIndex(*args)
pixcmapGetNearestGrayIndex = _tesseract.pixcmapGetNearestGrayIndex

def pixcmapGetComponentRange(*args):
  return _tesseract.pixcmapGetComponentRange(*args)
pixcmapGetComponentRange = _tesseract.pixcmapGetComponentRange

def pixcmapGetExtremeValue(*args):
  return _tesseract.pixcmapGetExtremeValue(*args)
pixcmapGetExtremeValue = _tesseract.pixcmapGetExtremeValue

def pixcmapGrayToColor(*args):
  return _tesseract.pixcmapGrayToColor(*args)
pixcmapGrayToColor = _tesseract.pixcmapGrayToColor

def pixcmapColorToGray(*args):
  return _tesseract.pixcmapColorToGray(*args)
pixcmapColorToGray = _tesseract.pixcmapColorToGray

def pixcmapReadStream(*args):
  return _tesseract.pixcmapReadStream(*args)
pixcmapReadStream = _tesseract.pixcmapReadStream

def pixcmapWriteStream(*args):
  return _tesseract.pixcmapWriteStream(*args)
pixcmapWriteStream = _tesseract.pixcmapWriteStream

def pixcmapToArrays(*args):
  return _tesseract.pixcmapToArrays(*args)
pixcmapToArrays = _tesseract.pixcmapToArrays

def pixcmapToRGBTable(*args):
  return _tesseract.pixcmapToRGBTable(*args)
pixcmapToRGBTable = _tesseract.pixcmapToRGBTable

def pixcmapSerializeToMemory(*args):
  return _tesseract.pixcmapSerializeToMemory(*args)
pixcmapSerializeToMemory = _tesseract.pixcmapSerializeToMemory

def pixcmapDeserializeFromMemory(*args):
  return _tesseract.pixcmapDeserializeFromMemory(*args)
pixcmapDeserializeFromMemory = _tesseract.pixcmapDeserializeFromMemory

def pixcmapConvertToHex(*args):
  return _tesseract.pixcmapConvertToHex(*args)
pixcmapConvertToHex = _tesseract.pixcmapConvertToHex

def pixcmapGammaTRC(*args):
  return _tesseract.pixcmapGammaTRC(*args)
pixcmapGammaTRC = _tesseract.pixcmapGammaTRC

def pixcmapContrastTRC(*args):
  return _tesseract.pixcmapContrastTRC(*args)
pixcmapContrastTRC = _tesseract.pixcmapContrastTRC

def pixcmapShiftIntensity(*args):
  return _tesseract.pixcmapShiftIntensity(*args)
pixcmapShiftIntensity = _tesseract.pixcmapShiftIntensity

def pixcmapShiftByComponent(*args):
  return _tesseract.pixcmapShiftByComponent(*args)
pixcmapShiftByComponent = _tesseract.pixcmapShiftByComponent

def pixColorMorph(*args):
  return _tesseract.pixColorMorph(*args)
pixColorMorph = _tesseract.pixColorMorph

def pixOctreeColorQuant(*args):
  return _tesseract.pixOctreeColorQuant(*args)
pixOctreeColorQuant = _tesseract.pixOctreeColorQuant

def pixOctreeColorQuantGeneral(*args):
  return _tesseract.pixOctreeColorQuantGeneral(*args)
pixOctreeColorQuantGeneral = _tesseract.pixOctreeColorQuantGeneral

def makeRGBToIndexTables(*args):
  return _tesseract.makeRGBToIndexTables(*args)
makeRGBToIndexTables = _tesseract.makeRGBToIndexTables

def getOctcubeIndexFromRGB(*args):
  return _tesseract.getOctcubeIndexFromRGB(*args)
getOctcubeIndexFromRGB = _tesseract.getOctcubeIndexFromRGB

def pixOctreeQuantByPopulation(*args):
  return _tesseract.pixOctreeQuantByPopulation(*args)
pixOctreeQuantByPopulation = _tesseract.pixOctreeQuantByPopulation

def pixOctreeQuantNumColors(*args):
  return _tesseract.pixOctreeQuantNumColors(*args)
pixOctreeQuantNumColors = _tesseract.pixOctreeQuantNumColors

def pixOctcubeQuantMixedWithGray(*args):
  return _tesseract.pixOctcubeQuantMixedWithGray(*args)
pixOctcubeQuantMixedWithGray = _tesseract.pixOctcubeQuantMixedWithGray

def pixFixedOctcubeQuant256(*args):
  return _tesseract.pixFixedOctcubeQuant256(*args)
pixFixedOctcubeQuant256 = _tesseract.pixFixedOctcubeQuant256

def pixFewColorsOctcubeQuant1(*args):
  return _tesseract.pixFewColorsOctcubeQuant1(*args)
pixFewColorsOctcubeQuant1 = _tesseract.pixFewColorsOctcubeQuant1

def pixFewColorsOctcubeQuant2(*args):
  return _tesseract.pixFewColorsOctcubeQuant2(*args)
pixFewColorsOctcubeQuant2 = _tesseract.pixFewColorsOctcubeQuant2

def pixFewColorsOctcubeQuantMixed(*args):
  return _tesseract.pixFewColorsOctcubeQuantMixed(*args)
pixFewColorsOctcubeQuantMixed = _tesseract.pixFewColorsOctcubeQuantMixed

def pixFixedOctcubeQuantGenRGB(*args):
  return _tesseract.pixFixedOctcubeQuantGenRGB(*args)
pixFixedOctcubeQuantGenRGB = _tesseract.pixFixedOctcubeQuantGenRGB

def pixQuantFromCmap(*args):
  return _tesseract.pixQuantFromCmap(*args)
pixQuantFromCmap = _tesseract.pixQuantFromCmap

def pixOctcubeQuantFromCmap(*args):
  return _tesseract.pixOctcubeQuantFromCmap(*args)
pixOctcubeQuantFromCmap = _tesseract.pixOctcubeQuantFromCmap

def pixOctcubeQuantFromCmapLUT(*args):
  return _tesseract.pixOctcubeQuantFromCmapLUT(*args)
pixOctcubeQuantFromCmapLUT = _tesseract.pixOctcubeQuantFromCmapLUT

def pixOctcubeHistogram(*args):
  return _tesseract.pixOctcubeHistogram(*args)
pixOctcubeHistogram = _tesseract.pixOctcubeHistogram

def pixcmapToOctcubeLUT(*args):
  return _tesseract.pixcmapToOctcubeLUT(*args)
pixcmapToOctcubeLUT = _tesseract.pixcmapToOctcubeLUT

def pixRemoveUnusedColors(*args):
  return _tesseract.pixRemoveUnusedColors(*args)
pixRemoveUnusedColors = _tesseract.pixRemoveUnusedColors

def pixNumberOccupiedOctcubes(*args):
  return _tesseract.pixNumberOccupiedOctcubes(*args)
pixNumberOccupiedOctcubes = _tesseract.pixNumberOccupiedOctcubes

def pixMedianCutQuant(*args):
  return _tesseract.pixMedianCutQuant(*args)
pixMedianCutQuant = _tesseract.pixMedianCutQuant

def pixMedianCutQuantGeneral(*args):
  return _tesseract.pixMedianCutQuantGeneral(*args)
pixMedianCutQuantGeneral = _tesseract.pixMedianCutQuantGeneral

def pixMedianCutQuantMixed(*args):
  return _tesseract.pixMedianCutQuantMixed(*args)
pixMedianCutQuantMixed = _tesseract.pixMedianCutQuantMixed

def pixFewColorsMedianCutQuantMixed(*args):
  return _tesseract.pixFewColorsMedianCutQuantMixed(*args)
pixFewColorsMedianCutQuantMixed = _tesseract.pixFewColorsMedianCutQuantMixed

def pixMedianCutHisto(*args):
  return _tesseract.pixMedianCutHisto(*args)
pixMedianCutHisto = _tesseract.pixMedianCutHisto

def pixColorSegment(*args):
  return _tesseract.pixColorSegment(*args)
pixColorSegment = _tesseract.pixColorSegment

def pixColorSegmentCluster(*args):
  return _tesseract.pixColorSegmentCluster(*args)
pixColorSegmentCluster = _tesseract.pixColorSegmentCluster

def pixAssignToNearestColor(*args):
  return _tesseract.pixAssignToNearestColor(*args)
pixAssignToNearestColor = _tesseract.pixAssignToNearestColor

def pixColorSegmentClean(*args):
  return _tesseract.pixColorSegmentClean(*args)
pixColorSegmentClean = _tesseract.pixColorSegmentClean

def pixColorSegmentRemoveColors(*args):
  return _tesseract.pixColorSegmentRemoveColors(*args)
pixColorSegmentRemoveColors = _tesseract.pixColorSegmentRemoveColors

def pixConvertRGBToHSV(*args):
  return _tesseract.pixConvertRGBToHSV(*args)
pixConvertRGBToHSV = _tesseract.pixConvertRGBToHSV

def pixConvertHSVToRGB(*args):
  return _tesseract.pixConvertHSVToRGB(*args)
pixConvertHSVToRGB = _tesseract.pixConvertHSVToRGB

def convertRGBToHSV(*args):
  return _tesseract.convertRGBToHSV(*args)
convertRGBToHSV = _tesseract.convertRGBToHSV

def convertHSVToRGB(*args):
  return _tesseract.convertHSVToRGB(*args)
convertHSVToRGB = _tesseract.convertHSVToRGB

def pixcmapConvertRGBToHSV(*args):
  return _tesseract.pixcmapConvertRGBToHSV(*args)
pixcmapConvertRGBToHSV = _tesseract.pixcmapConvertRGBToHSV

def pixcmapConvertHSVToRGB(*args):
  return _tesseract.pixcmapConvertHSVToRGB(*args)
pixcmapConvertHSVToRGB = _tesseract.pixcmapConvertHSVToRGB

def pixConvertRGBToHue(*args):
  return _tesseract.pixConvertRGBToHue(*args)
pixConvertRGBToHue = _tesseract.pixConvertRGBToHue

def pixConvertRGBToSaturation(*args):
  return _tesseract.pixConvertRGBToSaturation(*args)
pixConvertRGBToSaturation = _tesseract.pixConvertRGBToSaturation

def pixConvertRGBToValue(*args):
  return _tesseract.pixConvertRGBToValue(*args)
pixConvertRGBToValue = _tesseract.pixConvertRGBToValue

def pixMakeRangeMaskHS(*args):
  return _tesseract.pixMakeRangeMaskHS(*args)
pixMakeRangeMaskHS = _tesseract.pixMakeRangeMaskHS

def pixMakeRangeMaskHV(*args):
  return _tesseract.pixMakeRangeMaskHV(*args)
pixMakeRangeMaskHV = _tesseract.pixMakeRangeMaskHV

def pixMakeRangeMaskSV(*args):
  return _tesseract.pixMakeRangeMaskSV(*args)
pixMakeRangeMaskSV = _tesseract.pixMakeRangeMaskSV

def pixMakeHistoHS(*args):
  return _tesseract.pixMakeHistoHS(*args)
pixMakeHistoHS = _tesseract.pixMakeHistoHS

def pixMakeHistoHV(*args):
  return _tesseract.pixMakeHistoHV(*args)
pixMakeHistoHV = _tesseract.pixMakeHistoHV

def pixMakeHistoSV(*args):
  return _tesseract.pixMakeHistoSV(*args)
pixMakeHistoSV = _tesseract.pixMakeHistoSV

def pixFindHistoPeaksHSV(*args):
  return _tesseract.pixFindHistoPeaksHSV(*args)
pixFindHistoPeaksHSV = _tesseract.pixFindHistoPeaksHSV

def displayHSVColorRange(*args):
  return _tesseract.displayHSVColorRange(*args)
displayHSVColorRange = _tesseract.displayHSVColorRange

def pixConvertRGBToYUV(*args):
  return _tesseract.pixConvertRGBToYUV(*args)
pixConvertRGBToYUV = _tesseract.pixConvertRGBToYUV

def pixConvertYUVToRGB(*args):
  return _tesseract.pixConvertYUVToRGB(*args)
pixConvertYUVToRGB = _tesseract.pixConvertYUVToRGB

def convertRGBToYUV(*args):
  return _tesseract.convertRGBToYUV(*args)
convertRGBToYUV = _tesseract.convertRGBToYUV

def convertYUVToRGB(*args):
  return _tesseract.convertYUVToRGB(*args)
convertYUVToRGB = _tesseract.convertYUVToRGB

def pixcmapConvertRGBToYUV(*args):
  return _tesseract.pixcmapConvertRGBToYUV(*args)
pixcmapConvertRGBToYUV = _tesseract.pixcmapConvertRGBToYUV

def pixcmapConvertYUVToRGB(*args):
  return _tesseract.pixcmapConvertYUVToRGB(*args)
pixcmapConvertYUVToRGB = _tesseract.pixcmapConvertYUVToRGB

def pixEqual(*args):
  return _tesseract.pixEqual(*args)
pixEqual = _tesseract.pixEqual

def pixEqualWithAlpha(*args):
  return _tesseract.pixEqualWithAlpha(*args)
pixEqualWithAlpha = _tesseract.pixEqualWithAlpha

def pixEqualWithCmap(*args):
  return _tesseract.pixEqualWithCmap(*args)
pixEqualWithCmap = _tesseract.pixEqualWithCmap

def pixUsesCmapColor(*args):
  return _tesseract.pixUsesCmapColor(*args)
pixUsesCmapColor = _tesseract.pixUsesCmapColor

def pixCorrelationBinary(*args):
  return _tesseract.pixCorrelationBinary(*args)
pixCorrelationBinary = _tesseract.pixCorrelationBinary

def pixDisplayDiffBinary(*args):
  return _tesseract.pixDisplayDiffBinary(*args)
pixDisplayDiffBinary = _tesseract.pixDisplayDiffBinary

def pixCompareBinary(*args):
  return _tesseract.pixCompareBinary(*args)
pixCompareBinary = _tesseract.pixCompareBinary

def pixCompareGrayOrRGB(*args):
  return _tesseract.pixCompareGrayOrRGB(*args)
pixCompareGrayOrRGB = _tesseract.pixCompareGrayOrRGB

def pixCompareGray(*args):
  return _tesseract.pixCompareGray(*args)
pixCompareGray = _tesseract.pixCompareGray

def pixCompareRGB(*args):
  return _tesseract.pixCompareRGB(*args)
pixCompareRGB = _tesseract.pixCompareRGB

def pixCompareTiled(*args):
  return _tesseract.pixCompareTiled(*args)
pixCompareTiled = _tesseract.pixCompareTiled

def pixCompareRankDifference(*args):
  return _tesseract.pixCompareRankDifference(*args)
pixCompareRankDifference = _tesseract.pixCompareRankDifference

def pixTestForSimilarity(*args):
  return _tesseract.pixTestForSimilarity(*args)
pixTestForSimilarity = _tesseract.pixTestForSimilarity

def pixGetDifferenceStats(*args):
  return _tesseract.pixGetDifferenceStats(*args)
pixGetDifferenceStats = _tesseract.pixGetDifferenceStats

def pixGetDifferenceHistogram(*args):
  return _tesseract.pixGetDifferenceHistogram(*args)
pixGetDifferenceHistogram = _tesseract.pixGetDifferenceHistogram

def pixGetPerceptualDiff(*args):
  return _tesseract.pixGetPerceptualDiff(*args)
pixGetPerceptualDiff = _tesseract.pixGetPerceptualDiff

def pixGetPSNR(*args):
  return _tesseract.pixGetPSNR(*args)
pixGetPSNR = _tesseract.pixGetPSNR

def pixCompareWithTranslation(*args):
  return _tesseract.pixCompareWithTranslation(*args)
pixCompareWithTranslation = _tesseract.pixCompareWithTranslation

def pixBestCorrelation(*args):
  return _tesseract.pixBestCorrelation(*args)
pixBestCorrelation = _tesseract.pixBestCorrelation

def pixConnComp(*args):
  return _tesseract.pixConnComp(*args)
pixConnComp = _tesseract.pixConnComp

def pixConnCompPixa(*args):
  return _tesseract.pixConnCompPixa(*args)
pixConnCompPixa = _tesseract.pixConnCompPixa

def pixConnCompBB(*args):
  return _tesseract.pixConnCompBB(*args)
pixConnCompBB = _tesseract.pixConnCompBB

def pixCountConnComp(*args):
  return _tesseract.pixCountConnComp(*args)
pixCountConnComp = _tesseract.pixCountConnComp

def nextOnPixelInRaster(*args):
  return _tesseract.nextOnPixelInRaster(*args)
nextOnPixelInRaster = _tesseract.nextOnPixelInRaster

def nextOnPixelInRasterLow(*args):
  return _tesseract.nextOnPixelInRasterLow(*args)
nextOnPixelInRasterLow = _tesseract.nextOnPixelInRasterLow

def pixSeedfillBB(*args):
  return _tesseract.pixSeedfillBB(*args)
pixSeedfillBB = _tesseract.pixSeedfillBB

def pixSeedfill4BB(*args):
  return _tesseract.pixSeedfill4BB(*args)
pixSeedfill4BB = _tesseract.pixSeedfill4BB

def pixSeedfill8BB(*args):
  return _tesseract.pixSeedfill8BB(*args)
pixSeedfill8BB = _tesseract.pixSeedfill8BB

def pixSeedfill(*args):
  return _tesseract.pixSeedfill(*args)
pixSeedfill = _tesseract.pixSeedfill

def pixSeedfill4(*args):
  return _tesseract.pixSeedfill4(*args)
pixSeedfill4 = _tesseract.pixSeedfill4

def pixSeedfill8(*args):
  return _tesseract.pixSeedfill8(*args)
pixSeedfill8 = _tesseract.pixSeedfill8

def convertFilesTo1bpp(*args):
  return _tesseract.convertFilesTo1bpp(*args)
convertFilesTo1bpp = _tesseract.convertFilesTo1bpp

def pixBlockconv(*args):
  return _tesseract.pixBlockconv(*args)
pixBlockconv = _tesseract.pixBlockconv

def pixBlockconvGray(*args):
  return _tesseract.pixBlockconvGray(*args)
pixBlockconvGray = _tesseract.pixBlockconvGray

def pixBlockconvAccum(*args):
  return _tesseract.pixBlockconvAccum(*args)
pixBlockconvAccum = _tesseract.pixBlockconvAccum

def pixBlockconvGrayUnnormalized(*args):
  return _tesseract.pixBlockconvGrayUnnormalized(*args)
pixBlockconvGrayUnnormalized = _tesseract.pixBlockconvGrayUnnormalized

def pixBlockconvTiled(*args):
  return _tesseract.pixBlockconvTiled(*args)
pixBlockconvTiled = _tesseract.pixBlockconvTiled

def pixBlockconvGrayTile(*args):
  return _tesseract.pixBlockconvGrayTile(*args)
pixBlockconvGrayTile = _tesseract.pixBlockconvGrayTile

def pixWindowedStats(*args):
  return _tesseract.pixWindowedStats(*args)
pixWindowedStats = _tesseract.pixWindowedStats

def pixWindowedMean(*args):
  return _tesseract.pixWindowedMean(*args)
pixWindowedMean = _tesseract.pixWindowedMean

def pixWindowedMeanSquare(*args):
  return _tesseract.pixWindowedMeanSquare(*args)
pixWindowedMeanSquare = _tesseract.pixWindowedMeanSquare

def pixWindowedVariance(*args):
  return _tesseract.pixWindowedVariance(*args)
pixWindowedVariance = _tesseract.pixWindowedVariance

def pixMeanSquareAccum(*args):
  return _tesseract.pixMeanSquareAccum(*args)
pixMeanSquareAccum = _tesseract.pixMeanSquareAccum

def pixBlockrank(*args):
  return _tesseract.pixBlockrank(*args)
pixBlockrank = _tesseract.pixBlockrank

def pixBlocksum(*args):
  return _tesseract.pixBlocksum(*args)
pixBlocksum = _tesseract.pixBlocksum

def pixCensusTransform(*args):
  return _tesseract.pixCensusTransform(*args)
pixCensusTransform = _tesseract.pixCensusTransform

def pixConvolve(*args):
  return _tesseract.pixConvolve(*args)
pixConvolve = _tesseract.pixConvolve

def pixConvolveSep(*args):
  return _tesseract.pixConvolveSep(*args)
pixConvolveSep = _tesseract.pixConvolveSep

def pixConvolveRGB(*args):
  return _tesseract.pixConvolveRGB(*args)
pixConvolveRGB = _tesseract.pixConvolveRGB

def pixConvolveRGBSep(*args):
  return _tesseract.pixConvolveRGBSep(*args)
pixConvolveRGBSep = _tesseract.pixConvolveRGBSep

def fpixConvolve(*args):
  return _tesseract.fpixConvolve(*args)
fpixConvolve = _tesseract.fpixConvolve

def fpixConvolveSep(*args):
  return _tesseract.fpixConvolveSep(*args)
fpixConvolveSep = _tesseract.fpixConvolveSep

def pixConvolveWithBias(*args):
  return _tesseract.pixConvolveWithBias(*args)
pixConvolveWithBias = _tesseract.pixConvolveWithBias

def l_setConvolveSampling(*args):
  return _tesseract.l_setConvolveSampling(*args)
l_setConvolveSampling = _tesseract.l_setConvolveSampling

def pixAddGaussianNoise(*args):
  return _tesseract.pixAddGaussianNoise(*args)
pixAddGaussianNoise = _tesseract.pixAddGaussianNoise

def gaussDistribSampling():
  return _tesseract.gaussDistribSampling()
gaussDistribSampling = _tesseract.gaussDistribSampling

def blockconvLow(*args):
  return _tesseract.blockconvLow(*args)
blockconvLow = _tesseract.blockconvLow

def blockconvAccumLow(*args):
  return _tesseract.blockconvAccumLow(*args)
blockconvAccumLow = _tesseract.blockconvAccumLow

def blocksumLow(*args):
  return _tesseract.blocksumLow(*args)
blocksumLow = _tesseract.blocksumLow

def pixCorrelationScore(*args):
  return _tesseract.pixCorrelationScore(*args)
pixCorrelationScore = _tesseract.pixCorrelationScore

def pixCorrelationScoreThresholded(*args):
  return _tesseract.pixCorrelationScoreThresholded(*args)
pixCorrelationScoreThresholded = _tesseract.pixCorrelationScoreThresholded

def pixCorrelationScoreSimple(*args):
  return _tesseract.pixCorrelationScoreSimple(*args)
pixCorrelationScoreSimple = _tesseract.pixCorrelationScoreSimple

def pixCorrelationScoreShifted(*args):
  return _tesseract.pixCorrelationScoreShifted(*args)
pixCorrelationScoreShifted = _tesseract.pixCorrelationScoreShifted

def dewarpCreate(*args):
  return _tesseract.dewarpCreate(*args)
dewarpCreate = _tesseract.dewarpCreate

def dewarpCreateRef(*args):
  return _tesseract.dewarpCreateRef(*args)
dewarpCreateRef = _tesseract.dewarpCreateRef

def dewarpDestroy(*args):
  return _tesseract.dewarpDestroy(*args)
dewarpDestroy = _tesseract.dewarpDestroy

def dewarpaCreate(*args):
  return _tesseract.dewarpaCreate(*args)
dewarpaCreate = _tesseract.dewarpaCreate

def dewarpaCreateFromPixacomp(*args):
  return _tesseract.dewarpaCreateFromPixacomp(*args)
dewarpaCreateFromPixacomp = _tesseract.dewarpaCreateFromPixacomp

def dewarpaDestroy(*args):
  return _tesseract.dewarpaDestroy(*args)
dewarpaDestroy = _tesseract.dewarpaDestroy

def dewarpaDestroyDewarp(*args):
  return _tesseract.dewarpaDestroyDewarp(*args)
dewarpaDestroyDewarp = _tesseract.dewarpaDestroyDewarp

def dewarpaInsertDewarp(*args):
  return _tesseract.dewarpaInsertDewarp(*args)
dewarpaInsertDewarp = _tesseract.dewarpaInsertDewarp

def dewarpaGetDewarp(*args):
  return _tesseract.dewarpaGetDewarp(*args)
dewarpaGetDewarp = _tesseract.dewarpaGetDewarp

def dewarpaSetCurvatures(*args):
  return _tesseract.dewarpaSetCurvatures(*args)
dewarpaSetCurvatures = _tesseract.dewarpaSetCurvatures

def dewarpaUseBothArrays(*args):
  return _tesseract.dewarpaUseBothArrays(*args)
dewarpaUseBothArrays = _tesseract.dewarpaUseBothArrays

def dewarpaSetMaxDistance(*args):
  return _tesseract.dewarpaSetMaxDistance(*args)
dewarpaSetMaxDistance = _tesseract.dewarpaSetMaxDistance

def dewarpRead(*args):
  return _tesseract.dewarpRead(*args)
dewarpRead = _tesseract.dewarpRead

def dewarpReadStream(*args):
  return _tesseract.dewarpReadStream(*args)
dewarpReadStream = _tesseract.dewarpReadStream

def dewarpWrite(*args):
  return _tesseract.dewarpWrite(*args)
dewarpWrite = _tesseract.dewarpWrite

def dewarpWriteStream(*args):
  return _tesseract.dewarpWriteStream(*args)
dewarpWriteStream = _tesseract.dewarpWriteStream

def dewarpaRead(*args):
  return _tesseract.dewarpaRead(*args)
dewarpaRead = _tesseract.dewarpaRead

def dewarpaReadStream(*args):
  return _tesseract.dewarpaReadStream(*args)
dewarpaReadStream = _tesseract.dewarpaReadStream

def dewarpaWrite(*args):
  return _tesseract.dewarpaWrite(*args)
dewarpaWrite = _tesseract.dewarpaWrite

def dewarpaWriteStream(*args):
  return _tesseract.dewarpaWriteStream(*args)
dewarpaWriteStream = _tesseract.dewarpaWriteStream

def dewarpBuildPageModel(*args):
  return _tesseract.dewarpBuildPageModel(*args)
dewarpBuildPageModel = _tesseract.dewarpBuildPageModel

def dewarpFindVertDisparity(*args):
  return _tesseract.dewarpFindVertDisparity(*args)
dewarpFindVertDisparity = _tesseract.dewarpFindVertDisparity

def dewarpFindHorizDisparity(*args):
  return _tesseract.dewarpFindHorizDisparity(*args)
dewarpFindHorizDisparity = _tesseract.dewarpFindHorizDisparity

def dewarpGetTextlineCenters(*args):
  return _tesseract.dewarpGetTextlineCenters(*args)
dewarpGetTextlineCenters = _tesseract.dewarpGetTextlineCenters

def dewarpRemoveShortLines(*args):
  return _tesseract.dewarpRemoveShortLines(*args)
dewarpRemoveShortLines = _tesseract.dewarpRemoveShortLines

def dewarpBuildLineModel(*args):
  return _tesseract.dewarpBuildLineModel(*args)
dewarpBuildLineModel = _tesseract.dewarpBuildLineModel

def dewarpaModelStatus(*args):
  return _tesseract.dewarpaModelStatus(*args)
dewarpaModelStatus = _tesseract.dewarpaModelStatus

def dewarpaApplyDisparity(*args):
  return _tesseract.dewarpaApplyDisparity(*args)
dewarpaApplyDisparity = _tesseract.dewarpaApplyDisparity

def dewarpMinimize(*args):
  return _tesseract.dewarpMinimize(*args)
dewarpMinimize = _tesseract.dewarpMinimize

def dewarpPopulateFullRes(*args):
  return _tesseract.dewarpPopulateFullRes(*args)
dewarpPopulateFullRes = _tesseract.dewarpPopulateFullRes

def dewarpSinglePage(*args):
  return _tesseract.dewarpSinglePage(*args)
dewarpSinglePage = _tesseract.dewarpSinglePage

def dewarpaListPages(*args):
  return _tesseract.dewarpaListPages(*args)
dewarpaListPages = _tesseract.dewarpaListPages

def dewarpaSetValidModels(*args):
  return _tesseract.dewarpaSetValidModels(*args)
dewarpaSetValidModels = _tesseract.dewarpaSetValidModels

def dewarpaInsertRefModels(*args):
  return _tesseract.dewarpaInsertRefModels(*args)
dewarpaInsertRefModels = _tesseract.dewarpaInsertRefModels

def dewarpaStripRefModels(*args):
  return _tesseract.dewarpaStripRefModels(*args)
dewarpaStripRefModels = _tesseract.dewarpaStripRefModels

def dewarpaRestoreModels(*args):
  return _tesseract.dewarpaRestoreModels(*args)
dewarpaRestoreModels = _tesseract.dewarpaRestoreModels

def dewarpaInfo(*args):
  return _tesseract.dewarpaInfo(*args)
dewarpaInfo = _tesseract.dewarpaInfo

def dewarpaModelStats(*args):
  return _tesseract.dewarpaModelStats(*args)
dewarpaModelStats = _tesseract.dewarpaModelStats

def dewarpaShowArrays(*args):
  return _tesseract.dewarpaShowArrays(*args)
dewarpaShowArrays = _tesseract.dewarpaShowArrays

def dewarpDebug(*args):
  return _tesseract.dewarpDebug(*args)
dewarpDebug = _tesseract.dewarpDebug

def dewarpShowResults(*args):
  return _tesseract.dewarpShowResults(*args)
dewarpShowResults = _tesseract.dewarpShowResults

def l_dnaCreate(*args):
  return _tesseract.l_dnaCreate(*args)
l_dnaCreate = _tesseract.l_dnaCreate

def l_dnaCreateFromIArray(*args):
  return _tesseract.l_dnaCreateFromIArray(*args)
l_dnaCreateFromIArray = _tesseract.l_dnaCreateFromIArray

def l_dnaCreateFromDArray(*args):
  return _tesseract.l_dnaCreateFromDArray(*args)
l_dnaCreateFromDArray = _tesseract.l_dnaCreateFromDArray

def l_dnaMakeSequence(*args):
  return _tesseract.l_dnaMakeSequence(*args)
l_dnaMakeSequence = _tesseract.l_dnaMakeSequence

def l_dnaDestroy(*args):
  return _tesseract.l_dnaDestroy(*args)
l_dnaDestroy = _tesseract.l_dnaDestroy

def l_dnaCopy(*args):
  return _tesseract.l_dnaCopy(*args)
l_dnaCopy = _tesseract.l_dnaCopy

def l_dnaClone(*args):
  return _tesseract.l_dnaClone(*args)
l_dnaClone = _tesseract.l_dnaClone

def l_dnaEmpty(*args):
  return _tesseract.l_dnaEmpty(*args)
l_dnaEmpty = _tesseract.l_dnaEmpty

def l_dnaAddNumber(*args):
  return _tesseract.l_dnaAddNumber(*args)
l_dnaAddNumber = _tesseract.l_dnaAddNumber

def l_dnaInsertNumber(*args):
  return _tesseract.l_dnaInsertNumber(*args)
l_dnaInsertNumber = _tesseract.l_dnaInsertNumber

def l_dnaRemoveNumber(*args):
  return _tesseract.l_dnaRemoveNumber(*args)
l_dnaRemoveNumber = _tesseract.l_dnaRemoveNumber

def l_dnaReplaceNumber(*args):
  return _tesseract.l_dnaReplaceNumber(*args)
l_dnaReplaceNumber = _tesseract.l_dnaReplaceNumber

def l_dnaGetCount(*args):
  return _tesseract.l_dnaGetCount(*args)
l_dnaGetCount = _tesseract.l_dnaGetCount

def l_dnaSetCount(*args):
  return _tesseract.l_dnaSetCount(*args)
l_dnaSetCount = _tesseract.l_dnaSetCount

def l_dnaGetDValue(*args):
  return _tesseract.l_dnaGetDValue(*args)
l_dnaGetDValue = _tesseract.l_dnaGetDValue

def l_dnaGetIValue(*args):
  return _tesseract.l_dnaGetIValue(*args)
l_dnaGetIValue = _tesseract.l_dnaGetIValue

def l_dnaSetValue(*args):
  return _tesseract.l_dnaSetValue(*args)
l_dnaSetValue = _tesseract.l_dnaSetValue

def l_dnaShiftValue(*args):
  return _tesseract.l_dnaShiftValue(*args)
l_dnaShiftValue = _tesseract.l_dnaShiftValue

def l_dnaGetIArray(*args):
  return _tesseract.l_dnaGetIArray(*args)
l_dnaGetIArray = _tesseract.l_dnaGetIArray

def l_dnaGetDArray(*args):
  return _tesseract.l_dnaGetDArray(*args)
l_dnaGetDArray = _tesseract.l_dnaGetDArray

def l_dnaGetRefcount(*args):
  return _tesseract.l_dnaGetRefcount(*args)
l_dnaGetRefcount = _tesseract.l_dnaGetRefcount

def l_dnaChangeRefcount(*args):
  return _tesseract.l_dnaChangeRefcount(*args)
l_dnaChangeRefcount = _tesseract.l_dnaChangeRefcount

def l_dnaGetParameters(*args):
  return _tesseract.l_dnaGetParameters(*args)
l_dnaGetParameters = _tesseract.l_dnaGetParameters

def l_dnaSetParameters(*args):
  return _tesseract.l_dnaSetParameters(*args)
l_dnaSetParameters = _tesseract.l_dnaSetParameters

def l_dnaCopyParameters(*args):
  return _tesseract.l_dnaCopyParameters(*args)
l_dnaCopyParameters = _tesseract.l_dnaCopyParameters

def l_dnaRead(*args):
  return _tesseract.l_dnaRead(*args)
l_dnaRead = _tesseract.l_dnaRead

def l_dnaReadStream(*args):
  return _tesseract.l_dnaReadStream(*args)
l_dnaReadStream = _tesseract.l_dnaReadStream

def l_dnaWrite(*args):
  return _tesseract.l_dnaWrite(*args)
l_dnaWrite = _tesseract.l_dnaWrite

def l_dnaWriteStream(*args):
  return _tesseract.l_dnaWriteStream(*args)
l_dnaWriteStream = _tesseract.l_dnaWriteStream

def l_dnaaCreate(*args):
  return _tesseract.l_dnaaCreate(*args)
l_dnaaCreate = _tesseract.l_dnaaCreate

def l_dnaaDestroy(*args):
  return _tesseract.l_dnaaDestroy(*args)
l_dnaaDestroy = _tesseract.l_dnaaDestroy

def l_dnaaAddDna(*args):
  return _tesseract.l_dnaaAddDna(*args)
l_dnaaAddDna = _tesseract.l_dnaaAddDna

def l_dnaaGetCount(*args):
  return _tesseract.l_dnaaGetCount(*args)
l_dnaaGetCount = _tesseract.l_dnaaGetCount

def l_dnaaGetDnaCount(*args):
  return _tesseract.l_dnaaGetDnaCount(*args)
l_dnaaGetDnaCount = _tesseract.l_dnaaGetDnaCount

def l_dnaaGetNumberCount(*args):
  return _tesseract.l_dnaaGetNumberCount(*args)
l_dnaaGetNumberCount = _tesseract.l_dnaaGetNumberCount

def l_dnaaGetDna(*args):
  return _tesseract.l_dnaaGetDna(*args)
l_dnaaGetDna = _tesseract.l_dnaaGetDna

def l_dnaaReplaceDna(*args):
  return _tesseract.l_dnaaReplaceDna(*args)
l_dnaaReplaceDna = _tesseract.l_dnaaReplaceDna

def l_dnaaGetValue(*args):
  return _tesseract.l_dnaaGetValue(*args)
l_dnaaGetValue = _tesseract.l_dnaaGetValue

def l_dnaaAddNumber(*args):
  return _tesseract.l_dnaaAddNumber(*args)
l_dnaaAddNumber = _tesseract.l_dnaaAddNumber

def l_dnaaRead(*args):
  return _tesseract.l_dnaaRead(*args)
l_dnaaRead = _tesseract.l_dnaaRead

def l_dnaaReadStream(*args):
  return _tesseract.l_dnaaReadStream(*args)
l_dnaaReadStream = _tesseract.l_dnaaReadStream

def l_dnaaWrite(*args):
  return _tesseract.l_dnaaWrite(*args)
l_dnaaWrite = _tesseract.l_dnaaWrite

def l_dnaaWriteStream(*args):
  return _tesseract.l_dnaaWriteStream(*args)
l_dnaaWriteStream = _tesseract.l_dnaaWriteStream

def l_dnaMakeDelta(*args):
  return _tesseract.l_dnaMakeDelta(*args)
l_dnaMakeDelta = _tesseract.l_dnaMakeDelta

def l_dnaConvertToNuma(*args):
  return _tesseract.l_dnaConvertToNuma(*args)
l_dnaConvertToNuma = _tesseract.l_dnaConvertToNuma

def numaConvertToDna(*args):
  return _tesseract.numaConvertToDna(*args)
numaConvertToDna = _tesseract.numaConvertToDna

def l_dnaJoin(*args):
  return _tesseract.l_dnaJoin(*args)
l_dnaJoin = _tesseract.l_dnaJoin

def pixMorphDwa_2(*args):
  return _tesseract.pixMorphDwa_2(*args)
pixMorphDwa_2 = _tesseract.pixMorphDwa_2

def pixFMorphopGen_2(*args):
  return _tesseract.pixFMorphopGen_2(*args)
pixFMorphopGen_2 = _tesseract.pixFMorphopGen_2

def fmorphopgen_low_2(*args):
  return _tesseract.fmorphopgen_low_2(*args)
fmorphopgen_low_2 = _tesseract.fmorphopgen_low_2

def pixSobelEdgeFilter(*args):
  return _tesseract.pixSobelEdgeFilter(*args)
pixSobelEdgeFilter = _tesseract.pixSobelEdgeFilter

def pixTwoSidedEdgeFilter(*args):
  return _tesseract.pixTwoSidedEdgeFilter(*args)
pixTwoSidedEdgeFilter = _tesseract.pixTwoSidedEdgeFilter

def pixMeasureEdgeSmoothness(*args):
  return _tesseract.pixMeasureEdgeSmoothness(*args)
pixMeasureEdgeSmoothness = _tesseract.pixMeasureEdgeSmoothness

def pixGetEdgeProfile(*args):
  return _tesseract.pixGetEdgeProfile(*args)
pixGetEdgeProfile = _tesseract.pixGetEdgeProfile

def pixGetLastOffPixelInRun(*args):
  return _tesseract.pixGetLastOffPixelInRun(*args)
pixGetLastOffPixelInRun = _tesseract.pixGetLastOffPixelInRun

def pixGetLastOnPixelInRun(*args):
  return _tesseract.pixGetLastOnPixelInRun(*args)
pixGetLastOnPixelInRun = _tesseract.pixGetLastOnPixelInRun

def pixGammaTRC(*args):
  return _tesseract.pixGammaTRC(*args)
pixGammaTRC = _tesseract.pixGammaTRC

def pixGammaTRCMasked(*args):
  return _tesseract.pixGammaTRCMasked(*args)
pixGammaTRCMasked = _tesseract.pixGammaTRCMasked

def pixGammaTRCWithAlpha(*args):
  return _tesseract.pixGammaTRCWithAlpha(*args)
pixGammaTRCWithAlpha = _tesseract.pixGammaTRCWithAlpha

def numaGammaTRC(*args):
  return _tesseract.numaGammaTRC(*args)
numaGammaTRC = _tesseract.numaGammaTRC

def pixContrastTRC(*args):
  return _tesseract.pixContrastTRC(*args)
pixContrastTRC = _tesseract.pixContrastTRC

def pixContrastTRCMasked(*args):
  return _tesseract.pixContrastTRCMasked(*args)
pixContrastTRCMasked = _tesseract.pixContrastTRCMasked

def numaContrastTRC(*args):
  return _tesseract.numaContrastTRC(*args)
numaContrastTRC = _tesseract.numaContrastTRC

def pixEqualizeTRC(*args):
  return _tesseract.pixEqualizeTRC(*args)
pixEqualizeTRC = _tesseract.pixEqualizeTRC

def numaEqualizeTRC(*args):
  return _tesseract.numaEqualizeTRC(*args)
numaEqualizeTRC = _tesseract.numaEqualizeTRC

def pixTRCMap(*args):
  return _tesseract.pixTRCMap(*args)
pixTRCMap = _tesseract.pixTRCMap

def pixUnsharpMasking(*args):
  return _tesseract.pixUnsharpMasking(*args)
pixUnsharpMasking = _tesseract.pixUnsharpMasking

def pixUnsharpMaskingGray(*args):
  return _tesseract.pixUnsharpMaskingGray(*args)
pixUnsharpMaskingGray = _tesseract.pixUnsharpMaskingGray

def pixUnsharpMaskingFast(*args):
  return _tesseract.pixUnsharpMaskingFast(*args)
pixUnsharpMaskingFast = _tesseract.pixUnsharpMaskingFast

def pixUnsharpMaskingGrayFast(*args):
  return _tesseract.pixUnsharpMaskingGrayFast(*args)
pixUnsharpMaskingGrayFast = _tesseract.pixUnsharpMaskingGrayFast

def pixUnsharpMaskingGray1D(*args):
  return _tesseract.pixUnsharpMaskingGray1D(*args)
pixUnsharpMaskingGray1D = _tesseract.pixUnsharpMaskingGray1D

def pixUnsharpMaskingGray2D(*args):
  return _tesseract.pixUnsharpMaskingGray2D(*args)
pixUnsharpMaskingGray2D = _tesseract.pixUnsharpMaskingGray2D

def pixModifyHue(*args):
  return _tesseract.pixModifyHue(*args)
pixModifyHue = _tesseract.pixModifyHue

def pixModifySaturation(*args):
  return _tesseract.pixModifySaturation(*args)
pixModifySaturation = _tesseract.pixModifySaturation

def pixMeasureSaturation(*args):
  return _tesseract.pixMeasureSaturation(*args)
pixMeasureSaturation = _tesseract.pixMeasureSaturation

def pixModifyBrightness(*args):
  return _tesseract.pixModifyBrightness(*args)
pixModifyBrightness = _tesseract.pixModifyBrightness

def pixColorShiftRGB(*args):
  return _tesseract.pixColorShiftRGB(*args)
pixColorShiftRGB = _tesseract.pixColorShiftRGB

def pixMultConstantColor(*args):
  return _tesseract.pixMultConstantColor(*args)
pixMultConstantColor = _tesseract.pixMultConstantColor

def pixMultMatrixColor(*args):
  return _tesseract.pixMultMatrixColor(*args)
pixMultMatrixColor = _tesseract.pixMultMatrixColor

def pixHalfEdgeByBandpass(*args):
  return _tesseract.pixHalfEdgeByBandpass(*args)
pixHalfEdgeByBandpass = _tesseract.pixHalfEdgeByBandpass

def fhmtautogen(*args):
  return _tesseract.fhmtautogen(*args)
fhmtautogen = _tesseract.fhmtautogen

def fhmtautogen1(*args):
  return _tesseract.fhmtautogen1(*args)
fhmtautogen1 = _tesseract.fhmtautogen1

def fhmtautogen2(*args):
  return _tesseract.fhmtautogen2(*args)
fhmtautogen2 = _tesseract.fhmtautogen2

def pixHMTDwa_1(*args):
  return _tesseract.pixHMTDwa_1(*args)
pixHMTDwa_1 = _tesseract.pixHMTDwa_1

def pixFHMTGen_1(*args):
  return _tesseract.pixFHMTGen_1(*args)
pixFHMTGen_1 = _tesseract.pixFHMTGen_1

def fhmtgen_low_1(*args):
  return _tesseract.fhmtgen_low_1(*args)
fhmtgen_low_1 = _tesseract.fhmtgen_low_1

def pixItalicWords(*args):
  return _tesseract.pixItalicWords(*args)
pixItalicWords = _tesseract.pixItalicWords

def pixOrientDetect(*args):
  return _tesseract.pixOrientDetect(*args)
pixOrientDetect = _tesseract.pixOrientDetect

def makeOrientDecision(*args):
  return _tesseract.makeOrientDecision(*args)
makeOrientDecision = _tesseract.makeOrientDecision

def pixUpDownDetect(*args):
  return _tesseract.pixUpDownDetect(*args)
pixUpDownDetect = _tesseract.pixUpDownDetect

def pixUpDownDetectGeneral(*args):
  return _tesseract.pixUpDownDetectGeneral(*args)
pixUpDownDetectGeneral = _tesseract.pixUpDownDetectGeneral

def pixOrientDetectDwa(*args):
  return _tesseract.pixOrientDetectDwa(*args)
pixOrientDetectDwa = _tesseract.pixOrientDetectDwa

def pixUpDownDetectDwa(*args):
  return _tesseract.pixUpDownDetectDwa(*args)
pixUpDownDetectDwa = _tesseract.pixUpDownDetectDwa

def pixUpDownDetectGeneralDwa(*args):
  return _tesseract.pixUpDownDetectGeneralDwa(*args)
pixUpDownDetectGeneralDwa = _tesseract.pixUpDownDetectGeneralDwa

def pixMirrorDetect(*args):
  return _tesseract.pixMirrorDetect(*args)
pixMirrorDetect = _tesseract.pixMirrorDetect

def pixMirrorDetectDwa(*args):
  return _tesseract.pixMirrorDetectDwa(*args)
pixMirrorDetectDwa = _tesseract.pixMirrorDetectDwa

def pixFlipFHMTGen(*args):
  return _tesseract.pixFlipFHMTGen(*args)
pixFlipFHMTGen = _tesseract.pixFlipFHMTGen

def fmorphautogen(*args):
  return _tesseract.fmorphautogen(*args)
fmorphautogen = _tesseract.fmorphautogen

def fmorphautogen1(*args):
  return _tesseract.fmorphautogen1(*args)
fmorphautogen1 = _tesseract.fmorphautogen1

def fmorphautogen2(*args):
  return _tesseract.fmorphautogen2(*args)
fmorphautogen2 = _tesseract.fmorphautogen2

def pixMorphDwa_1(*args):
  return _tesseract.pixMorphDwa_1(*args)
pixMorphDwa_1 = _tesseract.pixMorphDwa_1

def pixFMorphopGen_1(*args):
  return _tesseract.pixFMorphopGen_1(*args)
pixFMorphopGen_1 = _tesseract.pixFMorphopGen_1

def fmorphopgen_low_1(*args):
  return _tesseract.fmorphopgen_low_1(*args)
fmorphopgen_low_1 = _tesseract.fmorphopgen_low_1

def fpixCreate(*args):
  return _tesseract.fpixCreate(*args)
fpixCreate = _tesseract.fpixCreate

def fpixCreateTemplate(*args):
  return _tesseract.fpixCreateTemplate(*args)
fpixCreateTemplate = _tesseract.fpixCreateTemplate

def fpixClone(*args):
  return _tesseract.fpixClone(*args)
fpixClone = _tesseract.fpixClone

def fpixCopy(*args):
  return _tesseract.fpixCopy(*args)
fpixCopy = _tesseract.fpixCopy

def fpixResizeImageData(*args):
  return _tesseract.fpixResizeImageData(*args)
fpixResizeImageData = _tesseract.fpixResizeImageData

def fpixDestroy(*args):
  return _tesseract.fpixDestroy(*args)
fpixDestroy = _tesseract.fpixDestroy

def fpixGetDimensions(*args):
  return _tesseract.fpixGetDimensions(*args)
fpixGetDimensions = _tesseract.fpixGetDimensions

def fpixSetDimensions(*args):
  return _tesseract.fpixSetDimensions(*args)
fpixSetDimensions = _tesseract.fpixSetDimensions

def fpixGetWpl(*args):
  return _tesseract.fpixGetWpl(*args)
fpixGetWpl = _tesseract.fpixGetWpl

def fpixSetWpl(*args):
  return _tesseract.fpixSetWpl(*args)
fpixSetWpl = _tesseract.fpixSetWpl

def fpixGetRefcount(*args):
  return _tesseract.fpixGetRefcount(*args)
fpixGetRefcount = _tesseract.fpixGetRefcount

def fpixChangeRefcount(*args):
  return _tesseract.fpixChangeRefcount(*args)
fpixChangeRefcount = _tesseract.fpixChangeRefcount

def fpixGetResolution(*args):
  return _tesseract.fpixGetResolution(*args)
fpixGetResolution = _tesseract.fpixGetResolution

def fpixSetResolution(*args):
  return _tesseract.fpixSetResolution(*args)
fpixSetResolution = _tesseract.fpixSetResolution

def fpixCopyResolution(*args):
  return _tesseract.fpixCopyResolution(*args)
fpixCopyResolution = _tesseract.fpixCopyResolution

def fpixGetData(*args):
  return _tesseract.fpixGetData(*args)
fpixGetData = _tesseract.fpixGetData

def fpixSetData(*args):
  return _tesseract.fpixSetData(*args)
fpixSetData = _tesseract.fpixSetData

def fpixGetPixel(*args):
  return _tesseract.fpixGetPixel(*args)
fpixGetPixel = _tesseract.fpixGetPixel

def fpixSetPixel(*args):
  return _tesseract.fpixSetPixel(*args)
fpixSetPixel = _tesseract.fpixSetPixel

def fpixaCreate(*args):
  return _tesseract.fpixaCreate(*args)
fpixaCreate = _tesseract.fpixaCreate

def fpixaCopy(*args):
  return _tesseract.fpixaCopy(*args)
fpixaCopy = _tesseract.fpixaCopy

def fpixaDestroy(*args):
  return _tesseract.fpixaDestroy(*args)
fpixaDestroy = _tesseract.fpixaDestroy

def fpixaAddFPix(*args):
  return _tesseract.fpixaAddFPix(*args)
fpixaAddFPix = _tesseract.fpixaAddFPix

def fpixaGetCount(*args):
  return _tesseract.fpixaGetCount(*args)
fpixaGetCount = _tesseract.fpixaGetCount

def fpixaChangeRefcount(*args):
  return _tesseract.fpixaChangeRefcount(*args)
fpixaChangeRefcount = _tesseract.fpixaChangeRefcount

def fpixaGetFPix(*args):
  return _tesseract.fpixaGetFPix(*args)
fpixaGetFPix = _tesseract.fpixaGetFPix

def fpixaGetFPixDimensions(*args):
  return _tesseract.fpixaGetFPixDimensions(*args)
fpixaGetFPixDimensions = _tesseract.fpixaGetFPixDimensions

def fpixaGetPixel(*args):
  return _tesseract.fpixaGetPixel(*args)
fpixaGetPixel = _tesseract.fpixaGetPixel

def fpixaSetPixel(*args):
  return _tesseract.fpixaSetPixel(*args)
fpixaSetPixel = _tesseract.fpixaSetPixel

def dpixCreate(*args):
  return _tesseract.dpixCreate(*args)
dpixCreate = _tesseract.dpixCreate

def dpixCreateTemplate(*args):
  return _tesseract.dpixCreateTemplate(*args)
dpixCreateTemplate = _tesseract.dpixCreateTemplate

def dpixClone(*args):
  return _tesseract.dpixClone(*args)
dpixClone = _tesseract.dpixClone

def dpixCopy(*args):
  return _tesseract.dpixCopy(*args)
dpixCopy = _tesseract.dpixCopy

def dpixResizeImageData(*args):
  return _tesseract.dpixResizeImageData(*args)
dpixResizeImageData = _tesseract.dpixResizeImageData

def dpixDestroy(*args):
  return _tesseract.dpixDestroy(*args)
dpixDestroy = _tesseract.dpixDestroy

def dpixGetDimensions(*args):
  return _tesseract.dpixGetDimensions(*args)
dpixGetDimensions = _tesseract.dpixGetDimensions

def dpixSetDimensions(*args):
  return _tesseract.dpixSetDimensions(*args)
dpixSetDimensions = _tesseract.dpixSetDimensions

def dpixGetWpl(*args):
  return _tesseract.dpixGetWpl(*args)
dpixGetWpl = _tesseract.dpixGetWpl

def dpixSetWpl(*args):
  return _tesseract.dpixSetWpl(*args)
dpixSetWpl = _tesseract.dpixSetWpl

def dpixGetRefcount(*args):
  return _tesseract.dpixGetRefcount(*args)
dpixGetRefcount = _tesseract.dpixGetRefcount

def dpixChangeRefcount(*args):
  return _tesseract.dpixChangeRefcount(*args)
dpixChangeRefcount = _tesseract.dpixChangeRefcount

def dpixGetResolution(*args):
  return _tesseract.dpixGetResolution(*args)
dpixGetResolution = _tesseract.dpixGetResolution

def dpixSetResolution(*args):
  return _tesseract.dpixSetResolution(*args)
dpixSetResolution = _tesseract.dpixSetResolution

def dpixCopyResolution(*args):
  return _tesseract.dpixCopyResolution(*args)
dpixCopyResolution = _tesseract.dpixCopyResolution

def dpixGetData(*args):
  return _tesseract.dpixGetData(*args)
dpixGetData = _tesseract.dpixGetData

def dpixSetData(*args):
  return _tesseract.dpixSetData(*args)
dpixSetData = _tesseract.dpixSetData

def dpixGetPixel(*args):
  return _tesseract.dpixGetPixel(*args)
dpixGetPixel = _tesseract.dpixGetPixel

def dpixSetPixel(*args):
  return _tesseract.dpixSetPixel(*args)
dpixSetPixel = _tesseract.dpixSetPixel

def fpixRead(*args):
  return _tesseract.fpixRead(*args)
fpixRead = _tesseract.fpixRead

def fpixReadStream(*args):
  return _tesseract.fpixReadStream(*args)
fpixReadStream = _tesseract.fpixReadStream

def fpixWrite(*args):
  return _tesseract.fpixWrite(*args)
fpixWrite = _tesseract.fpixWrite

def fpixWriteStream(*args):
  return _tesseract.fpixWriteStream(*args)
fpixWriteStream = _tesseract.fpixWriteStream

def fpixEndianByteSwap(*args):
  return _tesseract.fpixEndianByteSwap(*args)
fpixEndianByteSwap = _tesseract.fpixEndianByteSwap

def dpixRead(*args):
  return _tesseract.dpixRead(*args)
dpixRead = _tesseract.dpixRead

def dpixReadStream(*args):
  return _tesseract.dpixReadStream(*args)
dpixReadStream = _tesseract.dpixReadStream

def dpixWrite(*args):
  return _tesseract.dpixWrite(*args)
dpixWrite = _tesseract.dpixWrite

def dpixWriteStream(*args):
  return _tesseract.dpixWriteStream(*args)
dpixWriteStream = _tesseract.dpixWriteStream

def dpixEndianByteSwap(*args):
  return _tesseract.dpixEndianByteSwap(*args)
dpixEndianByteSwap = _tesseract.dpixEndianByteSwap

def fpixPrintStream(*args):
  return _tesseract.fpixPrintStream(*args)
fpixPrintStream = _tesseract.fpixPrintStream

def pixConvertToFPix(*args):
  return _tesseract.pixConvertToFPix(*args)
pixConvertToFPix = _tesseract.pixConvertToFPix

def pixConvertToDPix(*args):
  return _tesseract.pixConvertToDPix(*args)
pixConvertToDPix = _tesseract.pixConvertToDPix

def fpixConvertToPix(*args):
  return _tesseract.fpixConvertToPix(*args)
fpixConvertToPix = _tesseract.fpixConvertToPix

def fpixDisplayMaxDynamicRange(*args):
  return _tesseract.fpixDisplayMaxDynamicRange(*args)
fpixDisplayMaxDynamicRange = _tesseract.fpixDisplayMaxDynamicRange

def fpixConvertToDPix(*args):
  return _tesseract.fpixConvertToDPix(*args)
fpixConvertToDPix = _tesseract.fpixConvertToDPix

def dpixConvertToPix(*args):
  return _tesseract.dpixConvertToPix(*args)
dpixConvertToPix = _tesseract.dpixConvertToPix

def dpixConvertToFPix(*args):
  return _tesseract.dpixConvertToFPix(*args)
dpixConvertToFPix = _tesseract.dpixConvertToFPix

def fpixGetMin(*args):
  return _tesseract.fpixGetMin(*args)
fpixGetMin = _tesseract.fpixGetMin

def fpixGetMax(*args):
  return _tesseract.fpixGetMax(*args)
fpixGetMax = _tesseract.fpixGetMax

def dpixGetMin(*args):
  return _tesseract.dpixGetMin(*args)
dpixGetMin = _tesseract.dpixGetMin

def dpixGetMax(*args):
  return _tesseract.dpixGetMax(*args)
dpixGetMax = _tesseract.dpixGetMax

def fpixScaleByInteger(*args):
  return _tesseract.fpixScaleByInteger(*args)
fpixScaleByInteger = _tesseract.fpixScaleByInteger

def dpixScaleByInteger(*args):
  return _tesseract.dpixScaleByInteger(*args)
dpixScaleByInteger = _tesseract.dpixScaleByInteger

def fpixLinearCombination(*args):
  return _tesseract.fpixLinearCombination(*args)
fpixLinearCombination = _tesseract.fpixLinearCombination

def fpixAddMultConstant(*args):
  return _tesseract.fpixAddMultConstant(*args)
fpixAddMultConstant = _tesseract.fpixAddMultConstant

def dpixLinearCombination(*args):
  return _tesseract.dpixLinearCombination(*args)
dpixLinearCombination = _tesseract.dpixLinearCombination

def dpixAddMultConstant(*args):
  return _tesseract.dpixAddMultConstant(*args)
dpixAddMultConstant = _tesseract.dpixAddMultConstant

def fpixSetAllArbitrary(*args):
  return _tesseract.fpixSetAllArbitrary(*args)
fpixSetAllArbitrary = _tesseract.fpixSetAllArbitrary

def dpixSetAllArbitrary(*args):
  return _tesseract.dpixSetAllArbitrary(*args)
dpixSetAllArbitrary = _tesseract.dpixSetAllArbitrary

def fpixAddBorder(*args):
  return _tesseract.fpixAddBorder(*args)
fpixAddBorder = _tesseract.fpixAddBorder

def fpixRemoveBorder(*args):
  return _tesseract.fpixRemoveBorder(*args)
fpixRemoveBorder = _tesseract.fpixRemoveBorder

def fpixAddMirroredBorder(*args):
  return _tesseract.fpixAddMirroredBorder(*args)
fpixAddMirroredBorder = _tesseract.fpixAddMirroredBorder

def fpixAddContinuedBorder(*args):
  return _tesseract.fpixAddContinuedBorder(*args)
fpixAddContinuedBorder = _tesseract.fpixAddContinuedBorder

def fpixAddSlopeBorder(*args):
  return _tesseract.fpixAddSlopeBorder(*args)
fpixAddSlopeBorder = _tesseract.fpixAddSlopeBorder

def fpixRasterop(*args):
  return _tesseract.fpixRasterop(*args)
fpixRasterop = _tesseract.fpixRasterop

def fpixRotateOrth(*args):
  return _tesseract.fpixRotateOrth(*args)
fpixRotateOrth = _tesseract.fpixRotateOrth

def fpixRotate180(*args):
  return _tesseract.fpixRotate180(*args)
fpixRotate180 = _tesseract.fpixRotate180

def fpixRotate90(*args):
  return _tesseract.fpixRotate90(*args)
fpixRotate90 = _tesseract.fpixRotate90

def fpixFlipLR(*args):
  return _tesseract.fpixFlipLR(*args)
fpixFlipLR = _tesseract.fpixFlipLR

def fpixFlipTB(*args):
  return _tesseract.fpixFlipTB(*args)
fpixFlipTB = _tesseract.fpixFlipTB

def fpixAffinePta(*args):
  return _tesseract.fpixAffinePta(*args)
fpixAffinePta = _tesseract.fpixAffinePta

def fpixAffine(*args):
  return _tesseract.fpixAffine(*args)
fpixAffine = _tesseract.fpixAffine

def fpixProjectivePta(*args):
  return _tesseract.fpixProjectivePta(*args)
fpixProjectivePta = _tesseract.fpixProjectivePta

def fpixProjective(*args):
  return _tesseract.fpixProjective(*args)
fpixProjective = _tesseract.fpixProjective

def linearInterpolatePixelFloat(*args):
  return _tesseract.linearInterpolatePixelFloat(*args)
linearInterpolatePixelFloat = _tesseract.linearInterpolatePixelFloat

def fpixThresholdToPix(*args):
  return _tesseract.fpixThresholdToPix(*args)
fpixThresholdToPix = _tesseract.fpixThresholdToPix

def pixComponentFunction(*args):
  return _tesseract.pixComponentFunction(*args)
pixComponentFunction = _tesseract.pixComponentFunction

def pixReadStreamGif(*args):
  return _tesseract.pixReadStreamGif(*args)
pixReadStreamGif = _tesseract.pixReadStreamGif

def pixWriteStreamGif(*args):
  return _tesseract.pixWriteStreamGif(*args)
pixWriteStreamGif = _tesseract.pixWriteStreamGif

def pixReadMemGif(*args):
  return _tesseract.pixReadMemGif(*args)
pixReadMemGif = _tesseract.pixReadMemGif

def pixWriteMemGif(*args):
  return _tesseract.pixWriteMemGif(*args)
pixWriteMemGif = _tesseract.pixWriteMemGif

def gplotCreate(*args):
  return _tesseract.gplotCreate(*args)
gplotCreate = _tesseract.gplotCreate

def gplotDestroy(*args):
  return _tesseract.gplotDestroy(*args)
gplotDestroy = _tesseract.gplotDestroy

def gplotAddPlot(*args):
  return _tesseract.gplotAddPlot(*args)
gplotAddPlot = _tesseract.gplotAddPlot

def gplotSetScaling(*args):
  return _tesseract.gplotSetScaling(*args)
gplotSetScaling = _tesseract.gplotSetScaling

def gplotMakeOutput(*args):
  return _tesseract.gplotMakeOutput(*args)
gplotMakeOutput = _tesseract.gplotMakeOutput

def gplotGenCommandFile(*args):
  return _tesseract.gplotGenCommandFile(*args)
gplotGenCommandFile = _tesseract.gplotGenCommandFile

def gplotGenDataFiles(*args):
  return _tesseract.gplotGenDataFiles(*args)
gplotGenDataFiles = _tesseract.gplotGenDataFiles

def gplotSimple1(*args):
  return _tesseract.gplotSimple1(*args)
gplotSimple1 = _tesseract.gplotSimple1

def gplotSimple2(*args):
  return _tesseract.gplotSimple2(*args)
gplotSimple2 = _tesseract.gplotSimple2

def gplotSimpleN(*args):
  return _tesseract.gplotSimpleN(*args)
gplotSimpleN = _tesseract.gplotSimpleN

def gplotRead(*args):
  return _tesseract.gplotRead(*args)
gplotRead = _tesseract.gplotRead

def gplotWrite(*args):
  return _tesseract.gplotWrite(*args)
gplotWrite = _tesseract.gplotWrite

def generatePtaLine(*args):
  return _tesseract.generatePtaLine(*args)
generatePtaLine = _tesseract.generatePtaLine

def generatePtaWideLine(*args):
  return _tesseract.generatePtaWideLine(*args)
generatePtaWideLine = _tesseract.generatePtaWideLine

def generatePtaBox(*args):
  return _tesseract.generatePtaBox(*args)
generatePtaBox = _tesseract.generatePtaBox

def generatePtaBoxa(*args):
  return _tesseract.generatePtaBoxa(*args)
generatePtaBoxa = _tesseract.generatePtaBoxa

def generatePtaHashBox(*args):
  return _tesseract.generatePtaHashBox(*args)
generatePtaHashBox = _tesseract.generatePtaHashBox

def generatePtaHashBoxa(*args):
  return _tesseract.generatePtaHashBoxa(*args)
generatePtaHashBoxa = _tesseract.generatePtaHashBoxa

def generatePtaaBoxa(*args):
  return _tesseract.generatePtaaBoxa(*args)
generatePtaaBoxa = _tesseract.generatePtaaBoxa

def generatePtaaHashBoxa(*args):
  return _tesseract.generatePtaaHashBoxa(*args)
generatePtaaHashBoxa = _tesseract.generatePtaaHashBoxa

def generatePtaPolyline(*args):
  return _tesseract.generatePtaPolyline(*args)
generatePtaPolyline = _tesseract.generatePtaPolyline

def convertPtaLineTo4cc(*args):
  return _tesseract.convertPtaLineTo4cc(*args)
convertPtaLineTo4cc = _tesseract.convertPtaLineTo4cc

def generatePtaFilledCircle(*args):
  return _tesseract.generatePtaFilledCircle(*args)
generatePtaFilledCircle = _tesseract.generatePtaFilledCircle

def generatePtaFilledSquare(*args):
  return _tesseract.generatePtaFilledSquare(*args)
generatePtaFilledSquare = _tesseract.generatePtaFilledSquare

def generatePtaLineFromPt(*args):
  return _tesseract.generatePtaLineFromPt(*args)
generatePtaLineFromPt = _tesseract.generatePtaLineFromPt

def locatePtRadially(*args):
  return _tesseract.locatePtRadially(*args)
locatePtRadially = _tesseract.locatePtRadially

def generatePlotPtaFromNuma(*args):
  return _tesseract.generatePlotPtaFromNuma(*args)
generatePlotPtaFromNuma = _tesseract.generatePlotPtaFromNuma

def pixRenderPta(*args):
  return _tesseract.pixRenderPta(*args)
pixRenderPta = _tesseract.pixRenderPta

def pixRenderPtaArb(*args):
  return _tesseract.pixRenderPtaArb(*args)
pixRenderPtaArb = _tesseract.pixRenderPtaArb

def pixRenderPtaBlend(*args):
  return _tesseract.pixRenderPtaBlend(*args)
pixRenderPtaBlend = _tesseract.pixRenderPtaBlend

def pixRenderLine(*args):
  return _tesseract.pixRenderLine(*args)
pixRenderLine = _tesseract.pixRenderLine

def pixRenderLineArb(*args):
  return _tesseract.pixRenderLineArb(*args)
pixRenderLineArb = _tesseract.pixRenderLineArb

def pixRenderLineBlend(*args):
  return _tesseract.pixRenderLineBlend(*args)
pixRenderLineBlend = _tesseract.pixRenderLineBlend

def pixRenderBox(*args):
  return _tesseract.pixRenderBox(*args)
pixRenderBox = _tesseract.pixRenderBox

def pixRenderBoxArb(*args):
  return _tesseract.pixRenderBoxArb(*args)
pixRenderBoxArb = _tesseract.pixRenderBoxArb

def pixRenderBoxBlend(*args):
  return _tesseract.pixRenderBoxBlend(*args)
pixRenderBoxBlend = _tesseract.pixRenderBoxBlend

def pixRenderBoxa(*args):
  return _tesseract.pixRenderBoxa(*args)
pixRenderBoxa = _tesseract.pixRenderBoxa

def pixRenderBoxaArb(*args):
  return _tesseract.pixRenderBoxaArb(*args)
pixRenderBoxaArb = _tesseract.pixRenderBoxaArb

def pixRenderBoxaBlend(*args):
  return _tesseract.pixRenderBoxaBlend(*args)
pixRenderBoxaBlend = _tesseract.pixRenderBoxaBlend

def pixRenderHashBox(*args):
  return _tesseract.pixRenderHashBox(*args)
pixRenderHashBox = _tesseract.pixRenderHashBox

def pixRenderHashBoxArb(*args):
  return _tesseract.pixRenderHashBoxArb(*args)
pixRenderHashBoxArb = _tesseract.pixRenderHashBoxArb

def pixRenderHashBoxBlend(*args):
  return _tesseract.pixRenderHashBoxBlend(*args)
pixRenderHashBoxBlend = _tesseract.pixRenderHashBoxBlend

def pixRenderHashBoxa(*args):
  return _tesseract.pixRenderHashBoxa(*args)
pixRenderHashBoxa = _tesseract.pixRenderHashBoxa

def pixRenderHashBoxaArb(*args):
  return _tesseract.pixRenderHashBoxaArb(*args)
pixRenderHashBoxaArb = _tesseract.pixRenderHashBoxaArb

def pixRenderHashBoxaBlend(*args):
  return _tesseract.pixRenderHashBoxaBlend(*args)
pixRenderHashBoxaBlend = _tesseract.pixRenderHashBoxaBlend

def pixRenderPolyline(*args):
  return _tesseract.pixRenderPolyline(*args)
pixRenderPolyline = _tesseract.pixRenderPolyline

def pixRenderPolylineArb(*args):
  return _tesseract.pixRenderPolylineArb(*args)
pixRenderPolylineArb = _tesseract.pixRenderPolylineArb

def pixRenderPolylineBlend(*args):
  return _tesseract.pixRenderPolylineBlend(*args)
pixRenderPolylineBlend = _tesseract.pixRenderPolylineBlend

def pixRenderRandomCmapPtaa(*args):
  return _tesseract.pixRenderRandomCmapPtaa(*args)
pixRenderRandomCmapPtaa = _tesseract.pixRenderRandomCmapPtaa

def pixRenderPolygon(*args):
  return _tesseract.pixRenderPolygon(*args)
pixRenderPolygon = _tesseract.pixRenderPolygon

def pixFillPolygon(*args):
  return _tesseract.pixFillPolygon(*args)
pixFillPolygon = _tesseract.pixFillPolygon

def pixRenderContours(*args):
  return _tesseract.pixRenderContours(*args)
pixRenderContours = _tesseract.pixRenderContours

def fpixAutoRenderContours(*args):
  return _tesseract.fpixAutoRenderContours(*args)
fpixAutoRenderContours = _tesseract.fpixAutoRenderContours

def fpixRenderContours(*args):
  return _tesseract.fpixRenderContours(*args)
fpixRenderContours = _tesseract.fpixRenderContours

def pixErodeGray(*args):
  return _tesseract.pixErodeGray(*args)
pixErodeGray = _tesseract.pixErodeGray

def pixDilateGray(*args):
  return _tesseract.pixDilateGray(*args)
pixDilateGray = _tesseract.pixDilateGray

def pixOpenGray(*args):
  return _tesseract.pixOpenGray(*args)
pixOpenGray = _tesseract.pixOpenGray

def pixCloseGray(*args):
  return _tesseract.pixCloseGray(*args)
pixCloseGray = _tesseract.pixCloseGray

def pixErodeGray3(*args):
  return _tesseract.pixErodeGray3(*args)
pixErodeGray3 = _tesseract.pixErodeGray3

def pixDilateGray3(*args):
  return _tesseract.pixDilateGray3(*args)
pixDilateGray3 = _tesseract.pixDilateGray3

def pixOpenGray3(*args):
  return _tesseract.pixOpenGray3(*args)
pixOpenGray3 = _tesseract.pixOpenGray3

def pixCloseGray3(*args):
  return _tesseract.pixCloseGray3(*args)
pixCloseGray3 = _tesseract.pixCloseGray3

def dilateGrayLow(*args):
  return _tesseract.dilateGrayLow(*args)
dilateGrayLow = _tesseract.dilateGrayLow

def erodeGrayLow(*args):
  return _tesseract.erodeGrayLow(*args)
erodeGrayLow = _tesseract.erodeGrayLow

def pixDitherToBinary(*args):
  return _tesseract.pixDitherToBinary(*args)
pixDitherToBinary = _tesseract.pixDitherToBinary

def pixDitherToBinarySpec(*args):
  return _tesseract.pixDitherToBinarySpec(*args)
pixDitherToBinarySpec = _tesseract.pixDitherToBinarySpec

def pixThresholdToBinary(*args):
  return _tesseract.pixThresholdToBinary(*args)
pixThresholdToBinary = _tesseract.pixThresholdToBinary

def pixVarThresholdToBinary(*args):
  return _tesseract.pixVarThresholdToBinary(*args)
pixVarThresholdToBinary = _tesseract.pixVarThresholdToBinary

def pixDitherToBinaryLUT(*args):
  return _tesseract.pixDitherToBinaryLUT(*args)
pixDitherToBinaryLUT = _tesseract.pixDitherToBinaryLUT

def pixGenerateMaskByValue(*args):
  return _tesseract.pixGenerateMaskByValue(*args)
pixGenerateMaskByValue = _tesseract.pixGenerateMaskByValue

def pixGenerateMaskByBand(*args):
  return _tesseract.pixGenerateMaskByBand(*args)
pixGenerateMaskByBand = _tesseract.pixGenerateMaskByBand

def pixDitherTo2bpp(*args):
  return _tesseract.pixDitherTo2bpp(*args)
pixDitherTo2bpp = _tesseract.pixDitherTo2bpp

def pixDitherTo2bppSpec(*args):
  return _tesseract.pixDitherTo2bppSpec(*args)
pixDitherTo2bppSpec = _tesseract.pixDitherTo2bppSpec

def pixThresholdTo2bpp(*args):
  return _tesseract.pixThresholdTo2bpp(*args)
pixThresholdTo2bpp = _tesseract.pixThresholdTo2bpp

def pixThresholdTo4bpp(*args):
  return _tesseract.pixThresholdTo4bpp(*args)
pixThresholdTo4bpp = _tesseract.pixThresholdTo4bpp

def pixThresholdOn8bpp(*args):
  return _tesseract.pixThresholdOn8bpp(*args)
pixThresholdOn8bpp = _tesseract.pixThresholdOn8bpp

def pixThresholdGrayArb(*args):
  return _tesseract.pixThresholdGrayArb(*args)
pixThresholdGrayArb = _tesseract.pixThresholdGrayArb

def makeGrayQuantIndexTable(*args):
  return _tesseract.makeGrayQuantIndexTable(*args)
makeGrayQuantIndexTable = _tesseract.makeGrayQuantIndexTable

def makeGrayQuantTargetTable(*args):
  return _tesseract.makeGrayQuantTargetTable(*args)
makeGrayQuantTargetTable = _tesseract.makeGrayQuantTargetTable

def makeGrayQuantTableArb(*args):
  return _tesseract.makeGrayQuantTableArb(*args)
makeGrayQuantTableArb = _tesseract.makeGrayQuantTableArb

def makeGrayQuantColormapArb(*args):
  return _tesseract.makeGrayQuantColormapArb(*args)
makeGrayQuantColormapArb = _tesseract.makeGrayQuantColormapArb

def pixGenerateMaskByBand32(*args):
  return _tesseract.pixGenerateMaskByBand32(*args)
pixGenerateMaskByBand32 = _tesseract.pixGenerateMaskByBand32

def pixGenerateMaskByDiscr32(*args):
  return _tesseract.pixGenerateMaskByDiscr32(*args)
pixGenerateMaskByDiscr32 = _tesseract.pixGenerateMaskByDiscr32

def pixGrayQuantFromHisto(*args):
  return _tesseract.pixGrayQuantFromHisto(*args)
pixGrayQuantFromHisto = _tesseract.pixGrayQuantFromHisto

def pixGrayQuantFromCmap(*args):
  return _tesseract.pixGrayQuantFromCmap(*args)
pixGrayQuantFromCmap = _tesseract.pixGrayQuantFromCmap

def ditherToBinaryLow(*args):
  return _tesseract.ditherToBinaryLow(*args)
ditherToBinaryLow = _tesseract.ditherToBinaryLow

def ditherToBinaryLineLow(*args):
  return _tesseract.ditherToBinaryLineLow(*args)
ditherToBinaryLineLow = _tesseract.ditherToBinaryLineLow

def thresholdToBinaryLow(*args):
  return _tesseract.thresholdToBinaryLow(*args)
thresholdToBinaryLow = _tesseract.thresholdToBinaryLow

def thresholdToBinaryLineLow(*args):
  return _tesseract.thresholdToBinaryLineLow(*args)
thresholdToBinaryLineLow = _tesseract.thresholdToBinaryLineLow

def ditherToBinaryLUTLow(*args):
  return _tesseract.ditherToBinaryLUTLow(*args)
ditherToBinaryLUTLow = _tesseract.ditherToBinaryLUTLow

def ditherToBinaryLineLUTLow(*args):
  return _tesseract.ditherToBinaryLineLUTLow(*args)
ditherToBinaryLineLUTLow = _tesseract.ditherToBinaryLineLUTLow

def make8To1DitherTables(*args):
  return _tesseract.make8To1DitherTables(*args)
make8To1DitherTables = _tesseract.make8To1DitherTables

def ditherTo2bppLow(*args):
  return _tesseract.ditherTo2bppLow(*args)
ditherTo2bppLow = _tesseract.ditherTo2bppLow

def ditherTo2bppLineLow(*args):
  return _tesseract.ditherTo2bppLineLow(*args)
ditherTo2bppLineLow = _tesseract.ditherTo2bppLineLow

def make8To2DitherTables(*args):
  return _tesseract.make8To2DitherTables(*args)
make8To2DitherTables = _tesseract.make8To2DitherTables

def thresholdTo2bppLow(*args):
  return _tesseract.thresholdTo2bppLow(*args)
thresholdTo2bppLow = _tesseract.thresholdTo2bppLow

def thresholdTo4bppLow(*args):
  return _tesseract.thresholdTo4bppLow(*args)
thresholdTo4bppLow = _tesseract.thresholdTo4bppLow

def lheapCreate(*args):
  return _tesseract.lheapCreate(*args)
lheapCreate = _tesseract.lheapCreate

def lheapDestroy(*args):
  return _tesseract.lheapDestroy(*args)
lheapDestroy = _tesseract.lheapDestroy

def lheapAdd(*args):
  return _tesseract.lheapAdd(*args)
lheapAdd = _tesseract.lheapAdd

def lheapRemove(*args):
  return _tesseract.lheapRemove(*args)
lheapRemove = _tesseract.lheapRemove

def lheapGetCount(*args):
  return _tesseract.lheapGetCount(*args)
lheapGetCount = _tesseract.lheapGetCount

def lheapSwapUp(*args):
  return _tesseract.lheapSwapUp(*args)
lheapSwapUp = _tesseract.lheapSwapUp

def lheapSwapDown(*args):
  return _tesseract.lheapSwapDown(*args)
lheapSwapDown = _tesseract.lheapSwapDown

def lheapSort(*args):
  return _tesseract.lheapSort(*args)
lheapSort = _tesseract.lheapSort

def lheapSortStrictOrder(*args):
  return _tesseract.lheapSortStrictOrder(*args)
lheapSortStrictOrder = _tesseract.lheapSortStrictOrder

def lheapPrint(*args):
  return _tesseract.lheapPrint(*args)
lheapPrint = _tesseract.lheapPrint

def jbRankHausInit(*args):
  return _tesseract.jbRankHausInit(*args)
jbRankHausInit = _tesseract.jbRankHausInit

def jbCorrelationInit(*args):
  return _tesseract.jbCorrelationInit(*args)
jbCorrelationInit = _tesseract.jbCorrelationInit

def jbCorrelationInitWithoutComponents(*args):
  return _tesseract.jbCorrelationInitWithoutComponents(*args)
jbCorrelationInitWithoutComponents = _tesseract.jbCorrelationInitWithoutComponents

def jbAddPages(*args):
  return _tesseract.jbAddPages(*args)
jbAddPages = _tesseract.jbAddPages

def jbAddPage(*args):
  return _tesseract.jbAddPage(*args)
jbAddPage = _tesseract.jbAddPage

def jbAddPageComponents(*args):
  return _tesseract.jbAddPageComponents(*args)
jbAddPageComponents = _tesseract.jbAddPageComponents

def jbClassifyRankHaus(*args):
  return _tesseract.jbClassifyRankHaus(*args)
jbClassifyRankHaus = _tesseract.jbClassifyRankHaus

def pixHaustest(*args):
  return _tesseract.pixHaustest(*args)
pixHaustest = _tesseract.pixHaustest

def pixRankHaustest(*args):
  return _tesseract.pixRankHaustest(*args)
pixRankHaustest = _tesseract.pixRankHaustest

def jbClassifyCorrelation(*args):
  return _tesseract.jbClassifyCorrelation(*args)
jbClassifyCorrelation = _tesseract.jbClassifyCorrelation

def jbGetComponents(*args):
  return _tesseract.jbGetComponents(*args)
jbGetComponents = _tesseract.jbGetComponents

def pixWordMaskByDilation(*args):
  return _tesseract.pixWordMaskByDilation(*args)
pixWordMaskByDilation = _tesseract.pixWordMaskByDilation

def pixWordBoxesByDilation(*args):
  return _tesseract.pixWordBoxesByDilation(*args)
pixWordBoxesByDilation = _tesseract.pixWordBoxesByDilation

def jbAccumulateComposites(*args):
  return _tesseract.jbAccumulateComposites(*args)
jbAccumulateComposites = _tesseract.jbAccumulateComposites

def jbTemplatesFromComposites(*args):
  return _tesseract.jbTemplatesFromComposites(*args)
jbTemplatesFromComposites = _tesseract.jbTemplatesFromComposites

def jbClasserCreate(*args):
  return _tesseract.jbClasserCreate(*args)
jbClasserCreate = _tesseract.jbClasserCreate

def jbClasserDestroy(*args):
  return _tesseract.jbClasserDestroy(*args)
jbClasserDestroy = _tesseract.jbClasserDestroy

def jbDataSave(*args):
  return _tesseract.jbDataSave(*args)
jbDataSave = _tesseract.jbDataSave

def jbDataDestroy(*args):
  return _tesseract.jbDataDestroy(*args)
jbDataDestroy = _tesseract.jbDataDestroy

def jbDataWrite(*args):
  return _tesseract.jbDataWrite(*args)
jbDataWrite = _tesseract.jbDataWrite

def jbDataRead(*args):
  return _tesseract.jbDataRead(*args)
jbDataRead = _tesseract.jbDataRead

def jbDataRender(*args):
  return _tesseract.jbDataRender(*args)
jbDataRender = _tesseract.jbDataRender

def jbGetULCorners(*args):
  return _tesseract.jbGetULCorners(*args)
jbGetULCorners = _tesseract.jbGetULCorners

def jbGetLLCorners(*args):
  return _tesseract.jbGetLLCorners(*args)
jbGetLLCorners = _tesseract.jbGetLLCorners

def readHeaderJp2k(*args):
  return _tesseract.readHeaderJp2k(*args)
readHeaderJp2k = _tesseract.readHeaderJp2k

def freadHeaderJp2k(*args):
  return _tesseract.freadHeaderJp2k(*args)
freadHeaderJp2k = _tesseract.freadHeaderJp2k

def sreadHeaderJp2k(*args):
  return _tesseract.sreadHeaderJp2k(*args)
sreadHeaderJp2k = _tesseract.sreadHeaderJp2k

def pixReadJpeg(*args):
  return _tesseract.pixReadJpeg(*args)
pixReadJpeg = _tesseract.pixReadJpeg

def pixReadStreamJpeg(*args):
  return _tesseract.pixReadStreamJpeg(*args)
pixReadStreamJpeg = _tesseract.pixReadStreamJpeg

def readHeaderJpeg(*args):
  return _tesseract.readHeaderJpeg(*args)
readHeaderJpeg = _tesseract.readHeaderJpeg

def freadHeaderJpeg(*args):
  return _tesseract.freadHeaderJpeg(*args)
freadHeaderJpeg = _tesseract.freadHeaderJpeg

def fgetJpegResolution(*args):
  return _tesseract.fgetJpegResolution(*args)
fgetJpegResolution = _tesseract.fgetJpegResolution

def fgetJpegComment(*args):
  return _tesseract.fgetJpegComment(*args)
fgetJpegComment = _tesseract.fgetJpegComment

def pixWriteJpeg(*args):
  return _tesseract.pixWriteJpeg(*args)
pixWriteJpeg = _tesseract.pixWriteJpeg

def pixWriteStreamJpeg(*args):
  return _tesseract.pixWriteStreamJpeg(*args)
pixWriteStreamJpeg = _tesseract.pixWriteStreamJpeg

def pixReadMemJpeg(*args):
  return _tesseract.pixReadMemJpeg(*args)
pixReadMemJpeg = _tesseract.pixReadMemJpeg

def readHeaderMemJpeg(*args):
  return _tesseract.readHeaderMemJpeg(*args)
readHeaderMemJpeg = _tesseract.readHeaderMemJpeg

def pixWriteMemJpeg(*args):
  return _tesseract.pixWriteMemJpeg(*args)
pixWriteMemJpeg = _tesseract.pixWriteMemJpeg

def pixSetChromaSampling(*args):
  return _tesseract.pixSetChromaSampling(*args)
pixSetChromaSampling = _tesseract.pixSetChromaSampling

def extractJpegDataFromFile(*args):
  return _tesseract.extractJpegDataFromFile(*args)
extractJpegDataFromFile = _tesseract.extractJpegDataFromFile

def extractJpegDataFromArray(*args):
  return _tesseract.extractJpegDataFromArray(*args)
extractJpegDataFromArray = _tesseract.extractJpegDataFromArray

def kernelCreate(*args):
  return _tesseract.kernelCreate(*args)
kernelCreate = _tesseract.kernelCreate

def kernelDestroy(*args):
  return _tesseract.kernelDestroy(*args)
kernelDestroy = _tesseract.kernelDestroy

def kernelCopy(*args):
  return _tesseract.kernelCopy(*args)
kernelCopy = _tesseract.kernelCopy

def kernelGetElement(*args):
  return _tesseract.kernelGetElement(*args)
kernelGetElement = _tesseract.kernelGetElement

def kernelSetElement(*args):
  return _tesseract.kernelSetElement(*args)
kernelSetElement = _tesseract.kernelSetElement

def kernelGetParameters(*args):
  return _tesseract.kernelGetParameters(*args)
kernelGetParameters = _tesseract.kernelGetParameters

def kernelSetOrigin(*args):
  return _tesseract.kernelSetOrigin(*args)
kernelSetOrigin = _tesseract.kernelSetOrigin

def kernelGetSum(*args):
  return _tesseract.kernelGetSum(*args)
kernelGetSum = _tesseract.kernelGetSum

def kernelGetMinMax(*args):
  return _tesseract.kernelGetMinMax(*args)
kernelGetMinMax = _tesseract.kernelGetMinMax

def kernelNormalize(*args):
  return _tesseract.kernelNormalize(*args)
kernelNormalize = _tesseract.kernelNormalize

def kernelInvert(*args):
  return _tesseract.kernelInvert(*args)
kernelInvert = _tesseract.kernelInvert

def create2dFloatArray(*args):
  return _tesseract.create2dFloatArray(*args)
create2dFloatArray = _tesseract.create2dFloatArray

def kernelRead(*args):
  return _tesseract.kernelRead(*args)
kernelRead = _tesseract.kernelRead

def kernelReadStream(*args):
  return _tesseract.kernelReadStream(*args)
kernelReadStream = _tesseract.kernelReadStream

def kernelWrite(*args):
  return _tesseract.kernelWrite(*args)
kernelWrite = _tesseract.kernelWrite

def kernelWriteStream(*args):
  return _tesseract.kernelWriteStream(*args)
kernelWriteStream = _tesseract.kernelWriteStream

def kernelCreateFromString(*args):
  return _tesseract.kernelCreateFromString(*args)
kernelCreateFromString = _tesseract.kernelCreateFromString

def kernelCreateFromFile(*args):
  return _tesseract.kernelCreateFromFile(*args)
kernelCreateFromFile = _tesseract.kernelCreateFromFile

def kernelCreateFromPix(*args):
  return _tesseract.kernelCreateFromPix(*args)
kernelCreateFromPix = _tesseract.kernelCreateFromPix

def kernelDisplayInPix(*args):
  return _tesseract.kernelDisplayInPix(*args)
kernelDisplayInPix = _tesseract.kernelDisplayInPix

def parseStringForNumbers(*args):
  return _tesseract.parseStringForNumbers(*args)
parseStringForNumbers = _tesseract.parseStringForNumbers

def makeFlatKernel(*args):
  return _tesseract.makeFlatKernel(*args)
makeFlatKernel = _tesseract.makeFlatKernel

def makeGaussianKernel(*args):
  return _tesseract.makeGaussianKernel(*args)
makeGaussianKernel = _tesseract.makeGaussianKernel

def makeGaussianKernelSep(*args):
  return _tesseract.makeGaussianKernelSep(*args)
makeGaussianKernelSep = _tesseract.makeGaussianKernelSep

def makeDoGKernel(*args):
  return _tesseract.makeDoGKernel(*args)
makeDoGKernel = _tesseract.makeDoGKernel

def getImagelibVersions():
  return _tesseract.getImagelibVersions()
getImagelibVersions = _tesseract.getImagelibVersions

def listDestroy(*args):
  return _tesseract.listDestroy(*args)
listDestroy = _tesseract.listDestroy

def listAddToHead(*args):
  return _tesseract.listAddToHead(*args)
listAddToHead = _tesseract.listAddToHead

def listAddToTail(*args):
  return _tesseract.listAddToTail(*args)
listAddToTail = _tesseract.listAddToTail

def listInsertBefore(*args):
  return _tesseract.listInsertBefore(*args)
listInsertBefore = _tesseract.listInsertBefore

def listInsertAfter(*args):
  return _tesseract.listInsertAfter(*args)
listInsertAfter = _tesseract.listInsertAfter

def listRemoveElement(*args):
  return _tesseract.listRemoveElement(*args)
listRemoveElement = _tesseract.listRemoveElement

def listRemoveFromHead(*args):
  return _tesseract.listRemoveFromHead(*args)
listRemoveFromHead = _tesseract.listRemoveFromHead

def listRemoveFromTail(*args):
  return _tesseract.listRemoveFromTail(*args)
listRemoveFromTail = _tesseract.listRemoveFromTail

def listFindElement(*args):
  return _tesseract.listFindElement(*args)
listFindElement = _tesseract.listFindElement

def listFindTail(*args):
  return _tesseract.listFindTail(*args)
listFindTail = _tesseract.listFindTail

def listGetCount(*args):
  return _tesseract.listGetCount(*args)
listGetCount = _tesseract.listGetCount

def listReverse(*args):
  return _tesseract.listReverse(*args)
listReverse = _tesseract.listReverse

def listJoin(*args):
  return _tesseract.listJoin(*args)
listJoin = _tesseract.listJoin

def generateBinaryMaze(*args):
  return _tesseract.generateBinaryMaze(*args)
generateBinaryMaze = _tesseract.generateBinaryMaze

def pixSearchBinaryMaze(*args):
  return _tesseract.pixSearchBinaryMaze(*args)
pixSearchBinaryMaze = _tesseract.pixSearchBinaryMaze

def pixSearchGrayMaze(*args):
  return _tesseract.pixSearchGrayMaze(*args)
pixSearchGrayMaze = _tesseract.pixSearchGrayMaze

def pixFindLargestRectangle(*args):
  return _tesseract.pixFindLargestRectangle(*args)
pixFindLargestRectangle = _tesseract.pixFindLargestRectangle

def pixDilate(*args):
  return _tesseract.pixDilate(*args)
pixDilate = _tesseract.pixDilate

def pixErode(*args):
  return _tesseract.pixErode(*args)
pixErode = _tesseract.pixErode

def pixHMT(*args):
  return _tesseract.pixHMT(*args)
pixHMT = _tesseract.pixHMT

def pixOpen(*args):
  return _tesseract.pixOpen(*args)
pixOpen = _tesseract.pixOpen

def pixClose(*args):
  return _tesseract.pixClose(*args)
pixClose = _tesseract.pixClose

def pixCloseSafe(*args):
  return _tesseract.pixCloseSafe(*args)
pixCloseSafe = _tesseract.pixCloseSafe

def pixOpenGeneralized(*args):
  return _tesseract.pixOpenGeneralized(*args)
pixOpenGeneralized = _tesseract.pixOpenGeneralized

def pixCloseGeneralized(*args):
  return _tesseract.pixCloseGeneralized(*args)
pixCloseGeneralized = _tesseract.pixCloseGeneralized

def pixDilateBrick(*args):
  return _tesseract.pixDilateBrick(*args)
pixDilateBrick = _tesseract.pixDilateBrick

def pixErodeBrick(*args):
  return _tesseract.pixErodeBrick(*args)
pixErodeBrick = _tesseract.pixErodeBrick

def pixOpenBrick(*args):
  return _tesseract.pixOpenBrick(*args)
pixOpenBrick = _tesseract.pixOpenBrick

def pixCloseBrick(*args):
  return _tesseract.pixCloseBrick(*args)
pixCloseBrick = _tesseract.pixCloseBrick

def pixCloseSafeBrick(*args):
  return _tesseract.pixCloseSafeBrick(*args)
pixCloseSafeBrick = _tesseract.pixCloseSafeBrick

def selectComposableSels(*args):
  return _tesseract.selectComposableSels(*args)
selectComposableSels = _tesseract.selectComposableSels

def selectComposableSizes(*args):
  return _tesseract.selectComposableSizes(*args)
selectComposableSizes = _tesseract.selectComposableSizes

def pixDilateCompBrick(*args):
  return _tesseract.pixDilateCompBrick(*args)
pixDilateCompBrick = _tesseract.pixDilateCompBrick

def pixErodeCompBrick(*args):
  return _tesseract.pixErodeCompBrick(*args)
pixErodeCompBrick = _tesseract.pixErodeCompBrick

def pixOpenCompBrick(*args):
  return _tesseract.pixOpenCompBrick(*args)
pixOpenCompBrick = _tesseract.pixOpenCompBrick

def pixCloseCompBrick(*args):
  return _tesseract.pixCloseCompBrick(*args)
pixCloseCompBrick = _tesseract.pixCloseCompBrick

def pixCloseSafeCompBrick(*args):
  return _tesseract.pixCloseSafeCompBrick(*args)
pixCloseSafeCompBrick = _tesseract.pixCloseSafeCompBrick

def resetMorphBoundaryCondition(*args):
  return _tesseract.resetMorphBoundaryCondition(*args)
resetMorphBoundaryCondition = _tesseract.resetMorphBoundaryCondition

def getMorphBorderPixelColor(*args):
  return _tesseract.getMorphBorderPixelColor(*args)
getMorphBorderPixelColor = _tesseract.getMorphBorderPixelColor

def pixExtractBoundary(*args):
  return _tesseract.pixExtractBoundary(*args)
pixExtractBoundary = _tesseract.pixExtractBoundary

def pixMorphSequenceMasked(*args):
  return _tesseract.pixMorphSequenceMasked(*args)
pixMorphSequenceMasked = _tesseract.pixMorphSequenceMasked

def pixMorphSequenceByComponent(*args):
  return _tesseract.pixMorphSequenceByComponent(*args)
pixMorphSequenceByComponent = _tesseract.pixMorphSequenceByComponent

def pixaMorphSequenceByComponent(*args):
  return _tesseract.pixaMorphSequenceByComponent(*args)
pixaMorphSequenceByComponent = _tesseract.pixaMorphSequenceByComponent

def pixMorphSequenceByRegion(*args):
  return _tesseract.pixMorphSequenceByRegion(*args)
pixMorphSequenceByRegion = _tesseract.pixMorphSequenceByRegion

def pixaMorphSequenceByRegion(*args):
  return _tesseract.pixaMorphSequenceByRegion(*args)
pixaMorphSequenceByRegion = _tesseract.pixaMorphSequenceByRegion

def pixUnionOfMorphOps(*args):
  return _tesseract.pixUnionOfMorphOps(*args)
pixUnionOfMorphOps = _tesseract.pixUnionOfMorphOps

def pixIntersectionOfMorphOps(*args):
  return _tesseract.pixIntersectionOfMorphOps(*args)
pixIntersectionOfMorphOps = _tesseract.pixIntersectionOfMorphOps

def pixSelectiveConnCompFill(*args):
  return _tesseract.pixSelectiveConnCompFill(*args)
pixSelectiveConnCompFill = _tesseract.pixSelectiveConnCompFill

def pixRemoveMatchedPattern(*args):
  return _tesseract.pixRemoveMatchedPattern(*args)
pixRemoveMatchedPattern = _tesseract.pixRemoveMatchedPattern

def pixDisplayMatchedPattern(*args):
  return _tesseract.pixDisplayMatchedPattern(*args)
pixDisplayMatchedPattern = _tesseract.pixDisplayMatchedPattern

def pixSeedfillMorph(*args):
  return _tesseract.pixSeedfillMorph(*args)
pixSeedfillMorph = _tesseract.pixSeedfillMorph

def pixRunHistogramMorph(*args):
  return _tesseract.pixRunHistogramMorph(*args)
pixRunHistogramMorph = _tesseract.pixRunHistogramMorph

def pixTophat(*args):
  return _tesseract.pixTophat(*args)
pixTophat = _tesseract.pixTophat

def pixHDome(*args):
  return _tesseract.pixHDome(*args)
pixHDome = _tesseract.pixHDome

def pixFastTophat(*args):
  return _tesseract.pixFastTophat(*args)
pixFastTophat = _tesseract.pixFastTophat

def pixMorphGradient(*args):
  return _tesseract.pixMorphGradient(*args)
pixMorphGradient = _tesseract.pixMorphGradient

def pixaCentroids(*args):
  return _tesseract.pixaCentroids(*args)
pixaCentroids = _tesseract.pixaCentroids

def pixCentroid(*args):
  return _tesseract.pixCentroid(*args)
pixCentroid = _tesseract.pixCentroid

def pixDilateBrickDwa(*args):
  return _tesseract.pixDilateBrickDwa(*args)
pixDilateBrickDwa = _tesseract.pixDilateBrickDwa

def pixErodeBrickDwa(*args):
  return _tesseract.pixErodeBrickDwa(*args)
pixErodeBrickDwa = _tesseract.pixErodeBrickDwa

def pixOpenBrickDwa(*args):
  return _tesseract.pixOpenBrickDwa(*args)
pixOpenBrickDwa = _tesseract.pixOpenBrickDwa

def pixCloseBrickDwa(*args):
  return _tesseract.pixCloseBrickDwa(*args)
pixCloseBrickDwa = _tesseract.pixCloseBrickDwa

def pixDilateCompBrickDwa(*args):
  return _tesseract.pixDilateCompBrickDwa(*args)
pixDilateCompBrickDwa = _tesseract.pixDilateCompBrickDwa

def pixErodeCompBrickDwa(*args):
  return _tesseract.pixErodeCompBrickDwa(*args)
pixErodeCompBrickDwa = _tesseract.pixErodeCompBrickDwa

def pixOpenCompBrickDwa(*args):
  return _tesseract.pixOpenCompBrickDwa(*args)
pixOpenCompBrickDwa = _tesseract.pixOpenCompBrickDwa

def pixCloseCompBrickDwa(*args):
  return _tesseract.pixCloseCompBrickDwa(*args)
pixCloseCompBrickDwa = _tesseract.pixCloseCompBrickDwa

def pixDilateCompBrickExtendDwa(*args):
  return _tesseract.pixDilateCompBrickExtendDwa(*args)
pixDilateCompBrickExtendDwa = _tesseract.pixDilateCompBrickExtendDwa

def pixErodeCompBrickExtendDwa(*args):
  return _tesseract.pixErodeCompBrickExtendDwa(*args)
pixErodeCompBrickExtendDwa = _tesseract.pixErodeCompBrickExtendDwa

def pixOpenCompBrickExtendDwa(*args):
  return _tesseract.pixOpenCompBrickExtendDwa(*args)
pixOpenCompBrickExtendDwa = _tesseract.pixOpenCompBrickExtendDwa

def pixCloseCompBrickExtendDwa(*args):
  return _tesseract.pixCloseCompBrickExtendDwa(*args)
pixCloseCompBrickExtendDwa = _tesseract.pixCloseCompBrickExtendDwa

def getExtendedCompositeParameters(*args):
  return _tesseract.getExtendedCompositeParameters(*args)
getExtendedCompositeParameters = _tesseract.getExtendedCompositeParameters

def pixMorphSequence(*args):
  return _tesseract.pixMorphSequence(*args)
pixMorphSequence = _tesseract.pixMorphSequence

def pixMorphCompSequence(*args):
  return _tesseract.pixMorphCompSequence(*args)
pixMorphCompSequence = _tesseract.pixMorphCompSequence

def pixMorphSequenceDwa(*args):
  return _tesseract.pixMorphSequenceDwa(*args)
pixMorphSequenceDwa = _tesseract.pixMorphSequenceDwa

def pixMorphCompSequenceDwa(*args):
  return _tesseract.pixMorphCompSequenceDwa(*args)
pixMorphCompSequenceDwa = _tesseract.pixMorphCompSequenceDwa

def morphSequenceVerify(*args):
  return _tesseract.morphSequenceVerify(*args)
morphSequenceVerify = _tesseract.morphSequenceVerify

def pixGrayMorphSequence(*args):
  return _tesseract.pixGrayMorphSequence(*args)
pixGrayMorphSequence = _tesseract.pixGrayMorphSequence

def pixColorMorphSequence(*args):
  return _tesseract.pixColorMorphSequence(*args)
pixColorMorphSequence = _tesseract.pixColorMorphSequence

def numaCreate(*args):
  return _tesseract.numaCreate(*args)
numaCreate = _tesseract.numaCreate

def numaCreateFromIArray(*args):
  return _tesseract.numaCreateFromIArray(*args)
numaCreateFromIArray = _tesseract.numaCreateFromIArray

def numaCreateFromFArray(*args):
  return _tesseract.numaCreateFromFArray(*args)
numaCreateFromFArray = _tesseract.numaCreateFromFArray

def numaDestroy(*args):
  return _tesseract.numaDestroy(*args)
numaDestroy = _tesseract.numaDestroy

def numaCopy(*args):
  return _tesseract.numaCopy(*args)
numaCopy = _tesseract.numaCopy

def numaClone(*args):
  return _tesseract.numaClone(*args)
numaClone = _tesseract.numaClone

def numaEmpty(*args):
  return _tesseract.numaEmpty(*args)
numaEmpty = _tesseract.numaEmpty

def numaAddNumber(*args):
  return _tesseract.numaAddNumber(*args)
numaAddNumber = _tesseract.numaAddNumber

def numaInsertNumber(*args):
  return _tesseract.numaInsertNumber(*args)
numaInsertNumber = _tesseract.numaInsertNumber

def numaRemoveNumber(*args):
  return _tesseract.numaRemoveNumber(*args)
numaRemoveNumber = _tesseract.numaRemoveNumber

def numaReplaceNumber(*args):
  return _tesseract.numaReplaceNumber(*args)
numaReplaceNumber = _tesseract.numaReplaceNumber

def numaGetCount(*args):
  return _tesseract.numaGetCount(*args)
numaGetCount = _tesseract.numaGetCount

def numaSetCount(*args):
  return _tesseract.numaSetCount(*args)
numaSetCount = _tesseract.numaSetCount

def numaGetFValue(*args):
  return _tesseract.numaGetFValue(*args)
numaGetFValue = _tesseract.numaGetFValue

def numaGetIValue(*args):
  return _tesseract.numaGetIValue(*args)
numaGetIValue = _tesseract.numaGetIValue

def numaSetValue(*args):
  return _tesseract.numaSetValue(*args)
numaSetValue = _tesseract.numaSetValue

def numaShiftValue(*args):
  return _tesseract.numaShiftValue(*args)
numaShiftValue = _tesseract.numaShiftValue

def numaGetIArray(*args):
  return _tesseract.numaGetIArray(*args)
numaGetIArray = _tesseract.numaGetIArray

def numaGetFArray(*args):
  return _tesseract.numaGetFArray(*args)
numaGetFArray = _tesseract.numaGetFArray

def numaGetRefcount(*args):
  return _tesseract.numaGetRefcount(*args)
numaGetRefcount = _tesseract.numaGetRefcount

def numaChangeRefcount(*args):
  return _tesseract.numaChangeRefcount(*args)
numaChangeRefcount = _tesseract.numaChangeRefcount

def numaGetParameters(*args):
  return _tesseract.numaGetParameters(*args)
numaGetParameters = _tesseract.numaGetParameters

def numaSetParameters(*args):
  return _tesseract.numaSetParameters(*args)
numaSetParameters = _tesseract.numaSetParameters

def numaCopyParameters(*args):
  return _tesseract.numaCopyParameters(*args)
numaCopyParameters = _tesseract.numaCopyParameters

def numaConvertToSarray(*args):
  return _tesseract.numaConvertToSarray(*args)
numaConvertToSarray = _tesseract.numaConvertToSarray

def numaRead(*args):
  return _tesseract.numaRead(*args)
numaRead = _tesseract.numaRead

def numaReadStream(*args):
  return _tesseract.numaReadStream(*args)
numaReadStream = _tesseract.numaReadStream

def numaWrite(*args):
  return _tesseract.numaWrite(*args)
numaWrite = _tesseract.numaWrite

def numaWriteStream(*args):
  return _tesseract.numaWriteStream(*args)
numaWriteStream = _tesseract.numaWriteStream

def numaaCreate(*args):
  return _tesseract.numaaCreate(*args)
numaaCreate = _tesseract.numaaCreate

def numaaCreateFull(*args):
  return _tesseract.numaaCreateFull(*args)
numaaCreateFull = _tesseract.numaaCreateFull

def numaaTruncate(*args):
  return _tesseract.numaaTruncate(*args)
numaaTruncate = _tesseract.numaaTruncate

def numaaDestroy(*args):
  return _tesseract.numaaDestroy(*args)
numaaDestroy = _tesseract.numaaDestroy

def numaaAddNuma(*args):
  return _tesseract.numaaAddNuma(*args)
numaaAddNuma = _tesseract.numaaAddNuma

def numaaExtendArray(*args):
  return _tesseract.numaaExtendArray(*args)
numaaExtendArray = _tesseract.numaaExtendArray

def numaaGetCount(*args):
  return _tesseract.numaaGetCount(*args)
numaaGetCount = _tesseract.numaaGetCount

def numaaGetNumaCount(*args):
  return _tesseract.numaaGetNumaCount(*args)
numaaGetNumaCount = _tesseract.numaaGetNumaCount

def numaaGetNumberCount(*args):
  return _tesseract.numaaGetNumberCount(*args)
numaaGetNumberCount = _tesseract.numaaGetNumberCount

def numaaGetPtrArray(*args):
  return _tesseract.numaaGetPtrArray(*args)
numaaGetPtrArray = _tesseract.numaaGetPtrArray

def numaaGetNuma(*args):
  return _tesseract.numaaGetNuma(*args)
numaaGetNuma = _tesseract.numaaGetNuma

def numaaReplaceNuma(*args):
  return _tesseract.numaaReplaceNuma(*args)
numaaReplaceNuma = _tesseract.numaaReplaceNuma

def numaaGetValue(*args):
  return _tesseract.numaaGetValue(*args)
numaaGetValue = _tesseract.numaaGetValue

def numaaAddNumber(*args):
  return _tesseract.numaaAddNumber(*args)
numaaAddNumber = _tesseract.numaaAddNumber

def numaaRead(*args):
  return _tesseract.numaaRead(*args)
numaaRead = _tesseract.numaaRead

def numaaReadStream(*args):
  return _tesseract.numaaReadStream(*args)
numaaReadStream = _tesseract.numaaReadStream

def numaaWrite(*args):
  return _tesseract.numaaWrite(*args)
numaaWrite = _tesseract.numaaWrite

def numaaWriteStream(*args):
  return _tesseract.numaaWriteStream(*args)
numaaWriteStream = _tesseract.numaaWriteStream

def numa2dCreate(*args):
  return _tesseract.numa2dCreate(*args)
numa2dCreate = _tesseract.numa2dCreate

def numa2dDestroy(*args):
  return _tesseract.numa2dDestroy(*args)
numa2dDestroy = _tesseract.numa2dDestroy

def numa2dAddNumber(*args):
  return _tesseract.numa2dAddNumber(*args)
numa2dAddNumber = _tesseract.numa2dAddNumber

def numa2dGetCount(*args):
  return _tesseract.numa2dGetCount(*args)
numa2dGetCount = _tesseract.numa2dGetCount

def numa2dGetNuma(*args):
  return _tesseract.numa2dGetNuma(*args)
numa2dGetNuma = _tesseract.numa2dGetNuma

def numa2dGetFValue(*args):
  return _tesseract.numa2dGetFValue(*args)
numa2dGetFValue = _tesseract.numa2dGetFValue

def numa2dGetIValue(*args):
  return _tesseract.numa2dGetIValue(*args)
numa2dGetIValue = _tesseract.numa2dGetIValue

def numaHashCreate(*args):
  return _tesseract.numaHashCreate(*args)
numaHashCreate = _tesseract.numaHashCreate

def numaHashDestroy(*args):
  return _tesseract.numaHashDestroy(*args)
numaHashDestroy = _tesseract.numaHashDestroy

def numaHashGetNuma(*args):
  return _tesseract.numaHashGetNuma(*args)
numaHashGetNuma = _tesseract.numaHashGetNuma

def numaHashAdd(*args):
  return _tesseract.numaHashAdd(*args)
numaHashAdd = _tesseract.numaHashAdd

def numaArithOp(*args):
  return _tesseract.numaArithOp(*args)
numaArithOp = _tesseract.numaArithOp

def numaLogicalOp(*args):
  return _tesseract.numaLogicalOp(*args)
numaLogicalOp = _tesseract.numaLogicalOp

def numaInvert(*args):
  return _tesseract.numaInvert(*args)
numaInvert = _tesseract.numaInvert

def numaSimilar(*args):
  return _tesseract.numaSimilar(*args)
numaSimilar = _tesseract.numaSimilar

def numaAddToNumber(*args):
  return _tesseract.numaAddToNumber(*args)
numaAddToNumber = _tesseract.numaAddToNumber

def numaGetMin(*args):
  return _tesseract.numaGetMin(*args)
numaGetMin = _tesseract.numaGetMin

def numaGetMax(*args):
  return _tesseract.numaGetMax(*args)
numaGetMax = _tesseract.numaGetMax

def numaGetSum(*args):
  return _tesseract.numaGetSum(*args)
numaGetSum = _tesseract.numaGetSum

def numaGetPartialSums(*args):
  return _tesseract.numaGetPartialSums(*args)
numaGetPartialSums = _tesseract.numaGetPartialSums

def numaGetSumOnInterval(*args):
  return _tesseract.numaGetSumOnInterval(*args)
numaGetSumOnInterval = _tesseract.numaGetSumOnInterval

def numaHasOnlyIntegers(*args):
  return _tesseract.numaHasOnlyIntegers(*args)
numaHasOnlyIntegers = _tesseract.numaHasOnlyIntegers

def numaSubsample(*args):
  return _tesseract.numaSubsample(*args)
numaSubsample = _tesseract.numaSubsample

def numaMakeDelta(*args):
  return _tesseract.numaMakeDelta(*args)
numaMakeDelta = _tesseract.numaMakeDelta

def numaMakeSequence(*args):
  return _tesseract.numaMakeSequence(*args)
numaMakeSequence = _tesseract.numaMakeSequence

def numaMakeConstant(*args):
  return _tesseract.numaMakeConstant(*args)
numaMakeConstant = _tesseract.numaMakeConstant

def numaMakeAbsValue(*args):
  return _tesseract.numaMakeAbsValue(*args)
numaMakeAbsValue = _tesseract.numaMakeAbsValue

def numaAddBorder(*args):
  return _tesseract.numaAddBorder(*args)
numaAddBorder = _tesseract.numaAddBorder

def numaAddSpecifiedBorder(*args):
  return _tesseract.numaAddSpecifiedBorder(*args)
numaAddSpecifiedBorder = _tesseract.numaAddSpecifiedBorder

def numaRemoveBorder(*args):
  return _tesseract.numaRemoveBorder(*args)
numaRemoveBorder = _tesseract.numaRemoveBorder

def numaGetNonzeroRange(*args):
  return _tesseract.numaGetNonzeroRange(*args)
numaGetNonzeroRange = _tesseract.numaGetNonzeroRange

def numaGetCountRelativeToZero(*args):
  return _tesseract.numaGetCountRelativeToZero(*args)
numaGetCountRelativeToZero = _tesseract.numaGetCountRelativeToZero

def numaClipToInterval(*args):
  return _tesseract.numaClipToInterval(*args)
numaClipToInterval = _tesseract.numaClipToInterval

def numaMakeThresholdIndicator(*args):
  return _tesseract.numaMakeThresholdIndicator(*args)
numaMakeThresholdIndicator = _tesseract.numaMakeThresholdIndicator

def numaUniformSampling(*args):
  return _tesseract.numaUniformSampling(*args)
numaUniformSampling = _tesseract.numaUniformSampling

def numaReverse(*args):
  return _tesseract.numaReverse(*args)
numaReverse = _tesseract.numaReverse

def numaLowPassIntervals(*args):
  return _tesseract.numaLowPassIntervals(*args)
numaLowPassIntervals = _tesseract.numaLowPassIntervals

def numaThresholdEdges(*args):
  return _tesseract.numaThresholdEdges(*args)
numaThresholdEdges = _tesseract.numaThresholdEdges

def numaGetSpanValues(*args):
  return _tesseract.numaGetSpanValues(*args)
numaGetSpanValues = _tesseract.numaGetSpanValues

def numaGetEdgeValues(*args):
  return _tesseract.numaGetEdgeValues(*args)
numaGetEdgeValues = _tesseract.numaGetEdgeValues

def numaInterpolateEqxVal(*args):
  return _tesseract.numaInterpolateEqxVal(*args)
numaInterpolateEqxVal = _tesseract.numaInterpolateEqxVal

def numaInterpolateArbxVal(*args):
  return _tesseract.numaInterpolateArbxVal(*args)
numaInterpolateArbxVal = _tesseract.numaInterpolateArbxVal

def numaInterpolateEqxInterval(*args):
  return _tesseract.numaInterpolateEqxInterval(*args)
numaInterpolateEqxInterval = _tesseract.numaInterpolateEqxInterval

def numaInterpolateArbxInterval(*args):
  return _tesseract.numaInterpolateArbxInterval(*args)
numaInterpolateArbxInterval = _tesseract.numaInterpolateArbxInterval

def numaFitMax(*args):
  return _tesseract.numaFitMax(*args)
numaFitMax = _tesseract.numaFitMax

def numaDifferentiateInterval(*args):
  return _tesseract.numaDifferentiateInterval(*args)
numaDifferentiateInterval = _tesseract.numaDifferentiateInterval

def numaIntegrateInterval(*args):
  return _tesseract.numaIntegrateInterval(*args)
numaIntegrateInterval = _tesseract.numaIntegrateInterval

def numaSortGeneral(*args):
  return _tesseract.numaSortGeneral(*args)
numaSortGeneral = _tesseract.numaSortGeneral

def numaSortAutoSelect(*args):
  return _tesseract.numaSortAutoSelect(*args)
numaSortAutoSelect = _tesseract.numaSortAutoSelect

def numaSortIndexAutoSelect(*args):
  return _tesseract.numaSortIndexAutoSelect(*args)
numaSortIndexAutoSelect = _tesseract.numaSortIndexAutoSelect

def numaChooseSortType(*args):
  return _tesseract.numaChooseSortType(*args)
numaChooseSortType = _tesseract.numaChooseSortType

def numaSort(*args):
  return _tesseract.numaSort(*args)
numaSort = _tesseract.numaSort

def numaBinSort(*args):
  return _tesseract.numaBinSort(*args)
numaBinSort = _tesseract.numaBinSort

def numaGetSortIndex(*args):
  return _tesseract.numaGetSortIndex(*args)
numaGetSortIndex = _tesseract.numaGetSortIndex

def numaGetBinSortIndex(*args):
  return _tesseract.numaGetBinSortIndex(*args)
numaGetBinSortIndex = _tesseract.numaGetBinSortIndex

def numaSortByIndex(*args):
  return _tesseract.numaSortByIndex(*args)
numaSortByIndex = _tesseract.numaSortByIndex

def numaIsSorted(*args):
  return _tesseract.numaIsSorted(*args)
numaIsSorted = _tesseract.numaIsSorted

def numaSortPair(*args):
  return _tesseract.numaSortPair(*args)
numaSortPair = _tesseract.numaSortPair

def numaInvertMap(*args):
  return _tesseract.numaInvertMap(*args)
numaInvertMap = _tesseract.numaInvertMap

def numaPseudorandomSequence(*args):
  return _tesseract.numaPseudorandomSequence(*args)
numaPseudorandomSequence = _tesseract.numaPseudorandomSequence

def numaRandomPermutation(*args):
  return _tesseract.numaRandomPermutation(*args)
numaRandomPermutation = _tesseract.numaRandomPermutation

def numaGetRankValue(*args):
  return _tesseract.numaGetRankValue(*args)
numaGetRankValue = _tesseract.numaGetRankValue

def numaGetMedian(*args):
  return _tesseract.numaGetMedian(*args)
numaGetMedian = _tesseract.numaGetMedian

def numaGetBinnedMedian(*args):
  return _tesseract.numaGetBinnedMedian(*args)
numaGetBinnedMedian = _tesseract.numaGetBinnedMedian

def numaGetMode(*args):
  return _tesseract.numaGetMode(*args)
numaGetMode = _tesseract.numaGetMode

def numaGetMedianVariation(*args):
  return _tesseract.numaGetMedianVariation(*args)
numaGetMedianVariation = _tesseract.numaGetMedianVariation

def numaJoin(*args):
  return _tesseract.numaJoin(*args)
numaJoin = _tesseract.numaJoin

def numaaJoin(*args):
  return _tesseract.numaaJoin(*args)
numaaJoin = _tesseract.numaaJoin

def numaaFlattenToNuma(*args):
  return _tesseract.numaaFlattenToNuma(*args)
numaaFlattenToNuma = _tesseract.numaaFlattenToNuma

def numaErode(*args):
  return _tesseract.numaErode(*args)
numaErode = _tesseract.numaErode

def numaDilate(*args):
  return _tesseract.numaDilate(*args)
numaDilate = _tesseract.numaDilate

def numaOpen(*args):
  return _tesseract.numaOpen(*args)
numaOpen = _tesseract.numaOpen

def numaClose(*args):
  return _tesseract.numaClose(*args)
numaClose = _tesseract.numaClose

def numaTransform(*args):
  return _tesseract.numaTransform(*args)
numaTransform = _tesseract.numaTransform

def numaWindowedStats(*args):
  return _tesseract.numaWindowedStats(*args)
numaWindowedStats = _tesseract.numaWindowedStats

def numaWindowedMean(*args):
  return _tesseract.numaWindowedMean(*args)
numaWindowedMean = _tesseract.numaWindowedMean

def numaWindowedMeanSquare(*args):
  return _tesseract.numaWindowedMeanSquare(*args)
numaWindowedMeanSquare = _tesseract.numaWindowedMeanSquare

def numaWindowedVariance(*args):
  return _tesseract.numaWindowedVariance(*args)
numaWindowedVariance = _tesseract.numaWindowedVariance

def numaConvertToInt(*args):
  return _tesseract.numaConvertToInt(*args)
numaConvertToInt = _tesseract.numaConvertToInt

def numaMakeHistogram(*args):
  return _tesseract.numaMakeHistogram(*args)
numaMakeHistogram = _tesseract.numaMakeHistogram

def numaMakeHistogramAuto(*args):
  return _tesseract.numaMakeHistogramAuto(*args)
numaMakeHistogramAuto = _tesseract.numaMakeHistogramAuto

def numaMakeHistogramClipped(*args):
  return _tesseract.numaMakeHistogramClipped(*args)
numaMakeHistogramClipped = _tesseract.numaMakeHistogramClipped

def numaRebinHistogram(*args):
  return _tesseract.numaRebinHistogram(*args)
numaRebinHistogram = _tesseract.numaRebinHistogram

def numaNormalizeHistogram(*args):
  return _tesseract.numaNormalizeHistogram(*args)
numaNormalizeHistogram = _tesseract.numaNormalizeHistogram

def numaGetStatsUsingHistogram(*args):
  return _tesseract.numaGetStatsUsingHistogram(*args)
numaGetStatsUsingHistogram = _tesseract.numaGetStatsUsingHistogram

def numaGetHistogramStats(*args):
  return _tesseract.numaGetHistogramStats(*args)
numaGetHistogramStats = _tesseract.numaGetHistogramStats

def numaGetHistogramStatsOnInterval(*args):
  return _tesseract.numaGetHistogramStatsOnInterval(*args)
numaGetHistogramStatsOnInterval = _tesseract.numaGetHistogramStatsOnInterval

def numaMakeRankFromHistogram(*args):
  return _tesseract.numaMakeRankFromHistogram(*args)
numaMakeRankFromHistogram = _tesseract.numaMakeRankFromHistogram

def numaHistogramGetRankFromVal(*args):
  return _tesseract.numaHistogramGetRankFromVal(*args)
numaHistogramGetRankFromVal = _tesseract.numaHistogramGetRankFromVal

def numaHistogramGetValFromRank(*args):
  return _tesseract.numaHistogramGetValFromRank(*args)
numaHistogramGetValFromRank = _tesseract.numaHistogramGetValFromRank

def numaDiscretizeRankAndIntensity(*args):
  return _tesseract.numaDiscretizeRankAndIntensity(*args)
numaDiscretizeRankAndIntensity = _tesseract.numaDiscretizeRankAndIntensity

def numaGetRankBinValues(*args):
  return _tesseract.numaGetRankBinValues(*args)
numaGetRankBinValues = _tesseract.numaGetRankBinValues

def numaSplitDistribution(*args):
  return _tesseract.numaSplitDistribution(*args)
numaSplitDistribution = _tesseract.numaSplitDistribution

def numaEarthMoverDistance(*args):
  return _tesseract.numaEarthMoverDistance(*args)
numaEarthMoverDistance = _tesseract.numaEarthMoverDistance

def numaFindPeaks(*args):
  return _tesseract.numaFindPeaks(*args)
numaFindPeaks = _tesseract.numaFindPeaks

def numaFindExtrema(*args):
  return _tesseract.numaFindExtrema(*args)
numaFindExtrema = _tesseract.numaFindExtrema

def numaCountReversals(*args):
  return _tesseract.numaCountReversals(*args)
numaCountReversals = _tesseract.numaCountReversals

def numaSelectCrossingThreshold(*args):
  return _tesseract.numaSelectCrossingThreshold(*args)
numaSelectCrossingThreshold = _tesseract.numaSelectCrossingThreshold

def numaCrossingsByThreshold(*args):
  return _tesseract.numaCrossingsByThreshold(*args)
numaCrossingsByThreshold = _tesseract.numaCrossingsByThreshold

def numaCrossingsByPeaks(*args):
  return _tesseract.numaCrossingsByPeaks(*args)
numaCrossingsByPeaks = _tesseract.numaCrossingsByPeaks

def numaEvalBestHaarParameters(*args):
  return _tesseract.numaEvalBestHaarParameters(*args)
numaEvalBestHaarParameters = _tesseract.numaEvalBestHaarParameters

def numaEvalHaarSum(*args):
  return _tesseract.numaEvalHaarSum(*args)
numaEvalHaarSum = _tesseract.numaEvalHaarSum

def pixGetRegionsBinary(*args):
  return _tesseract.pixGetRegionsBinary(*args)
pixGetRegionsBinary = _tesseract.pixGetRegionsBinary

def pixGenHalftoneMask(*args):
  return _tesseract.pixGenHalftoneMask(*args)
pixGenHalftoneMask = _tesseract.pixGenHalftoneMask

def pixGenTextlineMask(*args):
  return _tesseract.pixGenTextlineMask(*args)
pixGenTextlineMask = _tesseract.pixGenTextlineMask

def pixGenTextblockMask(*args):
  return _tesseract.pixGenTextblockMask(*args)
pixGenTextblockMask = _tesseract.pixGenTextblockMask

def pixFindPageForeground(*args):
  return _tesseract.pixFindPageForeground(*args)
pixFindPageForeground = _tesseract.pixFindPageForeground

def pixSplitIntoCharacters(*args):
  return _tesseract.pixSplitIntoCharacters(*args)
pixSplitIntoCharacters = _tesseract.pixSplitIntoCharacters

def pixSplitComponentWithProfile(*args):
  return _tesseract.pixSplitComponentWithProfile(*args)
pixSplitComponentWithProfile = _tesseract.pixSplitComponentWithProfile

def pixSetSelectCmap(*args):
  return _tesseract.pixSetSelectCmap(*args)
pixSetSelectCmap = _tesseract.pixSetSelectCmap

def pixColorGrayRegionsCmap(*args):
  return _tesseract.pixColorGrayRegionsCmap(*args)
pixColorGrayRegionsCmap = _tesseract.pixColorGrayRegionsCmap

def pixColorGrayCmap(*args):
  return _tesseract.pixColorGrayCmap(*args)
pixColorGrayCmap = _tesseract.pixColorGrayCmap

def addColorizedGrayToCmap(*args):
  return _tesseract.addColorizedGrayToCmap(*args)
addColorizedGrayToCmap = _tesseract.addColorizedGrayToCmap

def pixSetSelectMaskedCmap(*args):
  return _tesseract.pixSetSelectMaskedCmap(*args)
pixSetSelectMaskedCmap = _tesseract.pixSetSelectMaskedCmap

def pixSetMaskedCmap(*args):
  return _tesseract.pixSetMaskedCmap(*args)
pixSetMaskedCmap = _tesseract.pixSetMaskedCmap

def parseForProtos(*args):
  return _tesseract.parseForProtos(*args)
parseForProtos = _tesseract.parseForProtos

def boxaGetWhiteblocks(*args):
  return _tesseract.boxaGetWhiteblocks(*args)
boxaGetWhiteblocks = _tesseract.boxaGetWhiteblocks

def boxaPruneSortedOnOverlap(*args):
  return _tesseract.boxaPruneSortedOnOverlap(*args)
boxaPruneSortedOnOverlap = _tesseract.boxaPruneSortedOnOverlap

def convertFilesToPdf(*args):
  return _tesseract.convertFilesToPdf(*args)
convertFilesToPdf = _tesseract.convertFilesToPdf

def saConvertFilesToPdf(*args):
  return _tesseract.saConvertFilesToPdf(*args)
saConvertFilesToPdf = _tesseract.saConvertFilesToPdf

def saConvertFilesToPdfData(*args):
  return _tesseract.saConvertFilesToPdfData(*args)
saConvertFilesToPdfData = _tesseract.saConvertFilesToPdfData

def selectDefaultPdfEncoding(*args):
  return _tesseract.selectDefaultPdfEncoding(*args)
selectDefaultPdfEncoding = _tesseract.selectDefaultPdfEncoding

def convertUnscaledFilesToPdf(*args):
  return _tesseract.convertUnscaledFilesToPdf(*args)
convertUnscaledFilesToPdf = _tesseract.convertUnscaledFilesToPdf

def saConvertUnscaledFilesToPdf(*args):
  return _tesseract.saConvertUnscaledFilesToPdf(*args)
saConvertUnscaledFilesToPdf = _tesseract.saConvertUnscaledFilesToPdf

def saConvertUnscaledFilesToPdfData(*args):
  return _tesseract.saConvertUnscaledFilesToPdfData(*args)
saConvertUnscaledFilesToPdfData = _tesseract.saConvertUnscaledFilesToPdfData

def convertUnscaledToPdfData(*args):
  return _tesseract.convertUnscaledToPdfData(*args)
convertUnscaledToPdfData = _tesseract.convertUnscaledToPdfData

def pixaConvertToPdf(*args):
  return _tesseract.pixaConvertToPdf(*args)
pixaConvertToPdf = _tesseract.pixaConvertToPdf

def pixaConvertToPdfData(*args):
  return _tesseract.pixaConvertToPdfData(*args)
pixaConvertToPdfData = _tesseract.pixaConvertToPdfData

def convertToPdf(*args):
  return _tesseract.convertToPdf(*args)
convertToPdf = _tesseract.convertToPdf

def convertImageDataToPdf(*args):
  return _tesseract.convertImageDataToPdf(*args)
convertImageDataToPdf = _tesseract.convertImageDataToPdf

def convertToPdfData(*args):
  return _tesseract.convertToPdfData(*args)
convertToPdfData = _tesseract.convertToPdfData

def convertImageDataToPdfData(*args):
  return _tesseract.convertImageDataToPdfData(*args)
convertImageDataToPdfData = _tesseract.convertImageDataToPdfData

def pixConvertToPdf(*args):
  return _tesseract.pixConvertToPdf(*args)
pixConvertToPdf = _tesseract.pixConvertToPdf

def pixConvertToPdfData(*args):
  return _tesseract.pixConvertToPdfData(*args)
pixConvertToPdfData = _tesseract.pixConvertToPdfData

def pixWriteStreamPdf(*args):
  return _tesseract.pixWriteStreamPdf(*args)
pixWriteStreamPdf = _tesseract.pixWriteStreamPdf

def convertSegmentedFilesToPdf(*args):
  return _tesseract.convertSegmentedFilesToPdf(*args)
convertSegmentedFilesToPdf = _tesseract.convertSegmentedFilesToPdf

def convertNumberedMasksToBoxaa(*args):
  return _tesseract.convertNumberedMasksToBoxaa(*args)
convertNumberedMasksToBoxaa = _tesseract.convertNumberedMasksToBoxaa

def convertToPdfSegmented(*args):
  return _tesseract.convertToPdfSegmented(*args)
convertToPdfSegmented = _tesseract.convertToPdfSegmented

def pixConvertToPdfSegmented(*args):
  return _tesseract.pixConvertToPdfSegmented(*args)
pixConvertToPdfSegmented = _tesseract.pixConvertToPdfSegmented

def convertToPdfDataSegmented(*args):
  return _tesseract.convertToPdfDataSegmented(*args)
convertToPdfDataSegmented = _tesseract.convertToPdfDataSegmented

def pixConvertToPdfDataSegmented(*args):
  return _tesseract.pixConvertToPdfDataSegmented(*args)
pixConvertToPdfDataSegmented = _tesseract.pixConvertToPdfDataSegmented

def concatenatePdf(*args):
  return _tesseract.concatenatePdf(*args)
concatenatePdf = _tesseract.concatenatePdf

def saConcatenatePdf(*args):
  return _tesseract.saConcatenatePdf(*args)
saConcatenatePdf = _tesseract.saConcatenatePdf

def ptraConcatenatePdf(*args):
  return _tesseract.ptraConcatenatePdf(*args)
ptraConcatenatePdf = _tesseract.ptraConcatenatePdf

def concatenatePdfToData(*args):
  return _tesseract.concatenatePdfToData(*args)
concatenatePdfToData = _tesseract.concatenatePdfToData

def saConcatenatePdfToData(*args):
  return _tesseract.saConcatenatePdfToData(*args)
saConcatenatePdfToData = _tesseract.saConcatenatePdfToData

def ptraConcatenatePdfToData(*args):
  return _tesseract.ptraConcatenatePdfToData(*args)
ptraConcatenatePdfToData = _tesseract.ptraConcatenatePdfToData

def l_pdfSetG4ImageMask(*args):
  return _tesseract.l_pdfSetG4ImageMask(*args)
l_pdfSetG4ImageMask = _tesseract.l_pdfSetG4ImageMask

def l_pdfSetDateAndVersion(*args):
  return _tesseract.l_pdfSetDateAndVersion(*args)
l_pdfSetDateAndVersion = _tesseract.l_pdfSetDateAndVersion

def pixCreate(*args):
  return _tesseract.pixCreate(*args)
pixCreate = _tesseract.pixCreate

def pixCreateNoInit(*args):
  return _tesseract.pixCreateNoInit(*args)
pixCreateNoInit = _tesseract.pixCreateNoInit

def pixCreateTemplate(*args):
  return _tesseract.pixCreateTemplate(*args)
pixCreateTemplate = _tesseract.pixCreateTemplate

def pixCreateTemplateNoInit(*args):
  return _tesseract.pixCreateTemplateNoInit(*args)
pixCreateTemplateNoInit = _tesseract.pixCreateTemplateNoInit

def pixCreateHeader(*args):
  return _tesseract.pixCreateHeader(*args)
pixCreateHeader = _tesseract.pixCreateHeader

def pixClone(*args):
  return _tesseract.pixClone(*args)
pixClone = _tesseract.pixClone

def pixDestroy(*args):
  return _tesseract.pixDestroy(*args)
pixDestroy = _tesseract.pixDestroy

def pixCopy(*args):
  return _tesseract.pixCopy(*args)
pixCopy = _tesseract.pixCopy

def pixResizeImageData(*args):
  return _tesseract.pixResizeImageData(*args)
pixResizeImageData = _tesseract.pixResizeImageData

def pixCopyColormap(*args):
  return _tesseract.pixCopyColormap(*args)
pixCopyColormap = _tesseract.pixCopyColormap

def pixSizesEqual(*args):
  return _tesseract.pixSizesEqual(*args)
pixSizesEqual = _tesseract.pixSizesEqual

def pixTransferAllData(*args):
  return _tesseract.pixTransferAllData(*args)
pixTransferAllData = _tesseract.pixTransferAllData

def pixSwapAndDestroy(*args):
  return _tesseract.pixSwapAndDestroy(*args)
pixSwapAndDestroy = _tesseract.pixSwapAndDestroy

def pixGetWidth(*args):
  return _tesseract.pixGetWidth(*args)
pixGetWidth = _tesseract.pixGetWidth

def pixSetWidth(*args):
  return _tesseract.pixSetWidth(*args)
pixSetWidth = _tesseract.pixSetWidth

def pixGetHeight(*args):
  return _tesseract.pixGetHeight(*args)
pixGetHeight = _tesseract.pixGetHeight

def pixSetHeight(*args):
  return _tesseract.pixSetHeight(*args)
pixSetHeight = _tesseract.pixSetHeight

def pixGetDepth(*args):
  return _tesseract.pixGetDepth(*args)
pixGetDepth = _tesseract.pixGetDepth

def pixSetDepth(*args):
  return _tesseract.pixSetDepth(*args)
pixSetDepth = _tesseract.pixSetDepth

def pixGetDimensions(*args):
  return _tesseract.pixGetDimensions(*args)
pixGetDimensions = _tesseract.pixGetDimensions

def pixSetDimensions(*args):
  return _tesseract.pixSetDimensions(*args)
pixSetDimensions = _tesseract.pixSetDimensions

def pixCopyDimensions(*args):
  return _tesseract.pixCopyDimensions(*args)
pixCopyDimensions = _tesseract.pixCopyDimensions

def pixGetSpp(*args):
  return _tesseract.pixGetSpp(*args)
pixGetSpp = _tesseract.pixGetSpp

def pixSetSpp(*args):
  return _tesseract.pixSetSpp(*args)
pixSetSpp = _tesseract.pixSetSpp

def pixCopySpp(*args):
  return _tesseract.pixCopySpp(*args)
pixCopySpp = _tesseract.pixCopySpp

def pixGetWpl(*args):
  return _tesseract.pixGetWpl(*args)
pixGetWpl = _tesseract.pixGetWpl

def pixSetWpl(*args):
  return _tesseract.pixSetWpl(*args)
pixSetWpl = _tesseract.pixSetWpl

def pixGetRefcount(*args):
  return _tesseract.pixGetRefcount(*args)
pixGetRefcount = _tesseract.pixGetRefcount

def pixChangeRefcount(*args):
  return _tesseract.pixChangeRefcount(*args)
pixChangeRefcount = _tesseract.pixChangeRefcount

def pixGetXRes(*args):
  return _tesseract.pixGetXRes(*args)
pixGetXRes = _tesseract.pixGetXRes

def pixSetXRes(*args):
  return _tesseract.pixSetXRes(*args)
pixSetXRes = _tesseract.pixSetXRes

def pixGetYRes(*args):
  return _tesseract.pixGetYRes(*args)
pixGetYRes = _tesseract.pixGetYRes

def pixSetYRes(*args):
  return _tesseract.pixSetYRes(*args)
pixSetYRes = _tesseract.pixSetYRes

def pixGetResolution(*args):
  return _tesseract.pixGetResolution(*args)
pixGetResolution = _tesseract.pixGetResolution

def pixSetResolution(*args):
  return _tesseract.pixSetResolution(*args)
pixSetResolution = _tesseract.pixSetResolution

def pixCopyResolution(*args):
  return _tesseract.pixCopyResolution(*args)
pixCopyResolution = _tesseract.pixCopyResolution

def pixScaleResolution(*args):
  return _tesseract.pixScaleResolution(*args)
pixScaleResolution = _tesseract.pixScaleResolution

def pixGetInputFormat(*args):
  return _tesseract.pixGetInputFormat(*args)
pixGetInputFormat = _tesseract.pixGetInputFormat

def pixSetInputFormat(*args):
  return _tesseract.pixSetInputFormat(*args)
pixSetInputFormat = _tesseract.pixSetInputFormat

def pixCopyInputFormat(*args):
  return _tesseract.pixCopyInputFormat(*args)
pixCopyInputFormat = _tesseract.pixCopyInputFormat

def pixGetText(*args):
  return _tesseract.pixGetText(*args)
pixGetText = _tesseract.pixGetText

def pixSetText(*args):
  return _tesseract.pixSetText(*args)
pixSetText = _tesseract.pixSetText

def pixAddText(*args):
  return _tesseract.pixAddText(*args)
pixAddText = _tesseract.pixAddText

def pixCopyText(*args):
  return _tesseract.pixCopyText(*args)
pixCopyText = _tesseract.pixCopyText

def pixGetColormap(*args):
  return _tesseract.pixGetColormap(*args)
pixGetColormap = _tesseract.pixGetColormap

def pixSetColormap(*args):
  return _tesseract.pixSetColormap(*args)
pixSetColormap = _tesseract.pixSetColormap

def pixDestroyColormap(*args):
  return _tesseract.pixDestroyColormap(*args)
pixDestroyColormap = _tesseract.pixDestroyColormap

def pixGetData(*args):
  return _tesseract.pixGetData(*args)
pixGetData = _tesseract.pixGetData

def pixSetData(*args):
  return _tesseract.pixSetData(*args)
pixSetData = _tesseract.pixSetData

def pixExtractData(*args):
  return _tesseract.pixExtractData(*args)
pixExtractData = _tesseract.pixExtractData

def pixFreeData(*args):
  return _tesseract.pixFreeData(*args)
pixFreeData = _tesseract.pixFreeData

def pixGetLinePtrs(*args):
  return _tesseract.pixGetLinePtrs(*args)
pixGetLinePtrs = _tesseract.pixGetLinePtrs

def pixPrintStreamInfo(*args):
  return _tesseract.pixPrintStreamInfo(*args)
pixPrintStreamInfo = _tesseract.pixPrintStreamInfo

def pixGetPixel(*args):
  return _tesseract.pixGetPixel(*args)
pixGetPixel = _tesseract.pixGetPixel

def pixSetPixel(*args):
  return _tesseract.pixSetPixel(*args)
pixSetPixel = _tesseract.pixSetPixel

def pixGetRGBPixel(*args):
  return _tesseract.pixGetRGBPixel(*args)
pixGetRGBPixel = _tesseract.pixGetRGBPixel

def pixSetRGBPixel(*args):
  return _tesseract.pixSetRGBPixel(*args)
pixSetRGBPixel = _tesseract.pixSetRGBPixel

def pixGetRandomPixel(*args):
  return _tesseract.pixGetRandomPixel(*args)
pixGetRandomPixel = _tesseract.pixGetRandomPixel

def pixClearPixel(*args):
  return _tesseract.pixClearPixel(*args)
pixClearPixel = _tesseract.pixClearPixel

def pixFlipPixel(*args):
  return _tesseract.pixFlipPixel(*args)
pixFlipPixel = _tesseract.pixFlipPixel

def setPixelLow(*args):
  return _tesseract.setPixelLow(*args)
setPixelLow = _tesseract.setPixelLow

def pixGetBlackOrWhiteVal(*args):
  return _tesseract.pixGetBlackOrWhiteVal(*args)
pixGetBlackOrWhiteVal = _tesseract.pixGetBlackOrWhiteVal

def pixClearAll(*args):
  return _tesseract.pixClearAll(*args)
pixClearAll = _tesseract.pixClearAll

def pixSetAll(*args):
  return _tesseract.pixSetAll(*args)
pixSetAll = _tesseract.pixSetAll

def pixSetAllGray(*args):
  return _tesseract.pixSetAllGray(*args)
pixSetAllGray = _tesseract.pixSetAllGray

def pixSetAllArbitrary(*args):
  return _tesseract.pixSetAllArbitrary(*args)
pixSetAllArbitrary = _tesseract.pixSetAllArbitrary

def pixSetBlackOrWhite(*args):
  return _tesseract.pixSetBlackOrWhite(*args)
pixSetBlackOrWhite = _tesseract.pixSetBlackOrWhite

def pixSetComponentArbitrary(*args):
  return _tesseract.pixSetComponentArbitrary(*args)
pixSetComponentArbitrary = _tesseract.pixSetComponentArbitrary

def pixClearInRect(*args):
  return _tesseract.pixClearInRect(*args)
pixClearInRect = _tesseract.pixClearInRect

def pixSetInRect(*args):
  return _tesseract.pixSetInRect(*args)
pixSetInRect = _tesseract.pixSetInRect

def pixSetInRectArbitrary(*args):
  return _tesseract.pixSetInRectArbitrary(*args)
pixSetInRectArbitrary = _tesseract.pixSetInRectArbitrary

def pixBlendInRect(*args):
  return _tesseract.pixBlendInRect(*args)
pixBlendInRect = _tesseract.pixBlendInRect

def pixSetPadBits(*args):
  return _tesseract.pixSetPadBits(*args)
pixSetPadBits = _tesseract.pixSetPadBits

def pixSetPadBitsBand(*args):
  return _tesseract.pixSetPadBitsBand(*args)
pixSetPadBitsBand = _tesseract.pixSetPadBitsBand

def pixSetOrClearBorder(*args):
  return _tesseract.pixSetOrClearBorder(*args)
pixSetOrClearBorder = _tesseract.pixSetOrClearBorder

def pixSetBorderVal(*args):
  return _tesseract.pixSetBorderVal(*args)
pixSetBorderVal = _tesseract.pixSetBorderVal

def pixSetBorderRingVal(*args):
  return _tesseract.pixSetBorderRingVal(*args)
pixSetBorderRingVal = _tesseract.pixSetBorderRingVal

def pixSetMirroredBorder(*args):
  return _tesseract.pixSetMirroredBorder(*args)
pixSetMirroredBorder = _tesseract.pixSetMirroredBorder

def pixCopyBorder(*args):
  return _tesseract.pixCopyBorder(*args)
pixCopyBorder = _tesseract.pixCopyBorder

def pixAddBorder(*args):
  return _tesseract.pixAddBorder(*args)
pixAddBorder = _tesseract.pixAddBorder

def pixAddBlackOrWhiteBorder(*args):
  return _tesseract.pixAddBlackOrWhiteBorder(*args)
pixAddBlackOrWhiteBorder = _tesseract.pixAddBlackOrWhiteBorder

def pixAddBorderGeneral(*args):
  return _tesseract.pixAddBorderGeneral(*args)
pixAddBorderGeneral = _tesseract.pixAddBorderGeneral

def pixRemoveBorder(*args):
  return _tesseract.pixRemoveBorder(*args)
pixRemoveBorder = _tesseract.pixRemoveBorder

def pixRemoveBorderGeneral(*args):
  return _tesseract.pixRemoveBorderGeneral(*args)
pixRemoveBorderGeneral = _tesseract.pixRemoveBorderGeneral

def pixRemoveBorderToSize(*args):
  return _tesseract.pixRemoveBorderToSize(*args)
pixRemoveBorderToSize = _tesseract.pixRemoveBorderToSize

def pixAddMirroredBorder(*args):
  return _tesseract.pixAddMirroredBorder(*args)
pixAddMirroredBorder = _tesseract.pixAddMirroredBorder

def pixAddRepeatedBorder(*args):
  return _tesseract.pixAddRepeatedBorder(*args)
pixAddRepeatedBorder = _tesseract.pixAddRepeatedBorder

def pixAddMixedBorder(*args):
  return _tesseract.pixAddMixedBorder(*args)
pixAddMixedBorder = _tesseract.pixAddMixedBorder

def pixAddContinuedBorder(*args):
  return _tesseract.pixAddContinuedBorder(*args)
pixAddContinuedBorder = _tesseract.pixAddContinuedBorder

def pixShiftAndTransferAlpha(*args):
  return _tesseract.pixShiftAndTransferAlpha(*args)
pixShiftAndTransferAlpha = _tesseract.pixShiftAndTransferAlpha

def pixDisplayLayersRGBA(*args):
  return _tesseract.pixDisplayLayersRGBA(*args)
pixDisplayLayersRGBA = _tesseract.pixDisplayLayersRGBA

def pixCreateRGBImage(*args):
  return _tesseract.pixCreateRGBImage(*args)
pixCreateRGBImage = _tesseract.pixCreateRGBImage

def pixGetRGBComponent(*args):
  return _tesseract.pixGetRGBComponent(*args)
pixGetRGBComponent = _tesseract.pixGetRGBComponent

def pixSetRGBComponent(*args):
  return _tesseract.pixSetRGBComponent(*args)
pixSetRGBComponent = _tesseract.pixSetRGBComponent

def pixGetRGBComponentCmap(*args):
  return _tesseract.pixGetRGBComponentCmap(*args)
pixGetRGBComponentCmap = _tesseract.pixGetRGBComponentCmap

def pixCopyRGBComponent(*args):
  return _tesseract.pixCopyRGBComponent(*args)
pixCopyRGBComponent = _tesseract.pixCopyRGBComponent

def composeRGBPixel(*args):
  return _tesseract.composeRGBPixel(*args)
composeRGBPixel = _tesseract.composeRGBPixel

def composeRGBAPixel(*args):
  return _tesseract.composeRGBAPixel(*args)
composeRGBAPixel = _tesseract.composeRGBAPixel

def extractRGBValues(*args):
  return _tesseract.extractRGBValues(*args)
extractRGBValues = _tesseract.extractRGBValues

def extractRGBAValues(*args):
  return _tesseract.extractRGBAValues(*args)
extractRGBAValues = _tesseract.extractRGBAValues

def extractMinMaxComponent(*args):
  return _tesseract.extractMinMaxComponent(*args)
extractMinMaxComponent = _tesseract.extractMinMaxComponent

def pixGetRGBLine(*args):
  return _tesseract.pixGetRGBLine(*args)
pixGetRGBLine = _tesseract.pixGetRGBLine

def pixEndianByteSwapNew(*args):
  return _tesseract.pixEndianByteSwapNew(*args)
pixEndianByteSwapNew = _tesseract.pixEndianByteSwapNew

def pixEndianByteSwap(*args):
  return _tesseract.pixEndianByteSwap(*args)
pixEndianByteSwap = _tesseract.pixEndianByteSwap

def lineEndianByteSwap(*args):
  return _tesseract.lineEndianByteSwap(*args)
lineEndianByteSwap = _tesseract.lineEndianByteSwap

def pixEndianTwoByteSwapNew(*args):
  return _tesseract.pixEndianTwoByteSwapNew(*args)
pixEndianTwoByteSwapNew = _tesseract.pixEndianTwoByteSwapNew

def pixEndianTwoByteSwap(*args):
  return _tesseract.pixEndianTwoByteSwap(*args)
pixEndianTwoByteSwap = _tesseract.pixEndianTwoByteSwap

def pixGetRasterData(*args):
  return _tesseract.pixGetRasterData(*args)
pixGetRasterData = _tesseract.pixGetRasterData

def pixAlphaIsOpaque(*args):
  return _tesseract.pixAlphaIsOpaque(*args)
pixAlphaIsOpaque = _tesseract.pixAlphaIsOpaque

def pixSetupByteProcessing(*args):
  return _tesseract.pixSetupByteProcessing(*args)
pixSetupByteProcessing = _tesseract.pixSetupByteProcessing

def pixCleanupByteProcessing(*args):
  return _tesseract.pixCleanupByteProcessing(*args)
pixCleanupByteProcessing = _tesseract.pixCleanupByteProcessing

def l_setAlphaMaskBorder(*args):
  return _tesseract.l_setAlphaMaskBorder(*args)
l_setAlphaMaskBorder = _tesseract.l_setAlphaMaskBorder

def pixSetMasked(*args):
  return _tesseract.pixSetMasked(*args)
pixSetMasked = _tesseract.pixSetMasked

def pixSetMaskedGeneral(*args):
  return _tesseract.pixSetMaskedGeneral(*args)
pixSetMaskedGeneral = _tesseract.pixSetMaskedGeneral

def pixCombineMasked(*args):
  return _tesseract.pixCombineMasked(*args)
pixCombineMasked = _tesseract.pixCombineMasked

def pixCombineMaskedGeneral(*args):
  return _tesseract.pixCombineMaskedGeneral(*args)
pixCombineMaskedGeneral = _tesseract.pixCombineMaskedGeneral

def pixPaintThroughMask(*args):
  return _tesseract.pixPaintThroughMask(*args)
pixPaintThroughMask = _tesseract.pixPaintThroughMask

def pixPaintSelfThroughMask(*args):
  return _tesseract.pixPaintSelfThroughMask(*args)
pixPaintSelfThroughMask = _tesseract.pixPaintSelfThroughMask

def pixMakeMaskFromLUT(*args):
  return _tesseract.pixMakeMaskFromLUT(*args)
pixMakeMaskFromLUT = _tesseract.pixMakeMaskFromLUT

def pixSetUnderTransparency(*args):
  return _tesseract.pixSetUnderTransparency(*args)
pixSetUnderTransparency = _tesseract.pixSetUnderTransparency

def pixInvert(*args):
  return _tesseract.pixInvert(*args)
pixInvert = _tesseract.pixInvert

def pixOr(*args):
  return _tesseract.pixOr(*args)
pixOr = _tesseract.pixOr

def pixAnd(*args):
  return _tesseract.pixAnd(*args)
pixAnd = _tesseract.pixAnd

def pixXor(*args):
  return _tesseract.pixXor(*args)
pixXor = _tesseract.pixXor

def pixSubtract(*args):
  return _tesseract.pixSubtract(*args)
pixSubtract = _tesseract.pixSubtract

def pixZero(*args):
  return _tesseract.pixZero(*args)
pixZero = _tesseract.pixZero

def pixForegroundFraction(*args):
  return _tesseract.pixForegroundFraction(*args)
pixForegroundFraction = _tesseract.pixForegroundFraction

def pixaCountPixels(*args):
  return _tesseract.pixaCountPixels(*args)
pixaCountPixels = _tesseract.pixaCountPixels

def pixCountPixels(*args):
  return _tesseract.pixCountPixels(*args)
pixCountPixels = _tesseract.pixCountPixels

def pixCountByRow(*args):
  return _tesseract.pixCountByRow(*args)
pixCountByRow = _tesseract.pixCountByRow

def pixCountByColumn(*args):
  return _tesseract.pixCountByColumn(*args)
pixCountByColumn = _tesseract.pixCountByColumn

def pixCountPixelsByRow(*args):
  return _tesseract.pixCountPixelsByRow(*args)
pixCountPixelsByRow = _tesseract.pixCountPixelsByRow

def pixCountPixelsByColumn(*args):
  return _tesseract.pixCountPixelsByColumn(*args)
pixCountPixelsByColumn = _tesseract.pixCountPixelsByColumn

def pixCountPixelsInRow(*args):
  return _tesseract.pixCountPixelsInRow(*args)
pixCountPixelsInRow = _tesseract.pixCountPixelsInRow

def pixGetMomentByColumn(*args):
  return _tesseract.pixGetMomentByColumn(*args)
pixGetMomentByColumn = _tesseract.pixGetMomentByColumn

def pixThresholdPixelSum(*args):
  return _tesseract.pixThresholdPixelSum(*args)
pixThresholdPixelSum = _tesseract.pixThresholdPixelSum

def makePixelSumTab8():
  return _tesseract.makePixelSumTab8()
makePixelSumTab8 = _tesseract.makePixelSumTab8

def makePixelCentroidTab8():
  return _tesseract.makePixelCentroidTab8()
makePixelCentroidTab8 = _tesseract.makePixelCentroidTab8

def pixAverageByRow(*args):
  return _tesseract.pixAverageByRow(*args)
pixAverageByRow = _tesseract.pixAverageByRow

def pixAverageByColumn(*args):
  return _tesseract.pixAverageByColumn(*args)
pixAverageByColumn = _tesseract.pixAverageByColumn

def pixAverageInRect(*args):
  return _tesseract.pixAverageInRect(*args)
pixAverageInRect = _tesseract.pixAverageInRect

def pixVarianceByRow(*args):
  return _tesseract.pixVarianceByRow(*args)
pixVarianceByRow = _tesseract.pixVarianceByRow

def pixVarianceByColumn(*args):
  return _tesseract.pixVarianceByColumn(*args)
pixVarianceByColumn = _tesseract.pixVarianceByColumn

def pixVarianceInRect(*args):
  return _tesseract.pixVarianceInRect(*args)
pixVarianceInRect = _tesseract.pixVarianceInRect

def pixAbsDiffByRow(*args):
  return _tesseract.pixAbsDiffByRow(*args)
pixAbsDiffByRow = _tesseract.pixAbsDiffByRow

def pixAbsDiffByColumn(*args):
  return _tesseract.pixAbsDiffByColumn(*args)
pixAbsDiffByColumn = _tesseract.pixAbsDiffByColumn

def pixAbsDiffInRect(*args):
  return _tesseract.pixAbsDiffInRect(*args)
pixAbsDiffInRect = _tesseract.pixAbsDiffInRect

def pixAbsDiffOnLine(*args):
  return _tesseract.pixAbsDiffOnLine(*args)
pixAbsDiffOnLine = _tesseract.pixAbsDiffOnLine

def pixCountArbInRect(*args):
  return _tesseract.pixCountArbInRect(*args)
pixCountArbInRect = _tesseract.pixCountArbInRect

def pixMirroredTiling(*args):
  return _tesseract.pixMirroredTiling(*args)
pixMirroredTiling = _tesseract.pixMirroredTiling

def pixGetGrayHistogram(*args):
  return _tesseract.pixGetGrayHistogram(*args)
pixGetGrayHistogram = _tesseract.pixGetGrayHistogram

def pixGetGrayHistogramMasked(*args):
  return _tesseract.pixGetGrayHistogramMasked(*args)
pixGetGrayHistogramMasked = _tesseract.pixGetGrayHistogramMasked

def pixGetGrayHistogramInRect(*args):
  return _tesseract.pixGetGrayHistogramInRect(*args)
pixGetGrayHistogramInRect = _tesseract.pixGetGrayHistogramInRect

def pixGetColorHistogram(*args):
  return _tesseract.pixGetColorHistogram(*args)
pixGetColorHistogram = _tesseract.pixGetColorHistogram

def pixGetColorHistogramMasked(*args):
  return _tesseract.pixGetColorHistogramMasked(*args)
pixGetColorHistogramMasked = _tesseract.pixGetColorHistogramMasked

def pixGetCmapHistogram(*args):
  return _tesseract.pixGetCmapHistogram(*args)
pixGetCmapHistogram = _tesseract.pixGetCmapHistogram

def pixGetCmapHistogramMasked(*args):
  return _tesseract.pixGetCmapHistogramMasked(*args)
pixGetCmapHistogramMasked = _tesseract.pixGetCmapHistogramMasked

def pixGetCmapHistogramInRect(*args):
  return _tesseract.pixGetCmapHistogramInRect(*args)
pixGetCmapHistogramInRect = _tesseract.pixGetCmapHistogramInRect

def pixGetRankValue(*args):
  return _tesseract.pixGetRankValue(*args)
pixGetRankValue = _tesseract.pixGetRankValue

def pixGetRankValueMaskedRGB(*args):
  return _tesseract.pixGetRankValueMaskedRGB(*args)
pixGetRankValueMaskedRGB = _tesseract.pixGetRankValueMaskedRGB

def pixGetRankValueMasked(*args):
  return _tesseract.pixGetRankValueMasked(*args)
pixGetRankValueMasked = _tesseract.pixGetRankValueMasked

def pixGetAverageValue(*args):
  return _tesseract.pixGetAverageValue(*args)
pixGetAverageValue = _tesseract.pixGetAverageValue

def pixGetAverageMaskedRGB(*args):
  return _tesseract.pixGetAverageMaskedRGB(*args)
pixGetAverageMaskedRGB = _tesseract.pixGetAverageMaskedRGB

def pixGetAverageMasked(*args):
  return _tesseract.pixGetAverageMasked(*args)
pixGetAverageMasked = _tesseract.pixGetAverageMasked

def pixGetAverageTiledRGB(*args):
  return _tesseract.pixGetAverageTiledRGB(*args)
pixGetAverageTiledRGB = _tesseract.pixGetAverageTiledRGB

def pixGetAverageTiled(*args):
  return _tesseract.pixGetAverageTiled(*args)
pixGetAverageTiled = _tesseract.pixGetAverageTiled

def pixRowStats(*args):
  return _tesseract.pixRowStats(*args)
pixRowStats = _tesseract.pixRowStats

def pixColumnStats(*args):
  return _tesseract.pixColumnStats(*args)
pixColumnStats = _tesseract.pixColumnStats

def pixGetComponentRange(*args):
  return _tesseract.pixGetComponentRange(*args)
pixGetComponentRange = _tesseract.pixGetComponentRange

def pixGetExtremeValue(*args):
  return _tesseract.pixGetExtremeValue(*args)
pixGetExtremeValue = _tesseract.pixGetExtremeValue

def pixGetMaxValueInRect(*args):
  return _tesseract.pixGetMaxValueInRect(*args)
pixGetMaxValueInRect = _tesseract.pixGetMaxValueInRect

def pixGetBinnedComponentRange(*args):
  return _tesseract.pixGetBinnedComponentRange(*args)
pixGetBinnedComponentRange = _tesseract.pixGetBinnedComponentRange

def pixGetRankColorArray(*args):
  return _tesseract.pixGetRankColorArray(*args)
pixGetRankColorArray = _tesseract.pixGetRankColorArray

def pixGetBinnedColor(*args):
  return _tesseract.pixGetBinnedColor(*args)
pixGetBinnedColor = _tesseract.pixGetBinnedColor

def pixDisplayColorArray(*args):
  return _tesseract.pixDisplayColorArray(*args)
pixDisplayColorArray = _tesseract.pixDisplayColorArray

def pixaGetAlignedStats(*args):
  return _tesseract.pixaGetAlignedStats(*args)
pixaGetAlignedStats = _tesseract.pixaGetAlignedStats

def pixaExtractColumnFromEachPix(*args):
  return _tesseract.pixaExtractColumnFromEachPix(*args)
pixaExtractColumnFromEachPix = _tesseract.pixaExtractColumnFromEachPix

def pixGetRowStats(*args):
  return _tesseract.pixGetRowStats(*args)
pixGetRowStats = _tesseract.pixGetRowStats

def pixGetColumnStats(*args):
  return _tesseract.pixGetColumnStats(*args)
pixGetColumnStats = _tesseract.pixGetColumnStats

def pixSetPixelColumn(*args):
  return _tesseract.pixSetPixelColumn(*args)
pixSetPixelColumn = _tesseract.pixSetPixelColumn

def pixThresholdForFgBg(*args):
  return _tesseract.pixThresholdForFgBg(*args)
pixThresholdForFgBg = _tesseract.pixThresholdForFgBg

def pixSplitDistributionFgBg(*args):
  return _tesseract.pixSplitDistributionFgBg(*args)
pixSplitDistributionFgBg = _tesseract.pixSplitDistributionFgBg

def pixaFindDimensions(*args):
  return _tesseract.pixaFindDimensions(*args)
pixaFindDimensions = _tesseract.pixaFindDimensions

def pixFindAreaPerimRatio(*args):
  return _tesseract.pixFindAreaPerimRatio(*args)
pixFindAreaPerimRatio = _tesseract.pixFindAreaPerimRatio

def pixaFindPerimToAreaRatio(*args):
  return _tesseract.pixaFindPerimToAreaRatio(*args)
pixaFindPerimToAreaRatio = _tesseract.pixaFindPerimToAreaRatio

def pixFindPerimToAreaRatio(*args):
  return _tesseract.pixFindPerimToAreaRatio(*args)
pixFindPerimToAreaRatio = _tesseract.pixFindPerimToAreaRatio

def pixaFindPerimSizeRatio(*args):
  return _tesseract.pixaFindPerimSizeRatio(*args)
pixaFindPerimSizeRatio = _tesseract.pixaFindPerimSizeRatio

def pixFindPerimSizeRatio(*args):
  return _tesseract.pixFindPerimSizeRatio(*args)
pixFindPerimSizeRatio = _tesseract.pixFindPerimSizeRatio

def pixaFindAreaFraction(*args):
  return _tesseract.pixaFindAreaFraction(*args)
pixaFindAreaFraction = _tesseract.pixaFindAreaFraction

def pixFindAreaFraction(*args):
  return _tesseract.pixFindAreaFraction(*args)
pixFindAreaFraction = _tesseract.pixFindAreaFraction

def pixaFindAreaFractionMasked(*args):
  return _tesseract.pixaFindAreaFractionMasked(*args)
pixaFindAreaFractionMasked = _tesseract.pixaFindAreaFractionMasked

def pixFindAreaFractionMasked(*args):
  return _tesseract.pixFindAreaFractionMasked(*args)
pixFindAreaFractionMasked = _tesseract.pixFindAreaFractionMasked

def pixaFindWidthHeightRatio(*args):
  return _tesseract.pixaFindWidthHeightRatio(*args)
pixaFindWidthHeightRatio = _tesseract.pixaFindWidthHeightRatio

def pixaFindWidthHeightProduct(*args):
  return _tesseract.pixaFindWidthHeightProduct(*args)
pixaFindWidthHeightProduct = _tesseract.pixaFindWidthHeightProduct

def pixFindOverlapFraction(*args):
  return _tesseract.pixFindOverlapFraction(*args)
pixFindOverlapFraction = _tesseract.pixFindOverlapFraction

def pixFindRectangleComps(*args):
  return _tesseract.pixFindRectangleComps(*args)
pixFindRectangleComps = _tesseract.pixFindRectangleComps

def pixConformsToRectangle(*args):
  return _tesseract.pixConformsToRectangle(*args)
pixConformsToRectangle = _tesseract.pixConformsToRectangle

def pixClipRectangles(*args):
  return _tesseract.pixClipRectangles(*args)
pixClipRectangles = _tesseract.pixClipRectangles

def pixClipRectangle(*args):
  return _tesseract.pixClipRectangle(*args)
pixClipRectangle = _tesseract.pixClipRectangle

def pixClipMasked(*args):
  return _tesseract.pixClipMasked(*args)
pixClipMasked = _tesseract.pixClipMasked

def pixCropToMatch(*args):
  return _tesseract.pixCropToMatch(*args)
pixCropToMatch = _tesseract.pixCropToMatch

def pixCropToSize(*args):
  return _tesseract.pixCropToSize(*args)
pixCropToSize = _tesseract.pixCropToSize

def pixResizeToMatch(*args):
  return _tesseract.pixResizeToMatch(*args)
pixResizeToMatch = _tesseract.pixResizeToMatch

def pixClipToForeground(*args):
  return _tesseract.pixClipToForeground(*args)
pixClipToForeground = _tesseract.pixClipToForeground

def pixTestClipToForeground(*args):
  return _tesseract.pixTestClipToForeground(*args)
pixTestClipToForeground = _tesseract.pixTestClipToForeground

def pixClipBoxToForeground(*args):
  return _tesseract.pixClipBoxToForeground(*args)
pixClipBoxToForeground = _tesseract.pixClipBoxToForeground

def pixScanForForeground(*args):
  return _tesseract.pixScanForForeground(*args)
pixScanForForeground = _tesseract.pixScanForForeground

def pixClipBoxToEdges(*args):
  return _tesseract.pixClipBoxToEdges(*args)
pixClipBoxToEdges = _tesseract.pixClipBoxToEdges

def pixScanForEdge(*args):
  return _tesseract.pixScanForEdge(*args)
pixScanForEdge = _tesseract.pixScanForEdge

def pixExtractOnLine(*args):
  return _tesseract.pixExtractOnLine(*args)
pixExtractOnLine = _tesseract.pixExtractOnLine

def pixAverageOnLine(*args):
  return _tesseract.pixAverageOnLine(*args)
pixAverageOnLine = _tesseract.pixAverageOnLine

def pixAverageIntensityProfile(*args):
  return _tesseract.pixAverageIntensityProfile(*args)
pixAverageIntensityProfile = _tesseract.pixAverageIntensityProfile

def pixReversalProfile(*args):
  return _tesseract.pixReversalProfile(*args)
pixReversalProfile = _tesseract.pixReversalProfile

def pixWindowedVarianceOnLine(*args):
  return _tesseract.pixWindowedVarianceOnLine(*args)
pixWindowedVarianceOnLine = _tesseract.pixWindowedVarianceOnLine

def pixMinMaxNearLine(*args):
  return _tesseract.pixMinMaxNearLine(*args)
pixMinMaxNearLine = _tesseract.pixMinMaxNearLine

def pixRankRowTransform(*args):
  return _tesseract.pixRankRowTransform(*args)
pixRankRowTransform = _tesseract.pixRankRowTransform

def pixRankColumnTransform(*args):
  return _tesseract.pixRankColumnTransform(*args)
pixRankColumnTransform = _tesseract.pixRankColumnTransform

def pixaCreate(*args):
  return _tesseract.pixaCreate(*args)
pixaCreate = _tesseract.pixaCreate

def pixaCreateFromPix(*args):
  return _tesseract.pixaCreateFromPix(*args)
pixaCreateFromPix = _tesseract.pixaCreateFromPix

def pixaCreateFromBoxa(*args):
  return _tesseract.pixaCreateFromBoxa(*args)
pixaCreateFromBoxa = _tesseract.pixaCreateFromBoxa

def pixaSplitPix(*args):
  return _tesseract.pixaSplitPix(*args)
pixaSplitPix = _tesseract.pixaSplitPix

def pixaDestroy(*args):
  return _tesseract.pixaDestroy(*args)
pixaDestroy = _tesseract.pixaDestroy

def pixaCopy(*args):
  return _tesseract.pixaCopy(*args)
pixaCopy = _tesseract.pixaCopy

def pixaAddPix(*args):
  return _tesseract.pixaAddPix(*args)
pixaAddPix = _tesseract.pixaAddPix

def pixaAddBox(*args):
  return _tesseract.pixaAddBox(*args)
pixaAddBox = _tesseract.pixaAddBox

def pixaExtendArrayToSize(*args):
  return _tesseract.pixaExtendArrayToSize(*args)
pixaExtendArrayToSize = _tesseract.pixaExtendArrayToSize

def pixaGetCount(*args):
  return _tesseract.pixaGetCount(*args)
pixaGetCount = _tesseract.pixaGetCount

def pixaChangeRefcount(*args):
  return _tesseract.pixaChangeRefcount(*args)
pixaChangeRefcount = _tesseract.pixaChangeRefcount

def pixaGetPix(*args):
  return _tesseract.pixaGetPix(*args)
pixaGetPix = _tesseract.pixaGetPix

def pixaGetPixDimensions(*args):
  return _tesseract.pixaGetPixDimensions(*args)
pixaGetPixDimensions = _tesseract.pixaGetPixDimensions

def pixaGetBoxa(*args):
  return _tesseract.pixaGetBoxa(*args)
pixaGetBoxa = _tesseract.pixaGetBoxa

def pixaGetBoxaCount(*args):
  return _tesseract.pixaGetBoxaCount(*args)
pixaGetBoxaCount = _tesseract.pixaGetBoxaCount

def pixaGetBox(*args):
  return _tesseract.pixaGetBox(*args)
pixaGetBox = _tesseract.pixaGetBox

def pixaGetBoxGeometry(*args):
  return _tesseract.pixaGetBoxGeometry(*args)
pixaGetBoxGeometry = _tesseract.pixaGetBoxGeometry

def pixaSetBoxa(*args):
  return _tesseract.pixaSetBoxa(*args)
pixaSetBoxa = _tesseract.pixaSetBoxa

def pixaGetPixArray(*args):
  return _tesseract.pixaGetPixArray(*args)
pixaGetPixArray = _tesseract.pixaGetPixArray

def pixaVerifyDepth(*args):
  return _tesseract.pixaVerifyDepth(*args)
pixaVerifyDepth = _tesseract.pixaVerifyDepth

def pixaIsFull(*args):
  return _tesseract.pixaIsFull(*args)
pixaIsFull = _tesseract.pixaIsFull

def pixaCountText(*args):
  return _tesseract.pixaCountText(*args)
pixaCountText = _tesseract.pixaCountText

def pixaGetLinePtrs(*args):
  return _tesseract.pixaGetLinePtrs(*args)
pixaGetLinePtrs = _tesseract.pixaGetLinePtrs

def pixaReplacePix(*args):
  return _tesseract.pixaReplacePix(*args)
pixaReplacePix = _tesseract.pixaReplacePix

def pixaInsertPix(*args):
  return _tesseract.pixaInsertPix(*args)
pixaInsertPix = _tesseract.pixaInsertPix

def pixaRemovePix(*args):
  return _tesseract.pixaRemovePix(*args)
pixaRemovePix = _tesseract.pixaRemovePix

def pixaRemovePixAndSave(*args):
  return _tesseract.pixaRemovePixAndSave(*args)
pixaRemovePixAndSave = _tesseract.pixaRemovePixAndSave

def pixaInitFull(*args):
  return _tesseract.pixaInitFull(*args)
pixaInitFull = _tesseract.pixaInitFull

def pixaClear(*args):
  return _tesseract.pixaClear(*args)
pixaClear = _tesseract.pixaClear

def pixaJoin(*args):
  return _tesseract.pixaJoin(*args)
pixaJoin = _tesseract.pixaJoin

def pixaaJoin(*args):
  return _tesseract.pixaaJoin(*args)
pixaaJoin = _tesseract.pixaaJoin

def pixaaCreate(*args):
  return _tesseract.pixaaCreate(*args)
pixaaCreate = _tesseract.pixaaCreate

def pixaaCreateFromPixa(*args):
  return _tesseract.pixaaCreateFromPixa(*args)
pixaaCreateFromPixa = _tesseract.pixaaCreateFromPixa

def pixaaDestroy(*args):
  return _tesseract.pixaaDestroy(*args)
pixaaDestroy = _tesseract.pixaaDestroy

def pixaaAddPixa(*args):
  return _tesseract.pixaaAddPixa(*args)
pixaaAddPixa = _tesseract.pixaaAddPixa

def pixaaExtendArray(*args):
  return _tesseract.pixaaExtendArray(*args)
pixaaExtendArray = _tesseract.pixaaExtendArray

def pixaaAddPix(*args):
  return _tesseract.pixaaAddPix(*args)
pixaaAddPix = _tesseract.pixaaAddPix

def pixaaAddBox(*args):
  return _tesseract.pixaaAddBox(*args)
pixaaAddBox = _tesseract.pixaaAddBox

def pixaaGetCount(*args):
  return _tesseract.pixaaGetCount(*args)
pixaaGetCount = _tesseract.pixaaGetCount

def pixaaGetPixa(*args):
  return _tesseract.pixaaGetPixa(*args)
pixaaGetPixa = _tesseract.pixaaGetPixa

def pixaaGetBoxa(*args):
  return _tesseract.pixaaGetBoxa(*args)
pixaaGetBoxa = _tesseract.pixaaGetBoxa

def pixaaGetPix(*args):
  return _tesseract.pixaaGetPix(*args)
pixaaGetPix = _tesseract.pixaaGetPix

def pixaaVerifyDepth(*args):
  return _tesseract.pixaaVerifyDepth(*args)
pixaaVerifyDepth = _tesseract.pixaaVerifyDepth

def pixaaIsFull(*args):
  return _tesseract.pixaaIsFull(*args)
pixaaIsFull = _tesseract.pixaaIsFull

def pixaaInitFull(*args):
  return _tesseract.pixaaInitFull(*args)
pixaaInitFull = _tesseract.pixaaInitFull

def pixaaReplacePixa(*args):
  return _tesseract.pixaaReplacePixa(*args)
pixaaReplacePixa = _tesseract.pixaaReplacePixa

def pixaaClear(*args):
  return _tesseract.pixaaClear(*args)
pixaaClear = _tesseract.pixaaClear

def pixaaTruncate(*args):
  return _tesseract.pixaaTruncate(*args)
pixaaTruncate = _tesseract.pixaaTruncate

def pixaRead(*args):
  return _tesseract.pixaRead(*args)
pixaRead = _tesseract.pixaRead

def pixaReadStream(*args):
  return _tesseract.pixaReadStream(*args)
pixaReadStream = _tesseract.pixaReadStream

def pixaWrite(*args):
  return _tesseract.pixaWrite(*args)
pixaWrite = _tesseract.pixaWrite

def pixaWriteStream(*args):
  return _tesseract.pixaWriteStream(*args)
pixaWriteStream = _tesseract.pixaWriteStream

def pixaaReadFromFiles(*args):
  return _tesseract.pixaaReadFromFiles(*args)
pixaaReadFromFiles = _tesseract.pixaaReadFromFiles

def pixaaRead(*args):
  return _tesseract.pixaaRead(*args)
pixaaRead = _tesseract.pixaaRead

def pixaaReadStream(*args):
  return _tesseract.pixaaReadStream(*args)
pixaaReadStream = _tesseract.pixaaReadStream

def pixaaWrite(*args):
  return _tesseract.pixaaWrite(*args)
pixaaWrite = _tesseract.pixaaWrite

def pixaaWriteStream(*args):
  return _tesseract.pixaaWriteStream(*args)
pixaaWriteStream = _tesseract.pixaaWriteStream

def pixaccCreate(*args):
  return _tesseract.pixaccCreate(*args)
pixaccCreate = _tesseract.pixaccCreate

def pixaccCreateFromPix(*args):
  return _tesseract.pixaccCreateFromPix(*args)
pixaccCreateFromPix = _tesseract.pixaccCreateFromPix

def pixaccDestroy(*args):
  return _tesseract.pixaccDestroy(*args)
pixaccDestroy = _tesseract.pixaccDestroy

def pixaccFinal(*args):
  return _tesseract.pixaccFinal(*args)
pixaccFinal = _tesseract.pixaccFinal

def pixaccGetPix(*args):
  return _tesseract.pixaccGetPix(*args)
pixaccGetPix = _tesseract.pixaccGetPix

def pixaccGetOffset(*args):
  return _tesseract.pixaccGetOffset(*args)
pixaccGetOffset = _tesseract.pixaccGetOffset

def pixaccAdd(*args):
  return _tesseract.pixaccAdd(*args)
pixaccAdd = _tesseract.pixaccAdd

def pixaccSubtract(*args):
  return _tesseract.pixaccSubtract(*args)
pixaccSubtract = _tesseract.pixaccSubtract

def pixaccMultConst(*args):
  return _tesseract.pixaccMultConst(*args)
pixaccMultConst = _tesseract.pixaccMultConst

def pixaccMultConstAccumulate(*args):
  return _tesseract.pixaccMultConstAccumulate(*args)
pixaccMultConstAccumulate = _tesseract.pixaccMultConstAccumulate

def pixSelectBySize(*args):
  return _tesseract.pixSelectBySize(*args)
pixSelectBySize = _tesseract.pixSelectBySize

def pixaSelectBySize(*args):
  return _tesseract.pixaSelectBySize(*args)
pixaSelectBySize = _tesseract.pixaSelectBySize

def pixaMakeSizeIndicator(*args):
  return _tesseract.pixaMakeSizeIndicator(*args)
pixaMakeSizeIndicator = _tesseract.pixaMakeSizeIndicator

def pixSelectByPerimToAreaRatio(*args):
  return _tesseract.pixSelectByPerimToAreaRatio(*args)
pixSelectByPerimToAreaRatio = _tesseract.pixSelectByPerimToAreaRatio

def pixaSelectByPerimToAreaRatio(*args):
  return _tesseract.pixaSelectByPerimToAreaRatio(*args)
pixaSelectByPerimToAreaRatio = _tesseract.pixaSelectByPerimToAreaRatio

def pixSelectByPerimSizeRatio(*args):
  return _tesseract.pixSelectByPerimSizeRatio(*args)
pixSelectByPerimSizeRatio = _tesseract.pixSelectByPerimSizeRatio

def pixaSelectByPerimSizeRatio(*args):
  return _tesseract.pixaSelectByPerimSizeRatio(*args)
pixaSelectByPerimSizeRatio = _tesseract.pixaSelectByPerimSizeRatio

def pixSelectByAreaFraction(*args):
  return _tesseract.pixSelectByAreaFraction(*args)
pixSelectByAreaFraction = _tesseract.pixSelectByAreaFraction

def pixaSelectByAreaFraction(*args):
  return _tesseract.pixaSelectByAreaFraction(*args)
pixaSelectByAreaFraction = _tesseract.pixaSelectByAreaFraction

def pixSelectByWidthHeightRatio(*args):
  return _tesseract.pixSelectByWidthHeightRatio(*args)
pixSelectByWidthHeightRatio = _tesseract.pixSelectByWidthHeightRatio

def pixaSelectByWidthHeightRatio(*args):
  return _tesseract.pixaSelectByWidthHeightRatio(*args)
pixaSelectByWidthHeightRatio = _tesseract.pixaSelectByWidthHeightRatio

def pixaSelectWithIndicator(*args):
  return _tesseract.pixaSelectWithIndicator(*args)
pixaSelectWithIndicator = _tesseract.pixaSelectWithIndicator

def pixRemoveWithIndicator(*args):
  return _tesseract.pixRemoveWithIndicator(*args)
pixRemoveWithIndicator = _tesseract.pixRemoveWithIndicator

def pixAddWithIndicator(*args):
  return _tesseract.pixAddWithIndicator(*args)
pixAddWithIndicator = _tesseract.pixAddWithIndicator

def pixaRenderComponent(*args):
  return _tesseract.pixaRenderComponent(*args)
pixaRenderComponent = _tesseract.pixaRenderComponent

def pixaSort(*args):
  return _tesseract.pixaSort(*args)
pixaSort = _tesseract.pixaSort

def pixaBinSort(*args):
  return _tesseract.pixaBinSort(*args)
pixaBinSort = _tesseract.pixaBinSort

def pixaSortByIndex(*args):
  return _tesseract.pixaSortByIndex(*args)
pixaSortByIndex = _tesseract.pixaSortByIndex

def pixaSort2dByIndex(*args):
  return _tesseract.pixaSort2dByIndex(*args)
pixaSort2dByIndex = _tesseract.pixaSort2dByIndex

def pixaSelectRange(*args):
  return _tesseract.pixaSelectRange(*args)
pixaSelectRange = _tesseract.pixaSelectRange

def pixaaSelectRange(*args):
  return _tesseract.pixaaSelectRange(*args)
pixaaSelectRange = _tesseract.pixaaSelectRange

def pixaaScaleToSize(*args):
  return _tesseract.pixaaScaleToSize(*args)
pixaaScaleToSize = _tesseract.pixaaScaleToSize

def pixaaScaleToSizeVar(*args):
  return _tesseract.pixaaScaleToSizeVar(*args)
pixaaScaleToSizeVar = _tesseract.pixaaScaleToSizeVar

def pixaScaleToSize(*args):
  return _tesseract.pixaScaleToSize(*args)
pixaScaleToSize = _tesseract.pixaScaleToSize

def pixaAddBorderGeneral(*args):
  return _tesseract.pixaAddBorderGeneral(*args)
pixaAddBorderGeneral = _tesseract.pixaAddBorderGeneral

def pixaaFlattenToPixa(*args):
  return _tesseract.pixaaFlattenToPixa(*args)
pixaaFlattenToPixa = _tesseract.pixaaFlattenToPixa

def pixaaSizeRange(*args):
  return _tesseract.pixaaSizeRange(*args)
pixaaSizeRange = _tesseract.pixaaSizeRange

def pixaSizeRange(*args):
  return _tesseract.pixaSizeRange(*args)
pixaSizeRange = _tesseract.pixaSizeRange

def pixaClipToPix(*args):
  return _tesseract.pixaClipToPix(*args)
pixaClipToPix = _tesseract.pixaClipToPix

def pixaGetRenderingDepth(*args):
  return _tesseract.pixaGetRenderingDepth(*args)
pixaGetRenderingDepth = _tesseract.pixaGetRenderingDepth

def pixaHasColor(*args):
  return _tesseract.pixaHasColor(*args)
pixaHasColor = _tesseract.pixaHasColor

def pixaAnyColormaps(*args):
  return _tesseract.pixaAnyColormaps(*args)
pixaAnyColormaps = _tesseract.pixaAnyColormaps

def pixaGetDepthInfo(*args):
  return _tesseract.pixaGetDepthInfo(*args)
pixaGetDepthInfo = _tesseract.pixaGetDepthInfo

def pixaConvertToSameDepth(*args):
  return _tesseract.pixaConvertToSameDepth(*args)
pixaConvertToSameDepth = _tesseract.pixaConvertToSameDepth

def pixaEqual(*args):
  return _tesseract.pixaEqual(*args)
pixaEqual = _tesseract.pixaEqual

def pixaDisplay(*args):
  return _tesseract.pixaDisplay(*args)
pixaDisplay = _tesseract.pixaDisplay

def pixaDisplayOnColor(*args):
  return _tesseract.pixaDisplayOnColor(*args)
pixaDisplayOnColor = _tesseract.pixaDisplayOnColor

def pixaDisplayRandomCmap(*args):
  return _tesseract.pixaDisplayRandomCmap(*args)
pixaDisplayRandomCmap = _tesseract.pixaDisplayRandomCmap

def pixaDisplayLinearly(*args):
  return _tesseract.pixaDisplayLinearly(*args)
pixaDisplayLinearly = _tesseract.pixaDisplayLinearly

def pixaDisplayOnLattice(*args):
  return _tesseract.pixaDisplayOnLattice(*args)
pixaDisplayOnLattice = _tesseract.pixaDisplayOnLattice

def pixaDisplayUnsplit(*args):
  return _tesseract.pixaDisplayUnsplit(*args)
pixaDisplayUnsplit = _tesseract.pixaDisplayUnsplit

def pixaDisplayTiled(*args):
  return _tesseract.pixaDisplayTiled(*args)
pixaDisplayTiled = _tesseract.pixaDisplayTiled

def pixaDisplayTiledInRows(*args):
  return _tesseract.pixaDisplayTiledInRows(*args)
pixaDisplayTiledInRows = _tesseract.pixaDisplayTiledInRows

def pixaDisplayTiledAndScaled(*args):
  return _tesseract.pixaDisplayTiledAndScaled(*args)
pixaDisplayTiledAndScaled = _tesseract.pixaDisplayTiledAndScaled

def pixaaDisplay(*args):
  return _tesseract.pixaaDisplay(*args)
pixaaDisplay = _tesseract.pixaaDisplay

def pixaaDisplayByPixa(*args):
  return _tesseract.pixaaDisplayByPixa(*args)
pixaaDisplayByPixa = _tesseract.pixaaDisplayByPixa

def pixaaDisplayTiledAndScaled(*args):
  return _tesseract.pixaaDisplayTiledAndScaled(*args)
pixaaDisplayTiledAndScaled = _tesseract.pixaaDisplayTiledAndScaled

def pixaConvertTo1(*args):
  return _tesseract.pixaConvertTo1(*args)
pixaConvertTo1 = _tesseract.pixaConvertTo1

def pixaConvertTo8(*args):
  return _tesseract.pixaConvertTo8(*args)
pixaConvertTo8 = _tesseract.pixaConvertTo8

def pixaConvertTo8Color(*args):
  return _tesseract.pixaConvertTo8Color(*args)
pixaConvertTo8Color = _tesseract.pixaConvertTo8Color

def pixaConvertTo32(*args):
  return _tesseract.pixaConvertTo32(*args)
pixaConvertTo32 = _tesseract.pixaConvertTo32

def convertToNUpFiles(*args):
  return _tesseract.convertToNUpFiles(*args)
convertToNUpFiles = _tesseract.convertToNUpFiles

def convertToNUpPixa(*args):
  return _tesseract.convertToNUpPixa(*args)
convertToNUpPixa = _tesseract.convertToNUpPixa

def pmsCreate(*args):
  return _tesseract.pmsCreate(*args)
pmsCreate = _tesseract.pmsCreate

def pmsDestroy():
  return _tesseract.pmsDestroy()
pmsDestroy = _tesseract.pmsDestroy

def pmsCustomAlloc(*args):
  return _tesseract.pmsCustomAlloc(*args)
pmsCustomAlloc = _tesseract.pmsCustomAlloc

def pmsCustomDealloc(*args):
  return _tesseract.pmsCustomDealloc(*args)
pmsCustomDealloc = _tesseract.pmsCustomDealloc

def pmsGetAlloc(*args):
  return _tesseract.pmsGetAlloc(*args)
pmsGetAlloc = _tesseract.pmsGetAlloc

def pmsGetLevelForAlloc(*args):
  return _tesseract.pmsGetLevelForAlloc(*args)
pmsGetLevelForAlloc = _tesseract.pmsGetLevelForAlloc

def pmsGetLevelForDealloc(*args):
  return _tesseract.pmsGetLevelForDealloc(*args)
pmsGetLevelForDealloc = _tesseract.pmsGetLevelForDealloc

def pmsLogInfo():
  return _tesseract.pmsLogInfo()
pmsLogInfo = _tesseract.pmsLogInfo

def pixAddConstantGray(*args):
  return _tesseract.pixAddConstantGray(*args)
pixAddConstantGray = _tesseract.pixAddConstantGray

def pixMultConstantGray(*args):
  return _tesseract.pixMultConstantGray(*args)
pixMultConstantGray = _tesseract.pixMultConstantGray

def pixAddGray(*args):
  return _tesseract.pixAddGray(*args)
pixAddGray = _tesseract.pixAddGray

def pixSubtractGray(*args):
  return _tesseract.pixSubtractGray(*args)
pixSubtractGray = _tesseract.pixSubtractGray

def pixThresholdToValue(*args):
  return _tesseract.pixThresholdToValue(*args)
pixThresholdToValue = _tesseract.pixThresholdToValue

def pixInitAccumulate(*args):
  return _tesseract.pixInitAccumulate(*args)
pixInitAccumulate = _tesseract.pixInitAccumulate

def pixFinalAccumulate(*args):
  return _tesseract.pixFinalAccumulate(*args)
pixFinalAccumulate = _tesseract.pixFinalAccumulate

def pixFinalAccumulateThreshold(*args):
  return _tesseract.pixFinalAccumulateThreshold(*args)
pixFinalAccumulateThreshold = _tesseract.pixFinalAccumulateThreshold

def pixAccumulate(*args):
  return _tesseract.pixAccumulate(*args)
pixAccumulate = _tesseract.pixAccumulate

def pixMultConstAccumulate(*args):
  return _tesseract.pixMultConstAccumulate(*args)
pixMultConstAccumulate = _tesseract.pixMultConstAccumulate

def pixAbsDifference(*args):
  return _tesseract.pixAbsDifference(*args)
pixAbsDifference = _tesseract.pixAbsDifference

def pixAddRGB(*args):
  return _tesseract.pixAddRGB(*args)
pixAddRGB = _tesseract.pixAddRGB

def pixMinOrMax(*args):
  return _tesseract.pixMinOrMax(*args)
pixMinOrMax = _tesseract.pixMinOrMax

def pixMaxDynamicRange(*args):
  return _tesseract.pixMaxDynamicRange(*args)
pixMaxDynamicRange = _tesseract.pixMaxDynamicRange

def makeLogBase2Tab():
  return _tesseract.makeLogBase2Tab()
makeLogBase2Tab = _tesseract.makeLogBase2Tab

def getLogBase2(*args):
  return _tesseract.getLogBase2(*args)
getLogBase2 = _tesseract.getLogBase2

def pixcompCreateFromPix(*args):
  return _tesseract.pixcompCreateFromPix(*args)
pixcompCreateFromPix = _tesseract.pixcompCreateFromPix

def pixcompCreateFromString(*args):
  return _tesseract.pixcompCreateFromString(*args)
pixcompCreateFromString = _tesseract.pixcompCreateFromString

def pixcompCreateFromFile(*args):
  return _tesseract.pixcompCreateFromFile(*args)
pixcompCreateFromFile = _tesseract.pixcompCreateFromFile

def pixcompDestroy(*args):
  return _tesseract.pixcompDestroy(*args)
pixcompDestroy = _tesseract.pixcompDestroy

def pixcompGetDimensions(*args):
  return _tesseract.pixcompGetDimensions(*args)
pixcompGetDimensions = _tesseract.pixcompGetDimensions

def pixcompDetermineFormat(*args):
  return _tesseract.pixcompDetermineFormat(*args)
pixcompDetermineFormat = _tesseract.pixcompDetermineFormat

def pixCreateFromPixcomp(*args):
  return _tesseract.pixCreateFromPixcomp(*args)
pixCreateFromPixcomp = _tesseract.pixCreateFromPixcomp

def pixacompCreate(*args):
  return _tesseract.pixacompCreate(*args)
pixacompCreate = _tesseract.pixacompCreate

def pixacompCreateWithInit(*args):
  return _tesseract.pixacompCreateWithInit(*args)
pixacompCreateWithInit = _tesseract.pixacompCreateWithInit

def pixacompCreateFromPixa(*args):
  return _tesseract.pixacompCreateFromPixa(*args)
pixacompCreateFromPixa = _tesseract.pixacompCreateFromPixa

def pixacompCreateFromFiles(*args):
  return _tesseract.pixacompCreateFromFiles(*args)
pixacompCreateFromFiles = _tesseract.pixacompCreateFromFiles

def pixacompCreateFromSA(*args):
  return _tesseract.pixacompCreateFromSA(*args)
pixacompCreateFromSA = _tesseract.pixacompCreateFromSA

def pixacompDestroy(*args):
  return _tesseract.pixacompDestroy(*args)
pixacompDestroy = _tesseract.pixacompDestroy

def pixacompAddPix(*args):
  return _tesseract.pixacompAddPix(*args)
pixacompAddPix = _tesseract.pixacompAddPix

def pixacompAddPixcomp(*args):
  return _tesseract.pixacompAddPixcomp(*args)
pixacompAddPixcomp = _tesseract.pixacompAddPixcomp

def pixacompReplacePix(*args):
  return _tesseract.pixacompReplacePix(*args)
pixacompReplacePix = _tesseract.pixacompReplacePix

def pixacompReplacePixcomp(*args):
  return _tesseract.pixacompReplacePixcomp(*args)
pixacompReplacePixcomp = _tesseract.pixacompReplacePixcomp

def pixacompAddBox(*args):
  return _tesseract.pixacompAddBox(*args)
pixacompAddBox = _tesseract.pixacompAddBox

def pixacompGetCount(*args):
  return _tesseract.pixacompGetCount(*args)
pixacompGetCount = _tesseract.pixacompGetCount

def pixacompGetPixcomp(*args):
  return _tesseract.pixacompGetPixcomp(*args)
pixacompGetPixcomp = _tesseract.pixacompGetPixcomp

def pixacompGetPix(*args):
  return _tesseract.pixacompGetPix(*args)
pixacompGetPix = _tesseract.pixacompGetPix

def pixacompGetPixDimensions(*args):
  return _tesseract.pixacompGetPixDimensions(*args)
pixacompGetPixDimensions = _tesseract.pixacompGetPixDimensions

def pixacompGetBoxa(*args):
  return _tesseract.pixacompGetBoxa(*args)
pixacompGetBoxa = _tesseract.pixacompGetBoxa

def pixacompGetBoxaCount(*args):
  return _tesseract.pixacompGetBoxaCount(*args)
pixacompGetBoxaCount = _tesseract.pixacompGetBoxaCount

def pixacompGetBox(*args):
  return _tesseract.pixacompGetBox(*args)
pixacompGetBox = _tesseract.pixacompGetBox

def pixacompGetBoxGeometry(*args):
  return _tesseract.pixacompGetBoxGeometry(*args)
pixacompGetBoxGeometry = _tesseract.pixacompGetBoxGeometry

def pixacompGetOffset(*args):
  return _tesseract.pixacompGetOffset(*args)
pixacompGetOffset = _tesseract.pixacompGetOffset

def pixacompSetOffset(*args):
  return _tesseract.pixacompSetOffset(*args)
pixacompSetOffset = _tesseract.pixacompSetOffset

def pixaCreateFromPixacomp(*args):
  return _tesseract.pixaCreateFromPixacomp(*args)
pixaCreateFromPixacomp = _tesseract.pixaCreateFromPixacomp

def pixacompRead(*args):
  return _tesseract.pixacompRead(*args)
pixacompRead = _tesseract.pixacompRead

def pixacompReadStream(*args):
  return _tesseract.pixacompReadStream(*args)
pixacompReadStream = _tesseract.pixacompReadStream

def pixacompWrite(*args):
  return _tesseract.pixacompWrite(*args)
pixacompWrite = _tesseract.pixacompWrite

def pixacompWriteStream(*args):
  return _tesseract.pixacompWriteStream(*args)
pixacompWriteStream = _tesseract.pixacompWriteStream

def pixacompConvertToPdf(*args):
  return _tesseract.pixacompConvertToPdf(*args)
pixacompConvertToPdf = _tesseract.pixacompConvertToPdf

def pixacompConvertToPdfData(*args):
  return _tesseract.pixacompConvertToPdfData(*args)
pixacompConvertToPdfData = _tesseract.pixacompConvertToPdfData

def pixacompWriteStreamInfo(*args):
  return _tesseract.pixacompWriteStreamInfo(*args)
pixacompWriteStreamInfo = _tesseract.pixacompWriteStreamInfo

def pixcompWriteStreamInfo(*args):
  return _tesseract.pixcompWriteStreamInfo(*args)
pixcompWriteStreamInfo = _tesseract.pixcompWriteStreamInfo

def pixacompDisplayTiledAndScaled(*args):
  return _tesseract.pixacompDisplayTiledAndScaled(*args)
pixacompDisplayTiledAndScaled = _tesseract.pixacompDisplayTiledAndScaled

def pixThreshold8(*args):
  return _tesseract.pixThreshold8(*args)
pixThreshold8 = _tesseract.pixThreshold8

def pixRemoveColormapGeneral(*args):
  return _tesseract.pixRemoveColormapGeneral(*args)
pixRemoveColormapGeneral = _tesseract.pixRemoveColormapGeneral

def pixRemoveColormap(*args):
  return _tesseract.pixRemoveColormap(*args)
pixRemoveColormap = _tesseract.pixRemoveColormap

def pixAddGrayColormap8(*args):
  return _tesseract.pixAddGrayColormap8(*args)
pixAddGrayColormap8 = _tesseract.pixAddGrayColormap8

def pixAddMinimalGrayColormap8(*args):
  return _tesseract.pixAddMinimalGrayColormap8(*args)
pixAddMinimalGrayColormap8 = _tesseract.pixAddMinimalGrayColormap8

def pixConvertRGBToLuminance(*args):
  return _tesseract.pixConvertRGBToLuminance(*args)
pixConvertRGBToLuminance = _tesseract.pixConvertRGBToLuminance

def pixConvertRGBToGray(*args):
  return _tesseract.pixConvertRGBToGray(*args)
pixConvertRGBToGray = _tesseract.pixConvertRGBToGray

def pixConvertRGBToGrayFast(*args):
  return _tesseract.pixConvertRGBToGrayFast(*args)
pixConvertRGBToGrayFast = _tesseract.pixConvertRGBToGrayFast

def pixConvertRGBToGrayMinMax(*args):
  return _tesseract.pixConvertRGBToGrayMinMax(*args)
pixConvertRGBToGrayMinMax = _tesseract.pixConvertRGBToGrayMinMax

def pixConvertRGBToGraySatBoost(*args):
  return _tesseract.pixConvertRGBToGraySatBoost(*args)
pixConvertRGBToGraySatBoost = _tesseract.pixConvertRGBToGraySatBoost

def pixConvertGrayToColormap(*args):
  return _tesseract.pixConvertGrayToColormap(*args)
pixConvertGrayToColormap = _tesseract.pixConvertGrayToColormap

def pixConvertGrayToColormap8(*args):
  return _tesseract.pixConvertGrayToColormap8(*args)
pixConvertGrayToColormap8 = _tesseract.pixConvertGrayToColormap8

def pixColorizeGray(*args):
  return _tesseract.pixColorizeGray(*args)
pixColorizeGray = _tesseract.pixColorizeGray

def pixConvertRGBToColormap(*args):
  return _tesseract.pixConvertRGBToColormap(*args)
pixConvertRGBToColormap = _tesseract.pixConvertRGBToColormap

def pixQuantizeIfFewColors(*args):
  return _tesseract.pixQuantizeIfFewColors(*args)
pixQuantizeIfFewColors = _tesseract.pixQuantizeIfFewColors

def pixConvert16To8(*args):
  return _tesseract.pixConvert16To8(*args)
pixConvert16To8 = _tesseract.pixConvert16To8

def pixConvertGrayToFalseColor(*args):
  return _tesseract.pixConvertGrayToFalseColor(*args)
pixConvertGrayToFalseColor = _tesseract.pixConvertGrayToFalseColor

def pixUnpackBinary(*args):
  return _tesseract.pixUnpackBinary(*args)
pixUnpackBinary = _tesseract.pixUnpackBinary

def pixConvert1To16(*args):
  return _tesseract.pixConvert1To16(*args)
pixConvert1To16 = _tesseract.pixConvert1To16

def pixConvert1To32(*args):
  return _tesseract.pixConvert1To32(*args)
pixConvert1To32 = _tesseract.pixConvert1To32

def pixConvert1To2Cmap(*args):
  return _tesseract.pixConvert1To2Cmap(*args)
pixConvert1To2Cmap = _tesseract.pixConvert1To2Cmap

def pixConvert1To2(*args):
  return _tesseract.pixConvert1To2(*args)
pixConvert1To2 = _tesseract.pixConvert1To2

def pixConvert1To4Cmap(*args):
  return _tesseract.pixConvert1To4Cmap(*args)
pixConvert1To4Cmap = _tesseract.pixConvert1To4Cmap

def pixConvert1To4(*args):
  return _tesseract.pixConvert1To4(*args)
pixConvert1To4 = _tesseract.pixConvert1To4

def pixConvert1To8(*args):
  return _tesseract.pixConvert1To8(*args)
pixConvert1To8 = _tesseract.pixConvert1To8

def pixConvert2To8(*args):
  return _tesseract.pixConvert2To8(*args)
pixConvert2To8 = _tesseract.pixConvert2To8

def pixConvert4To8(*args):
  return _tesseract.pixConvert4To8(*args)
pixConvert4To8 = _tesseract.pixConvert4To8

def pixConvert8To16(*args):
  return _tesseract.pixConvert8To16(*args)
pixConvert8To16 = _tesseract.pixConvert8To16

def pixConvertTo1(*args):
  return _tesseract.pixConvertTo1(*args)
pixConvertTo1 = _tesseract.pixConvertTo1

def pixConvertTo1BySampling(*args):
  return _tesseract.pixConvertTo1BySampling(*args)
pixConvertTo1BySampling = _tesseract.pixConvertTo1BySampling

def pixConvertTo8(*args):
  return _tesseract.pixConvertTo8(*args)
pixConvertTo8 = _tesseract.pixConvertTo8

def pixConvertTo8BySampling(*args):
  return _tesseract.pixConvertTo8BySampling(*args)
pixConvertTo8BySampling = _tesseract.pixConvertTo8BySampling

def pixConvertTo8Color(*args):
  return _tesseract.pixConvertTo8Color(*args)
pixConvertTo8Color = _tesseract.pixConvertTo8Color

def pixConvertTo16(*args):
  return _tesseract.pixConvertTo16(*args)
pixConvertTo16 = _tesseract.pixConvertTo16

def pixConvertTo32(*args):
  return _tesseract.pixConvertTo32(*args)
pixConvertTo32 = _tesseract.pixConvertTo32

def pixConvertTo32BySampling(*args):
  return _tesseract.pixConvertTo32BySampling(*args)
pixConvertTo32BySampling = _tesseract.pixConvertTo32BySampling

def pixConvert8To32(*args):
  return _tesseract.pixConvert8To32(*args)
pixConvert8To32 = _tesseract.pixConvert8To32

def pixConvertTo8Or32(*args):
  return _tesseract.pixConvertTo8Or32(*args)
pixConvertTo8Or32 = _tesseract.pixConvertTo8Or32

def pixConvert24To32(*args):
  return _tesseract.pixConvert24To32(*args)
pixConvert24To32 = _tesseract.pixConvert24To32

def pixConvert32To24(*args):
  return _tesseract.pixConvert32To24(*args)
pixConvert32To24 = _tesseract.pixConvert32To24

def pixRemoveAlpha(*args):
  return _tesseract.pixRemoveAlpha(*args)
pixRemoveAlpha = _tesseract.pixRemoveAlpha

def pixConvertLossless(*args):
  return _tesseract.pixConvertLossless(*args)
pixConvertLossless = _tesseract.pixConvertLossless

def pixConvertForPSWrap(*args):
  return _tesseract.pixConvertForPSWrap(*args)
pixConvertForPSWrap = _tesseract.pixConvertForPSWrap

def pixConvertToSubpixelRGB(*args):
  return _tesseract.pixConvertToSubpixelRGB(*args)
pixConvertToSubpixelRGB = _tesseract.pixConvertToSubpixelRGB

def pixConvertGrayToSubpixelRGB(*args):
  return _tesseract.pixConvertGrayToSubpixelRGB(*args)
pixConvertGrayToSubpixelRGB = _tesseract.pixConvertGrayToSubpixelRGB

def pixConvertColorToSubpixelRGB(*args):
  return _tesseract.pixConvertColorToSubpixelRGB(*args)
pixConvertColorToSubpixelRGB = _tesseract.pixConvertColorToSubpixelRGB

def pixConnCompTransform(*args):
  return _tesseract.pixConnCompTransform(*args)
pixConnCompTransform = _tesseract.pixConnCompTransform

def pixConnCompAreaTransform(*args):
  return _tesseract.pixConnCompAreaTransform(*args)
pixConnCompAreaTransform = _tesseract.pixConnCompAreaTransform

def pixLocToColorTransform(*args):
  return _tesseract.pixLocToColorTransform(*args)
pixLocToColorTransform = _tesseract.pixLocToColorTransform

def pixTilingCreate(*args):
  return _tesseract.pixTilingCreate(*args)
pixTilingCreate = _tesseract.pixTilingCreate

def pixTilingDestroy(*args):
  return _tesseract.pixTilingDestroy(*args)
pixTilingDestroy = _tesseract.pixTilingDestroy

def pixTilingGetCount(*args):
  return _tesseract.pixTilingGetCount(*args)
pixTilingGetCount = _tesseract.pixTilingGetCount

def pixTilingGetSize(*args):
  return _tesseract.pixTilingGetSize(*args)
pixTilingGetSize = _tesseract.pixTilingGetSize

def pixTilingGetTile(*args):
  return _tesseract.pixTilingGetTile(*args)
pixTilingGetTile = _tesseract.pixTilingGetTile

def pixTilingNoStripOnPaint(*args):
  return _tesseract.pixTilingNoStripOnPaint(*args)
pixTilingNoStripOnPaint = _tesseract.pixTilingNoStripOnPaint

def pixTilingPaintTile(*args):
  return _tesseract.pixTilingPaintTile(*args)
pixTilingPaintTile = _tesseract.pixTilingPaintTile

def pixReadStreamPng(*args):
  return _tesseract.pixReadStreamPng(*args)
pixReadStreamPng = _tesseract.pixReadStreamPng

def readHeaderPng(*args):
  return _tesseract.readHeaderPng(*args)
readHeaderPng = _tesseract.readHeaderPng

def freadHeaderPng(*args):
  return _tesseract.freadHeaderPng(*args)
freadHeaderPng = _tesseract.freadHeaderPng

def sreadHeaderPng(*args):
  return _tesseract.sreadHeaderPng(*args)
sreadHeaderPng = _tesseract.sreadHeaderPng

def fgetPngResolution(*args):
  return _tesseract.fgetPngResolution(*args)
fgetPngResolution = _tesseract.fgetPngResolution

def pixWritePng(*args):
  return _tesseract.pixWritePng(*args)
pixWritePng = _tesseract.pixWritePng

def pixWriteStreamPng(*args):
  return _tesseract.pixWriteStreamPng(*args)
pixWriteStreamPng = _tesseract.pixWriteStreamPng

def pixSetZlibCompression(*args):
  return _tesseract.pixSetZlibCompression(*args)
pixSetZlibCompression = _tesseract.pixSetZlibCompression

def l_pngSetReadStrip16To8(*args):
  return _tesseract.l_pngSetReadStrip16To8(*args)
l_pngSetReadStrip16To8 = _tesseract.l_pngSetReadStrip16To8

def pixReadMemPng(*args):
  return _tesseract.pixReadMemPng(*args)
pixReadMemPng = _tesseract.pixReadMemPng

def pixWriteMemPng(*args):
  return _tesseract.pixWriteMemPng(*args)
pixWriteMemPng = _tesseract.pixWriteMemPng

def pixReadStreamPnm(*args):
  return _tesseract.pixReadStreamPnm(*args)
pixReadStreamPnm = _tesseract.pixReadStreamPnm

def readHeaderPnm(*args):
  return _tesseract.readHeaderPnm(*args)
readHeaderPnm = _tesseract.readHeaderPnm

def freadHeaderPnm(*args):
  return _tesseract.freadHeaderPnm(*args)
freadHeaderPnm = _tesseract.freadHeaderPnm

def pixWriteStreamPnm(*args):
  return _tesseract.pixWriteStreamPnm(*args)
pixWriteStreamPnm = _tesseract.pixWriteStreamPnm

def pixWriteStreamAsciiPnm(*args):
  return _tesseract.pixWriteStreamAsciiPnm(*args)
pixWriteStreamAsciiPnm = _tesseract.pixWriteStreamAsciiPnm

def pixReadMemPnm(*args):
  return _tesseract.pixReadMemPnm(*args)
pixReadMemPnm = _tesseract.pixReadMemPnm

def sreadHeaderPnm(*args):
  return _tesseract.sreadHeaderPnm(*args)
sreadHeaderPnm = _tesseract.sreadHeaderPnm

def pixWriteMemPnm(*args):
  return _tesseract.pixWriteMemPnm(*args)
pixWriteMemPnm = _tesseract.pixWriteMemPnm

def pixProjectiveSampledPta(*args):
  return _tesseract.pixProjectiveSampledPta(*args)
pixProjectiveSampledPta = _tesseract.pixProjectiveSampledPta

def pixProjectiveSampled(*args):
  return _tesseract.pixProjectiveSampled(*args)
pixProjectiveSampled = _tesseract.pixProjectiveSampled

def pixProjectivePta(*args):
  return _tesseract.pixProjectivePta(*args)
pixProjectivePta = _tesseract.pixProjectivePta

def pixProjective(*args):
  return _tesseract.pixProjective(*args)
pixProjective = _tesseract.pixProjective

def pixProjectivePtaColor(*args):
  return _tesseract.pixProjectivePtaColor(*args)
pixProjectivePtaColor = _tesseract.pixProjectivePtaColor

def pixProjectiveColor(*args):
  return _tesseract.pixProjectiveColor(*args)
pixProjectiveColor = _tesseract.pixProjectiveColor

def pixProjectivePtaGray(*args):
  return _tesseract.pixProjectivePtaGray(*args)
pixProjectivePtaGray = _tesseract.pixProjectivePtaGray

def pixProjectiveGray(*args):
  return _tesseract.pixProjectiveGray(*args)
pixProjectiveGray = _tesseract.pixProjectiveGray

def pixProjectivePtaWithAlpha(*args):
  return _tesseract.pixProjectivePtaWithAlpha(*args)
pixProjectivePtaWithAlpha = _tesseract.pixProjectivePtaWithAlpha

def getProjectiveXformCoeffs(*args):
  return _tesseract.getProjectiveXformCoeffs(*args)
getProjectiveXformCoeffs = _tesseract.getProjectiveXformCoeffs

def projectiveXformSampledPt(*args):
  return _tesseract.projectiveXformSampledPt(*args)
projectiveXformSampledPt = _tesseract.projectiveXformSampledPt

def projectiveXformPt(*args):
  return _tesseract.projectiveXformPt(*args)
projectiveXformPt = _tesseract.projectiveXformPt

def convertFilesToPS(*args):
  return _tesseract.convertFilesToPS(*args)
convertFilesToPS = _tesseract.convertFilesToPS

def sarrayConvertFilesToPS(*args):
  return _tesseract.sarrayConvertFilesToPS(*args)
sarrayConvertFilesToPS = _tesseract.sarrayConvertFilesToPS

def convertFilesFittedToPS(*args):
  return _tesseract.convertFilesFittedToPS(*args)
convertFilesFittedToPS = _tesseract.convertFilesFittedToPS

def sarrayConvertFilesFittedToPS(*args):
  return _tesseract.sarrayConvertFilesFittedToPS(*args)
sarrayConvertFilesFittedToPS = _tesseract.sarrayConvertFilesFittedToPS

def writeImageCompressedToPSFile(*args):
  return _tesseract.writeImageCompressedToPSFile(*args)
writeImageCompressedToPSFile = _tesseract.writeImageCompressedToPSFile

def convertSegmentedPagesToPS(*args):
  return _tesseract.convertSegmentedPagesToPS(*args)
convertSegmentedPagesToPS = _tesseract.convertSegmentedPagesToPS

def pixWriteSegmentedPageToPS(*args):
  return _tesseract.pixWriteSegmentedPageToPS(*args)
pixWriteSegmentedPageToPS = _tesseract.pixWriteSegmentedPageToPS

def pixWriteMixedToPS(*args):
  return _tesseract.pixWriteMixedToPS(*args)
pixWriteMixedToPS = _tesseract.pixWriteMixedToPS

def convertToPSEmbed(*args):
  return _tesseract.convertToPSEmbed(*args)
convertToPSEmbed = _tesseract.convertToPSEmbed

def pixaWriteCompressedToPS(*args):
  return _tesseract.pixaWriteCompressedToPS(*args)
pixaWriteCompressedToPS = _tesseract.pixaWriteCompressedToPS

def pixWritePSEmbed(*args):
  return _tesseract.pixWritePSEmbed(*args)
pixWritePSEmbed = _tesseract.pixWritePSEmbed

def pixWriteStreamPS(*args):
  return _tesseract.pixWriteStreamPS(*args)
pixWriteStreamPS = _tesseract.pixWriteStreamPS

def pixWriteStringPS(*args):
  return _tesseract.pixWriteStringPS(*args)
pixWriteStringPS = _tesseract.pixWriteStringPS

def generateUncompressedPS(*args):
  return _tesseract.generateUncompressedPS(*args)
generateUncompressedPS = _tesseract.generateUncompressedPS

def getScaledParametersPS(*args):
  return _tesseract.getScaledParametersPS(*args)
getScaledParametersPS = _tesseract.getScaledParametersPS

def convertByteToHexAscii(*args):
  return _tesseract.convertByteToHexAscii(*args)
convertByteToHexAscii = _tesseract.convertByteToHexAscii

def convertJpegToPSEmbed(*args):
  return _tesseract.convertJpegToPSEmbed(*args)
convertJpegToPSEmbed = _tesseract.convertJpegToPSEmbed

def convertJpegToPS(*args):
  return _tesseract.convertJpegToPS(*args)
convertJpegToPS = _tesseract.convertJpegToPS

def convertJpegToPSString(*args):
  return _tesseract.convertJpegToPSString(*args)
convertJpegToPSString = _tesseract.convertJpegToPSString

def generateJpegPS(*args):
  return _tesseract.generateJpegPS(*args)
generateJpegPS = _tesseract.generateJpegPS

def pixGenerateJpegData(*args):
  return _tesseract.pixGenerateJpegData(*args)
pixGenerateJpegData = _tesseract.pixGenerateJpegData

def l_generateJpegData(*args):
  return _tesseract.l_generateJpegData(*args)
l_generateJpegData = _tesseract.l_generateJpegData

def l_compdataDestroy(*args):
  return _tesseract.l_compdataDestroy(*args)
l_compdataDestroy = _tesseract.l_compdataDestroy

def convertG4ToPSEmbed(*args):
  return _tesseract.convertG4ToPSEmbed(*args)
convertG4ToPSEmbed = _tesseract.convertG4ToPSEmbed

def convertG4ToPS(*args):
  return _tesseract.convertG4ToPS(*args)
convertG4ToPS = _tesseract.convertG4ToPS

def convertG4ToPSString(*args):
  return _tesseract.convertG4ToPSString(*args)
convertG4ToPSString = _tesseract.convertG4ToPSString

def generateG4PS(*args):
  return _tesseract.generateG4PS(*args)
generateG4PS = _tesseract.generateG4PS

def pixGenerateG4Data(*args):
  return _tesseract.pixGenerateG4Data(*args)
pixGenerateG4Data = _tesseract.pixGenerateG4Data

def l_generateG4Data(*args):
  return _tesseract.l_generateG4Data(*args)
l_generateG4Data = _tesseract.l_generateG4Data

def convertTiffMultipageToPS(*args):
  return _tesseract.convertTiffMultipageToPS(*args)
convertTiffMultipageToPS = _tesseract.convertTiffMultipageToPS

def convertFlateToPSEmbed(*args):
  return _tesseract.convertFlateToPSEmbed(*args)
convertFlateToPSEmbed = _tesseract.convertFlateToPSEmbed

def convertFlateToPS(*args):
  return _tesseract.convertFlateToPS(*args)
convertFlateToPS = _tesseract.convertFlateToPS

def convertFlateToPSString(*args):
  return _tesseract.convertFlateToPSString(*args)
convertFlateToPSString = _tesseract.convertFlateToPSString

def generateFlatePS(*args):
  return _tesseract.generateFlatePS(*args)
generateFlatePS = _tesseract.generateFlatePS

def l_generateFlateData(*args):
  return _tesseract.l_generateFlateData(*args)
l_generateFlateData = _tesseract.l_generateFlateData

def pixGenerateFlateData(*args):
  return _tesseract.pixGenerateFlateData(*args)
pixGenerateFlateData = _tesseract.pixGenerateFlateData

def l_generateCIData(*args):
  return _tesseract.l_generateCIData(*args)
l_generateCIData = _tesseract.l_generateCIData

def pixGenerateCIData(*args):
  return _tesseract.pixGenerateCIData(*args)
pixGenerateCIData = _tesseract.pixGenerateCIData

def pixWriteMemPS(*args):
  return _tesseract.pixWriteMemPS(*args)
pixWriteMemPS = _tesseract.pixWriteMemPS

def getResLetterPage(*args):
  return _tesseract.getResLetterPage(*args)
getResLetterPage = _tesseract.getResLetterPage

def getResA4Page(*args):
  return _tesseract.getResA4Page(*args)
getResA4Page = _tesseract.getResA4Page

def encodeAscii85(*args):
  return _tesseract.encodeAscii85(*args)
encodeAscii85 = _tesseract.encodeAscii85

def decodeAscii85(*args):
  return _tesseract.decodeAscii85(*args)
decodeAscii85 = _tesseract.decodeAscii85

def l_psWriteBoundingBox(*args):
  return _tesseract.l_psWriteBoundingBox(*args)
l_psWriteBoundingBox = _tesseract.l_psWriteBoundingBox

def ptaCreate(*args):
  return _tesseract.ptaCreate(*args)
ptaCreate = _tesseract.ptaCreate

def ptaCreateFromNuma(*args):
  return _tesseract.ptaCreateFromNuma(*args)
ptaCreateFromNuma = _tesseract.ptaCreateFromNuma

def ptaDestroy(*args):
  return _tesseract.ptaDestroy(*args)
ptaDestroy = _tesseract.ptaDestroy

def ptaCopy(*args):
  return _tesseract.ptaCopy(*args)
ptaCopy = _tesseract.ptaCopy

def ptaCopyRange(*args):
  return _tesseract.ptaCopyRange(*args)
ptaCopyRange = _tesseract.ptaCopyRange

def ptaClone(*args):
  return _tesseract.ptaClone(*args)
ptaClone = _tesseract.ptaClone

def ptaEmpty(*args):
  return _tesseract.ptaEmpty(*args)
ptaEmpty = _tesseract.ptaEmpty

def ptaAddPt(*args):
  return _tesseract.ptaAddPt(*args)
ptaAddPt = _tesseract.ptaAddPt

def ptaInsertPt(*args):
  return _tesseract.ptaInsertPt(*args)
ptaInsertPt = _tesseract.ptaInsertPt

def ptaRemovePt(*args):
  return _tesseract.ptaRemovePt(*args)
ptaRemovePt = _tesseract.ptaRemovePt

def ptaGetRefcount(*args):
  return _tesseract.ptaGetRefcount(*args)
ptaGetRefcount = _tesseract.ptaGetRefcount

def ptaChangeRefcount(*args):
  return _tesseract.ptaChangeRefcount(*args)
ptaChangeRefcount = _tesseract.ptaChangeRefcount

def ptaGetCount(*args):
  return _tesseract.ptaGetCount(*args)
ptaGetCount = _tesseract.ptaGetCount

def ptaGetPt(*args):
  return _tesseract.ptaGetPt(*args)
ptaGetPt = _tesseract.ptaGetPt

def ptaGetIPt(*args):
  return _tesseract.ptaGetIPt(*args)
ptaGetIPt = _tesseract.ptaGetIPt

def ptaSetPt(*args):
  return _tesseract.ptaSetPt(*args)
ptaSetPt = _tesseract.ptaSetPt

def ptaGetArrays(*args):
  return _tesseract.ptaGetArrays(*args)
ptaGetArrays = _tesseract.ptaGetArrays

def ptaRead(*args):
  return _tesseract.ptaRead(*args)
ptaRead = _tesseract.ptaRead

def ptaReadStream(*args):
  return _tesseract.ptaReadStream(*args)
ptaReadStream = _tesseract.ptaReadStream

def ptaWrite(*args):
  return _tesseract.ptaWrite(*args)
ptaWrite = _tesseract.ptaWrite

def ptaWriteStream(*args):
  return _tesseract.ptaWriteStream(*args)
ptaWriteStream = _tesseract.ptaWriteStream

def ptaaCreate(*args):
  return _tesseract.ptaaCreate(*args)
ptaaCreate = _tesseract.ptaaCreate

def ptaaDestroy(*args):
  return _tesseract.ptaaDestroy(*args)
ptaaDestroy = _tesseract.ptaaDestroy

def ptaaAddPta(*args):
  return _tesseract.ptaaAddPta(*args)
ptaaAddPta = _tesseract.ptaaAddPta

def ptaaGetCount(*args):
  return _tesseract.ptaaGetCount(*args)
ptaaGetCount = _tesseract.ptaaGetCount

def ptaaGetPta(*args):
  return _tesseract.ptaaGetPta(*args)
ptaaGetPta = _tesseract.ptaaGetPta

def ptaaGetPt(*args):
  return _tesseract.ptaaGetPt(*args)
ptaaGetPt = _tesseract.ptaaGetPt

def ptaaInitFull(*args):
  return _tesseract.ptaaInitFull(*args)
ptaaInitFull = _tesseract.ptaaInitFull

def ptaaReplacePta(*args):
  return _tesseract.ptaaReplacePta(*args)
ptaaReplacePta = _tesseract.ptaaReplacePta

def ptaaAddPt(*args):
  return _tesseract.ptaaAddPt(*args)
ptaaAddPt = _tesseract.ptaaAddPt

def ptaaTruncate(*args):
  return _tesseract.ptaaTruncate(*args)
ptaaTruncate = _tesseract.ptaaTruncate

def ptaaRead(*args):
  return _tesseract.ptaaRead(*args)
ptaaRead = _tesseract.ptaaRead

def ptaaReadStream(*args):
  return _tesseract.ptaaReadStream(*args)
ptaaReadStream = _tesseract.ptaaReadStream

def ptaaWrite(*args):
  return _tesseract.ptaaWrite(*args)
ptaaWrite = _tesseract.ptaaWrite

def ptaaWriteStream(*args):
  return _tesseract.ptaaWriteStream(*args)
ptaaWriteStream = _tesseract.ptaaWriteStream

def ptaSubsample(*args):
  return _tesseract.ptaSubsample(*args)
ptaSubsample = _tesseract.ptaSubsample

def ptaJoin(*args):
  return _tesseract.ptaJoin(*args)
ptaJoin = _tesseract.ptaJoin

def ptaaJoin(*args):
  return _tesseract.ptaaJoin(*args)
ptaaJoin = _tesseract.ptaaJoin

def ptaReverse(*args):
  return _tesseract.ptaReverse(*args)
ptaReverse = _tesseract.ptaReverse

def ptaTranspose(*args):
  return _tesseract.ptaTranspose(*args)
ptaTranspose = _tesseract.ptaTranspose

def ptaCyclicPerm(*args):
  return _tesseract.ptaCyclicPerm(*args)
ptaCyclicPerm = _tesseract.ptaCyclicPerm

def ptaSort(*args):
  return _tesseract.ptaSort(*args)
ptaSort = _tesseract.ptaSort

def ptaGetSortIndex(*args):
  return _tesseract.ptaGetSortIndex(*args)
ptaGetSortIndex = _tesseract.ptaGetSortIndex

def ptaSortByIndex(*args):
  return _tesseract.ptaSortByIndex(*args)
ptaSortByIndex = _tesseract.ptaSortByIndex

def ptaRemoveDuplicates(*args):
  return _tesseract.ptaRemoveDuplicates(*args)
ptaRemoveDuplicates = _tesseract.ptaRemoveDuplicates

def ptaaSortByIndex(*args):
  return _tesseract.ptaaSortByIndex(*args)
ptaaSortByIndex = _tesseract.ptaaSortByIndex

def ptaGetBoundingRegion(*args):
  return _tesseract.ptaGetBoundingRegion(*args)
ptaGetBoundingRegion = _tesseract.ptaGetBoundingRegion

def ptaGetRange(*args):
  return _tesseract.ptaGetRange(*args)
ptaGetRange = _tesseract.ptaGetRange

def ptaGetInsideBox(*args):
  return _tesseract.ptaGetInsideBox(*args)
ptaGetInsideBox = _tesseract.ptaGetInsideBox

def pixFindCornerPixels(*args):
  return _tesseract.pixFindCornerPixels(*args)
pixFindCornerPixels = _tesseract.pixFindCornerPixels

def ptaContainsPt(*args):
  return _tesseract.ptaContainsPt(*args)
ptaContainsPt = _tesseract.ptaContainsPt

def ptaTestIntersection(*args):
  return _tesseract.ptaTestIntersection(*args)
ptaTestIntersection = _tesseract.ptaTestIntersection

def ptaTransform(*args):
  return _tesseract.ptaTransform(*args)
ptaTransform = _tesseract.ptaTransform

def ptaPtInsidePolygon(*args):
  return _tesseract.ptaPtInsidePolygon(*args)
ptaPtInsidePolygon = _tesseract.ptaPtInsidePolygon

def l_angleBetweenVectors(*args):
  return _tesseract.l_angleBetweenVectors(*args)
l_angleBetweenVectors = _tesseract.l_angleBetweenVectors

def ptaGetLinearLSF(*args):
  return _tesseract.ptaGetLinearLSF(*args)
ptaGetLinearLSF = _tesseract.ptaGetLinearLSF

def ptaGetQuadraticLSF(*args):
  return _tesseract.ptaGetQuadraticLSF(*args)
ptaGetQuadraticLSF = _tesseract.ptaGetQuadraticLSF

def ptaGetCubicLSF(*args):
  return _tesseract.ptaGetCubicLSF(*args)
ptaGetCubicLSF = _tesseract.ptaGetCubicLSF

def ptaGetQuarticLSF(*args):
  return _tesseract.ptaGetQuarticLSF(*args)
ptaGetQuarticLSF = _tesseract.ptaGetQuarticLSF

def ptaNoisyLinearLSF(*args):
  return _tesseract.ptaNoisyLinearLSF(*args)
ptaNoisyLinearLSF = _tesseract.ptaNoisyLinearLSF

def ptaNoisyQuadraticLSF(*args):
  return _tesseract.ptaNoisyQuadraticLSF(*args)
ptaNoisyQuadraticLSF = _tesseract.ptaNoisyQuadraticLSF

def applyLinearFit(*args):
  return _tesseract.applyLinearFit(*args)
applyLinearFit = _tesseract.applyLinearFit

def applyQuadraticFit(*args):
  return _tesseract.applyQuadraticFit(*args)
applyQuadraticFit = _tesseract.applyQuadraticFit

def applyCubicFit(*args):
  return _tesseract.applyCubicFit(*args)
applyCubicFit = _tesseract.applyCubicFit

def applyQuarticFit(*args):
  return _tesseract.applyQuarticFit(*args)
applyQuarticFit = _tesseract.applyQuarticFit

def pixPlotAlongPta(*args):
  return _tesseract.pixPlotAlongPta(*args)
pixPlotAlongPta = _tesseract.pixPlotAlongPta

def ptaGetPixelsFromPix(*args):
  return _tesseract.ptaGetPixelsFromPix(*args)
ptaGetPixelsFromPix = _tesseract.ptaGetPixelsFromPix

def pixGenerateFromPta(*args):
  return _tesseract.pixGenerateFromPta(*args)
pixGenerateFromPta = _tesseract.pixGenerateFromPta

def ptaGetBoundaryPixels(*args):
  return _tesseract.ptaGetBoundaryPixels(*args)
ptaGetBoundaryPixels = _tesseract.ptaGetBoundaryPixels

def ptaaGetBoundaryPixels(*args):
  return _tesseract.ptaaGetBoundaryPixels(*args)
ptaaGetBoundaryPixels = _tesseract.ptaaGetBoundaryPixels

def pixDisplayPta(*args):
  return _tesseract.pixDisplayPta(*args)
pixDisplayPta = _tesseract.pixDisplayPta

def pixDisplayPtaaPattern(*args):
  return _tesseract.pixDisplayPtaaPattern(*args)
pixDisplayPtaaPattern = _tesseract.pixDisplayPtaaPattern

def pixDisplayPtaPattern(*args):
  return _tesseract.pixDisplayPtaPattern(*args)
pixDisplayPtaPattern = _tesseract.pixDisplayPtaPattern

def ptaReplicatePattern(*args):
  return _tesseract.ptaReplicatePattern(*args)
ptaReplicatePattern = _tesseract.ptaReplicatePattern

def pixDisplayPtaa(*args):
  return _tesseract.pixDisplayPtaa(*args)
pixDisplayPtaa = _tesseract.pixDisplayPtaa

def ptraCreate(*args):
  return _tesseract.ptraCreate(*args)
ptraCreate = _tesseract.ptraCreate

def ptraDestroy(*args):
  return _tesseract.ptraDestroy(*args)
ptraDestroy = _tesseract.ptraDestroy

def ptraAdd(*args):
  return _tesseract.ptraAdd(*args)
ptraAdd = _tesseract.ptraAdd

def ptraInsert(*args):
  return _tesseract.ptraInsert(*args)
ptraInsert = _tesseract.ptraInsert

def ptraRemove(*args):
  return _tesseract.ptraRemove(*args)
ptraRemove = _tesseract.ptraRemove

def ptraRemoveLast(*args):
  return _tesseract.ptraRemoveLast(*args)
ptraRemoveLast = _tesseract.ptraRemoveLast

def ptraReplace(*args):
  return _tesseract.ptraReplace(*args)
ptraReplace = _tesseract.ptraReplace

def ptraSwap(*args):
  return _tesseract.ptraSwap(*args)
ptraSwap = _tesseract.ptraSwap

def ptraCompactArray(*args):
  return _tesseract.ptraCompactArray(*args)
ptraCompactArray = _tesseract.ptraCompactArray

def ptraReverse(*args):
  return _tesseract.ptraReverse(*args)
ptraReverse = _tesseract.ptraReverse

def ptraJoin(*args):
  return _tesseract.ptraJoin(*args)
ptraJoin = _tesseract.ptraJoin

def ptraGetMaxIndex(*args):
  return _tesseract.ptraGetMaxIndex(*args)
ptraGetMaxIndex = _tesseract.ptraGetMaxIndex

def ptraGetActualCount(*args):
  return _tesseract.ptraGetActualCount(*args)
ptraGetActualCount = _tesseract.ptraGetActualCount

def ptraGetPtrToItem(*args):
  return _tesseract.ptraGetPtrToItem(*args)
ptraGetPtrToItem = _tesseract.ptraGetPtrToItem

def ptraaCreate(*args):
  return _tesseract.ptraaCreate(*args)
ptraaCreate = _tesseract.ptraaCreate

def ptraaDestroy(*args):
  return _tesseract.ptraaDestroy(*args)
ptraaDestroy = _tesseract.ptraaDestroy

def ptraaGetSize(*args):
  return _tesseract.ptraaGetSize(*args)
ptraaGetSize = _tesseract.ptraaGetSize

def ptraaInsertPtra(*args):
  return _tesseract.ptraaInsertPtra(*args)
ptraaInsertPtra = _tesseract.ptraaInsertPtra

def ptraaGetPtra(*args):
  return _tesseract.ptraaGetPtra(*args)
ptraaGetPtra = _tesseract.ptraaGetPtra

def ptraaFlattenToPtra(*args):
  return _tesseract.ptraaFlattenToPtra(*args)
ptraaFlattenToPtra = _tesseract.ptraaFlattenToPtra

def pixQuadtreeMean(*args):
  return _tesseract.pixQuadtreeMean(*args)
pixQuadtreeMean = _tesseract.pixQuadtreeMean

def pixQuadtreeVariance(*args):
  return _tesseract.pixQuadtreeVariance(*args)
pixQuadtreeVariance = _tesseract.pixQuadtreeVariance

def pixMeanInRectangle(*args):
  return _tesseract.pixMeanInRectangle(*args)
pixMeanInRectangle = _tesseract.pixMeanInRectangle

def pixVarianceInRectangle(*args):
  return _tesseract.pixVarianceInRectangle(*args)
pixVarianceInRectangle = _tesseract.pixVarianceInRectangle

def boxaaQuadtreeRegions(*args):
  return _tesseract.boxaaQuadtreeRegions(*args)
boxaaQuadtreeRegions = _tesseract.boxaaQuadtreeRegions

def quadtreeGetParent(*args):
  return _tesseract.quadtreeGetParent(*args)
quadtreeGetParent = _tesseract.quadtreeGetParent

def quadtreeGetChildren(*args):
  return _tesseract.quadtreeGetChildren(*args)
quadtreeGetChildren = _tesseract.quadtreeGetChildren

def quadtreeMaxLevels(*args):
  return _tesseract.quadtreeMaxLevels(*args)
quadtreeMaxLevels = _tesseract.quadtreeMaxLevels

def fpixaDisplayQuadtree(*args):
  return _tesseract.fpixaDisplayQuadtree(*args)
fpixaDisplayQuadtree = _tesseract.fpixaDisplayQuadtree

def lqueueCreate(*args):
  return _tesseract.lqueueCreate(*args)
lqueueCreate = _tesseract.lqueueCreate

def lqueueDestroy(*args):
  return _tesseract.lqueueDestroy(*args)
lqueueDestroy = _tesseract.lqueueDestroy

def lqueueAdd(*args):
  return _tesseract.lqueueAdd(*args)
lqueueAdd = _tesseract.lqueueAdd

def lqueueRemove(*args):
  return _tesseract.lqueueRemove(*args)
lqueueRemove = _tesseract.lqueueRemove

def lqueueGetCount(*args):
  return _tesseract.lqueueGetCount(*args)
lqueueGetCount = _tesseract.lqueueGetCount

def lqueuePrint(*args):
  return _tesseract.lqueuePrint(*args)
lqueuePrint = _tesseract.lqueuePrint

def pixRankFilter(*args):
  return _tesseract.pixRankFilter(*args)
pixRankFilter = _tesseract.pixRankFilter

def pixRankFilterRGB(*args):
  return _tesseract.pixRankFilterRGB(*args)
pixRankFilterRGB = _tesseract.pixRankFilterRGB

def pixRankFilterGray(*args):
  return _tesseract.pixRankFilterGray(*args)
pixRankFilterGray = _tesseract.pixRankFilterGray

def pixMedianFilter(*args):
  return _tesseract.pixMedianFilter(*args)
pixMedianFilter = _tesseract.pixMedianFilter

def pixRankFilterWithScaling(*args):
  return _tesseract.pixRankFilterWithScaling(*args)
pixRankFilterWithScaling = _tesseract.pixRankFilterWithScaling

def pixProcessBarcodes(*args):
  return _tesseract.pixProcessBarcodes(*args)
pixProcessBarcodes = _tesseract.pixProcessBarcodes

def pixExtractBarcodes(*args):
  return _tesseract.pixExtractBarcodes(*args)
pixExtractBarcodes = _tesseract.pixExtractBarcodes

def pixReadBarcodes(*args):
  return _tesseract.pixReadBarcodes(*args)
pixReadBarcodes = _tesseract.pixReadBarcodes

def pixReadBarcodeWidths(*args):
  return _tesseract.pixReadBarcodeWidths(*args)
pixReadBarcodeWidths = _tesseract.pixReadBarcodeWidths

def pixLocateBarcodes(*args):
  return _tesseract.pixLocateBarcodes(*args)
pixLocateBarcodes = _tesseract.pixLocateBarcodes

def pixDeskewBarcode(*args):
  return _tesseract.pixDeskewBarcode(*args)
pixDeskewBarcode = _tesseract.pixDeskewBarcode

def pixExtractBarcodeWidths1(*args):
  return _tesseract.pixExtractBarcodeWidths1(*args)
pixExtractBarcodeWidths1 = _tesseract.pixExtractBarcodeWidths1

def pixExtractBarcodeWidths2(*args):
  return _tesseract.pixExtractBarcodeWidths2(*args)
pixExtractBarcodeWidths2 = _tesseract.pixExtractBarcodeWidths2

def pixExtractBarcodeCrossings(*args):
  return _tesseract.pixExtractBarcodeCrossings(*args)
pixExtractBarcodeCrossings = _tesseract.pixExtractBarcodeCrossings

def numaQuantizeCrossingsByWidth(*args):
  return _tesseract.numaQuantizeCrossingsByWidth(*args)
numaQuantizeCrossingsByWidth = _tesseract.numaQuantizeCrossingsByWidth

def numaQuantizeCrossingsByWindow(*args):
  return _tesseract.numaQuantizeCrossingsByWindow(*args)
numaQuantizeCrossingsByWindow = _tesseract.numaQuantizeCrossingsByWindow

def pixaReadFiles(*args):
  return _tesseract.pixaReadFiles(*args)
pixaReadFiles = _tesseract.pixaReadFiles

def pixaReadFilesSA(*args):
  return _tesseract.pixaReadFilesSA(*args)
pixaReadFilesSA = _tesseract.pixaReadFilesSA

def pixRead(*args):
  return _tesseract.pixRead(*args)
pixRead = _tesseract.pixRead

def pixReadWithHint(*args):
  return _tesseract.pixReadWithHint(*args)
pixReadWithHint = _tesseract.pixReadWithHint

def pixReadIndexed(*args):
  return _tesseract.pixReadIndexed(*args)
pixReadIndexed = _tesseract.pixReadIndexed

def pixReadStream(*args):
  return _tesseract.pixReadStream(*args)
pixReadStream = _tesseract.pixReadStream

def pixReadHeader(*args):
  return _tesseract.pixReadHeader(*args)
pixReadHeader = _tesseract.pixReadHeader

def findFileFormat(*args):
  return _tesseract.findFileFormat(*args)
findFileFormat = _tesseract.findFileFormat

def findFileFormatStream(*args):
  return _tesseract.findFileFormatStream(*args)
findFileFormatStream = _tesseract.findFileFormatStream

def findFileFormatBuffer(*args):
  return _tesseract.findFileFormatBuffer(*args)
findFileFormatBuffer = _tesseract.findFileFormatBuffer

def fileFormatIsTiff(*args):
  return _tesseract.fileFormatIsTiff(*args)
fileFormatIsTiff = _tesseract.fileFormatIsTiff

def pixReadMem(*args):
  return _tesseract.pixReadMem(*args)
pixReadMem = _tesseract.pixReadMem

def pixReadHeaderMem(*args):
  return _tesseract.pixReadHeaderMem(*args)
pixReadHeaderMem = _tesseract.pixReadHeaderMem

def ioFormatTest(*args):
  return _tesseract.ioFormatTest(*args)
ioFormatTest = _tesseract.ioFormatTest

def recogaCreateFromRecog(*args):
  return _tesseract.recogaCreateFromRecog(*args)
recogaCreateFromRecog = _tesseract.recogaCreateFromRecog

def recogaCreateFromPixaa(*args):
  return _tesseract.recogaCreateFromPixaa(*args)
recogaCreateFromPixaa = _tesseract.recogaCreateFromPixaa

def recogaCreate(*args):
  return _tesseract.recogaCreate(*args)
recogaCreate = _tesseract.recogaCreate

def recogaDestroy(*args):
  return _tesseract.recogaDestroy(*args)
recogaDestroy = _tesseract.recogaDestroy

def recogaAddRecog(*args):
  return _tesseract.recogaAddRecog(*args)
recogaAddRecog = _tesseract.recogaAddRecog

def recogReplaceInRecoga(*args):
  return _tesseract.recogReplaceInRecoga(*args)
recogReplaceInRecoga = _tesseract.recogReplaceInRecoga

def recogaGetRecog(*args):
  return _tesseract.recogaGetRecog(*args)
recogaGetRecog = _tesseract.recogaGetRecog

def recogaGetCount(*args):
  return _tesseract.recogaGetCount(*args)
recogaGetCount = _tesseract.recogaGetCount

def recogGetCount(*args):
  return _tesseract.recogGetCount(*args)
recogGetCount = _tesseract.recogGetCount

def recogGetIndex(*args):
  return _tesseract.recogGetIndex(*args)
recogGetIndex = _tesseract.recogGetIndex

def recogGetParent(*args):
  return _tesseract.recogGetParent(*args)
recogGetParent = _tesseract.recogGetParent

def recogSetBootflag(*args):
  return _tesseract.recogSetBootflag(*args)
recogSetBootflag = _tesseract.recogSetBootflag

def recogCreateFromRecog(*args):
  return _tesseract.recogCreateFromRecog(*args)
recogCreateFromRecog = _tesseract.recogCreateFromRecog

def recogCreateFromPixa(*args):
  return _tesseract.recogCreateFromPixa(*args)
recogCreateFromPixa = _tesseract.recogCreateFromPixa

def recogCreate(*args):
  return _tesseract.recogCreate(*args)
recogCreate = _tesseract.recogCreate

def recogDestroy(*args):
  return _tesseract.recogDestroy(*args)
recogDestroy = _tesseract.recogDestroy

def recogAppend(*args):
  return _tesseract.recogAppend(*args)
recogAppend = _tesseract.recogAppend

def recogGetClassIndex(*args):
  return _tesseract.recogGetClassIndex(*args)
recogGetClassIndex = _tesseract.recogGetClassIndex

def recogStringToIndex(*args):
  return _tesseract.recogStringToIndex(*args)
recogStringToIndex = _tesseract.recogStringToIndex

def recogGetClassString(*args):
  return _tesseract.recogGetClassString(*args)
recogGetClassString = _tesseract.recogGetClassString

def l_convertCharstrToInt(*args):
  return _tesseract.l_convertCharstrToInt(*args)
l_convertCharstrToInt = _tesseract.l_convertCharstrToInt

def recogaRead(*args):
  return _tesseract.recogaRead(*args)
recogaRead = _tesseract.recogaRead

def recogaReadStream(*args):
  return _tesseract.recogaReadStream(*args)
recogaReadStream = _tesseract.recogaReadStream

def recogaWrite(*args):
  return _tesseract.recogaWrite(*args)
recogaWrite = _tesseract.recogaWrite

def recogaWriteStream(*args):
  return _tesseract.recogaWriteStream(*args)
recogaWriteStream = _tesseract.recogaWriteStream

def recogaWritePixaa(*args):
  return _tesseract.recogaWritePixaa(*args)
recogaWritePixaa = _tesseract.recogaWritePixaa

def recogRead(*args):
  return _tesseract.recogRead(*args)
recogRead = _tesseract.recogRead

def recogReadStream(*args):
  return _tesseract.recogReadStream(*args)
recogReadStream = _tesseract.recogReadStream

def recogWrite(*args):
  return _tesseract.recogWrite(*args)
recogWrite = _tesseract.recogWrite

def recogWriteStream(*args):
  return _tesseract.recogWriteStream(*args)
recogWriteStream = _tesseract.recogWriteStream

def recogWritePixa(*args):
  return _tesseract.recogWritePixa(*args)
recogWritePixa = _tesseract.recogWritePixa

def recogDecode(*args):
  return _tesseract.recogDecode(*args)
recogDecode = _tesseract.recogDecode

def recogMakeDecodingArrays(*args):
  return _tesseract.recogMakeDecodingArrays(*args)
recogMakeDecodingArrays = _tesseract.recogMakeDecodingArrays

def recogRunViterbi(*args):
  return _tesseract.recogRunViterbi(*args)
recogRunViterbi = _tesseract.recogRunViterbi

def recogCreateDid(*args):
  return _tesseract.recogCreateDid(*args)
recogCreateDid = _tesseract.recogCreateDid

def recogDestroyDid(*args):
  return _tesseract.recogDestroyDid(*args)
recogDestroyDid = _tesseract.recogDestroyDid

def recogDidExists(*args):
  return _tesseract.recogDidExists(*args)
recogDidExists = _tesseract.recogDidExists

def recogGetDid(*args):
  return _tesseract.recogGetDid(*args)
recogGetDid = _tesseract.recogGetDid

def recogSetChannelParams(*args):
  return _tesseract.recogSetChannelParams(*args)
recogSetChannelParams = _tesseract.recogSetChannelParams

def recogaIdentifyMultiple(*args):
  return _tesseract.recogaIdentifyMultiple(*args)
recogaIdentifyMultiple = _tesseract.recogaIdentifyMultiple

def recogSplitIntoCharacters(*args):
  return _tesseract.recogSplitIntoCharacters(*args)
recogSplitIntoCharacters = _tesseract.recogSplitIntoCharacters

def recogCorrelationBestRow(*args):
  return _tesseract.recogCorrelationBestRow(*args)
recogCorrelationBestRow = _tesseract.recogCorrelationBestRow

def recogCorrelationBestChar(*args):
  return _tesseract.recogCorrelationBestChar(*args)
recogCorrelationBestChar = _tesseract.recogCorrelationBestChar

def recogaIdentifyPixa(*args):
  return _tesseract.recogaIdentifyPixa(*args)
recogaIdentifyPixa = _tesseract.recogaIdentifyPixa

def recogIdentifyPixa(*args):
  return _tesseract.recogIdentifyPixa(*args)
recogIdentifyPixa = _tesseract.recogIdentifyPixa

def recogIdentifyPix(*args):
  return _tesseract.recogIdentifyPix(*args)
recogIdentifyPix = _tesseract.recogIdentifyPix

def recogSkipIdentify(*args):
  return _tesseract.recogSkipIdentify(*args)
recogSkipIdentify = _tesseract.recogSkipIdentify

def rchaDestroy(*args):
  return _tesseract.rchaDestroy(*args)
rchaDestroy = _tesseract.rchaDestroy

def rchDestroy(*args):
  return _tesseract.rchDestroy(*args)
rchDestroy = _tesseract.rchDestroy

def rchaExtract(*args):
  return _tesseract.rchaExtract(*args)
rchaExtract = _tesseract.rchaExtract

def rchExtract(*args):
  return _tesseract.rchExtract(*args)
rchExtract = _tesseract.rchExtract

def recogProcessToIdentify(*args):
  return _tesseract.recogProcessToIdentify(*args)
recogProcessToIdentify = _tesseract.recogProcessToIdentify

def recogPreSplittingFilter(*args):
  return _tesseract.recogPreSplittingFilter(*args)
recogPreSplittingFilter = _tesseract.recogPreSplittingFilter

def recogSplittingFilter(*args):
  return _tesseract.recogSplittingFilter(*args)
recogSplittingFilter = _tesseract.recogSplittingFilter

def recogaExtractNumbers(*args):
  return _tesseract.recogaExtractNumbers(*args)
recogaExtractNumbers = _tesseract.recogaExtractNumbers

def recogSetTemplateType(*args):
  return _tesseract.recogSetTemplateType(*args)
recogSetTemplateType = _tesseract.recogSetTemplateType

def recogSetScaling(*args):
  return _tesseract.recogSetScaling(*args)
recogSetScaling = _tesseract.recogSetScaling

def recogTrainLabelled(*args):
  return _tesseract.recogTrainLabelled(*args)
recogTrainLabelled = _tesseract.recogTrainLabelled

def recogProcessMultLabelled(*args):
  return _tesseract.recogProcessMultLabelled(*args)
recogProcessMultLabelled = _tesseract.recogProcessMultLabelled

def recogProcessSingleLabelled(*args):
  return _tesseract.recogProcessSingleLabelled(*args)
recogProcessSingleLabelled = _tesseract.recogProcessSingleLabelled

def recogAddSamples(*args):
  return _tesseract.recogAddSamples(*args)
recogAddSamples = _tesseract.recogAddSamples

def recogScaleCharacter(*args):
  return _tesseract.recogScaleCharacter(*args)
recogScaleCharacter = _tesseract.recogScaleCharacter

def recogAverageSamples(*args):
  return _tesseract.recogAverageSamples(*args)
recogAverageSamples = _tesseract.recogAverageSamples

def pixaAccumulateSamples(*args):
  return _tesseract.pixaAccumulateSamples(*args)
pixaAccumulateSamples = _tesseract.pixaAccumulateSamples

def recogTrainingFinished(*args):
  return _tesseract.recogTrainingFinished(*args)
recogTrainingFinished = _tesseract.recogTrainingFinished

def recogRemoveOutliers(*args):
  return _tesseract.recogRemoveOutliers(*args)
recogRemoveOutliers = _tesseract.recogRemoveOutliers

def recogaTrainingDone(*args):
  return _tesseract.recogaTrainingDone(*args)
recogaTrainingDone = _tesseract.recogaTrainingDone

def recogaFinishAveraging(*args):
  return _tesseract.recogaFinishAveraging(*args)
recogaFinishAveraging = _tesseract.recogaFinishAveraging

def recogTrainUnlabelled(*args):
  return _tesseract.recogTrainUnlabelled(*args)
recogTrainUnlabelled = _tesseract.recogTrainUnlabelled

def recogPadTrainingSet(*args):
  return _tesseract.recogPadTrainingSet(*args)
recogPadTrainingSet = _tesseract.recogPadTrainingSet

def recogBestCorrelForPadding(*args):
  return _tesseract.recogBestCorrelForPadding(*args)
recogBestCorrelForPadding = _tesseract.recogBestCorrelForPadding

def recogCorrelAverages(*args):
  return _tesseract.recogCorrelAverages(*args)
recogCorrelAverages = _tesseract.recogCorrelAverages

def recogSetPadParams(*args):
  return _tesseract.recogSetPadParams(*args)
recogSetPadParams = _tesseract.recogSetPadParams

def recogaShowContent(*args):
  return _tesseract.recogaShowContent(*args)
recogaShowContent = _tesseract.recogaShowContent

def recogShowContent(*args):
  return _tesseract.recogShowContent(*args)
recogShowContent = _tesseract.recogShowContent

def recogDebugAverages(*args):
  return _tesseract.recogDebugAverages(*args)
recogDebugAverages = _tesseract.recogDebugAverages

def recogShowAverageTemplates(*args):
  return _tesseract.recogShowAverageTemplates(*args)
recogShowAverageTemplates = _tesseract.recogShowAverageTemplates

def recogShowMatchesInRange(*args):
  return _tesseract.recogShowMatchesInRange(*args)
recogShowMatchesInRange = _tesseract.recogShowMatchesInRange

def recogShowMatch(*args):
  return _tesseract.recogShowMatch(*args)
recogShowMatch = _tesseract.recogShowMatch

def recogMakeBmf(*args):
  return _tesseract.recogMakeBmf(*args)
recogMakeBmf = _tesseract.recogMakeBmf

def regTestSetup(*args):
  return _tesseract.regTestSetup(*args)
regTestSetup = _tesseract.regTestSetup

def regTestCleanup(*args):
  return _tesseract.regTestCleanup(*args)
regTestCleanup = _tesseract.regTestCleanup

def regTestCompareValues(*args):
  return _tesseract.regTestCompareValues(*args)
regTestCompareValues = _tesseract.regTestCompareValues

def regTestCompareStrings(*args):
  return _tesseract.regTestCompareStrings(*args)
regTestCompareStrings = _tesseract.regTestCompareStrings

def regTestComparePix(*args):
  return _tesseract.regTestComparePix(*args)
regTestComparePix = _tesseract.regTestComparePix

def regTestCompareSimilarPix(*args):
  return _tesseract.regTestCompareSimilarPix(*args)
regTestCompareSimilarPix = _tesseract.regTestCompareSimilarPix

def regTestCheckFile(*args):
  return _tesseract.regTestCheckFile(*args)
regTestCheckFile = _tesseract.regTestCheckFile

def regTestCompareFiles(*args):
  return _tesseract.regTestCompareFiles(*args)
regTestCompareFiles = _tesseract.regTestCompareFiles

def regTestWritePixAndCheck(*args):
  return _tesseract.regTestWritePixAndCheck(*args)
regTestWritePixAndCheck = _tesseract.regTestWritePixAndCheck

def pixRasterop(*args):
  return _tesseract.pixRasterop(*args)
pixRasterop = _tesseract.pixRasterop

def pixRasteropVip(*args):
  return _tesseract.pixRasteropVip(*args)
pixRasteropVip = _tesseract.pixRasteropVip

def pixRasteropHip(*args):
  return _tesseract.pixRasteropHip(*args)
pixRasteropHip = _tesseract.pixRasteropHip

def pixTranslate(*args):
  return _tesseract.pixTranslate(*args)
pixTranslate = _tesseract.pixTranslate

def pixRasteropIP(*args):
  return _tesseract.pixRasteropIP(*args)
pixRasteropIP = _tesseract.pixRasteropIP

def pixRasteropFullImage(*args):
  return _tesseract.pixRasteropFullImage(*args)
pixRasteropFullImage = _tesseract.pixRasteropFullImage

def rasteropVipLow(*args):
  return _tesseract.rasteropVipLow(*args)
rasteropVipLow = _tesseract.rasteropVipLow

def rasteropHipLow(*args):
  return _tesseract.rasteropHipLow(*args)
rasteropHipLow = _tesseract.rasteropHipLow

def shiftDataHorizontalLow(*args):
  return _tesseract.shiftDataHorizontalLow(*args)
shiftDataHorizontalLow = _tesseract.shiftDataHorizontalLow

def rasteropUniLow(*args):
  return _tesseract.rasteropUniLow(*args)
rasteropUniLow = _tesseract.rasteropUniLow

def rasteropLow(*args):
  return _tesseract.rasteropLow(*args)
rasteropLow = _tesseract.rasteropLow

def pixRotate(*args):
  return _tesseract.pixRotate(*args)
pixRotate = _tesseract.pixRotate

def pixEmbedForRotation(*args):
  return _tesseract.pixEmbedForRotation(*args)
pixEmbedForRotation = _tesseract.pixEmbedForRotation

def pixRotateBySampling(*args):
  return _tesseract.pixRotateBySampling(*args)
pixRotateBySampling = _tesseract.pixRotateBySampling

def pixRotateBinaryNice(*args):
  return _tesseract.pixRotateBinaryNice(*args)
pixRotateBinaryNice = _tesseract.pixRotateBinaryNice

def pixRotateWithAlpha(*args):
  return _tesseract.pixRotateWithAlpha(*args)
pixRotateWithAlpha = _tesseract.pixRotateWithAlpha

def pixRotateAM(*args):
  return _tesseract.pixRotateAM(*args)
pixRotateAM = _tesseract.pixRotateAM

def pixRotateAMColor(*args):
  return _tesseract.pixRotateAMColor(*args)
pixRotateAMColor = _tesseract.pixRotateAMColor

def pixRotateAMGray(*args):
  return _tesseract.pixRotateAMGray(*args)
pixRotateAMGray = _tesseract.pixRotateAMGray

def pixRotateAMCorner(*args):
  return _tesseract.pixRotateAMCorner(*args)
pixRotateAMCorner = _tesseract.pixRotateAMCorner

def pixRotateAMColorCorner(*args):
  return _tesseract.pixRotateAMColorCorner(*args)
pixRotateAMColorCorner = _tesseract.pixRotateAMColorCorner

def pixRotateAMGrayCorner(*args):
  return _tesseract.pixRotateAMGrayCorner(*args)
pixRotateAMGrayCorner = _tesseract.pixRotateAMGrayCorner

def pixRotateAMColorFast(*args):
  return _tesseract.pixRotateAMColorFast(*args)
pixRotateAMColorFast = _tesseract.pixRotateAMColorFast

def rotateAMColorLow(*args):
  return _tesseract.rotateAMColorLow(*args)
rotateAMColorLow = _tesseract.rotateAMColorLow

def rotateAMGrayLow(*args):
  return _tesseract.rotateAMGrayLow(*args)
rotateAMGrayLow = _tesseract.rotateAMGrayLow

def rotateAMColorCornerLow(*args):
  return _tesseract.rotateAMColorCornerLow(*args)
rotateAMColorCornerLow = _tesseract.rotateAMColorCornerLow

def rotateAMGrayCornerLow(*args):
  return _tesseract.rotateAMGrayCornerLow(*args)
rotateAMGrayCornerLow = _tesseract.rotateAMGrayCornerLow

def rotateAMColorFastLow(*args):
  return _tesseract.rotateAMColorFastLow(*args)
rotateAMColorFastLow = _tesseract.rotateAMColorFastLow

def pixRotateOrth(*args):
  return _tesseract.pixRotateOrth(*args)
pixRotateOrth = _tesseract.pixRotateOrth

def pixRotate180(*args):
  return _tesseract.pixRotate180(*args)
pixRotate180 = _tesseract.pixRotate180

def pixRotate90(*args):
  return _tesseract.pixRotate90(*args)
pixRotate90 = _tesseract.pixRotate90

def pixFlipLR(*args):
  return _tesseract.pixFlipLR(*args)
pixFlipLR = _tesseract.pixFlipLR

def pixFlipTB(*args):
  return _tesseract.pixFlipTB(*args)
pixFlipTB = _tesseract.pixFlipTB

def rotate90Low(*args):
  return _tesseract.rotate90Low(*args)
rotate90Low = _tesseract.rotate90Low

def flipLRLow(*args):
  return _tesseract.flipLRLow(*args)
flipLRLow = _tesseract.flipLRLow

def flipTBLow(*args):
  return _tesseract.flipTBLow(*args)
flipTBLow = _tesseract.flipTBLow

def makeReverseByteTab1():
  return _tesseract.makeReverseByteTab1()
makeReverseByteTab1 = _tesseract.makeReverseByteTab1

def makeReverseByteTab2():
  return _tesseract.makeReverseByteTab2()
makeReverseByteTab2 = _tesseract.makeReverseByteTab2

def makeReverseByteTab4():
  return _tesseract.makeReverseByteTab4()
makeReverseByteTab4 = _tesseract.makeReverseByteTab4

def pixRotateShear(*args):
  return _tesseract.pixRotateShear(*args)
pixRotateShear = _tesseract.pixRotateShear

def pixRotate2Shear(*args):
  return _tesseract.pixRotate2Shear(*args)
pixRotate2Shear = _tesseract.pixRotate2Shear

def pixRotate3Shear(*args):
  return _tesseract.pixRotate3Shear(*args)
pixRotate3Shear = _tesseract.pixRotate3Shear

def pixRotateShearIP(*args):
  return _tesseract.pixRotateShearIP(*args)
pixRotateShearIP = _tesseract.pixRotateShearIP

def pixRotateShearCenter(*args):
  return _tesseract.pixRotateShearCenter(*args)
pixRotateShearCenter = _tesseract.pixRotateShearCenter

def pixRotateShearCenterIP(*args):
  return _tesseract.pixRotateShearCenterIP(*args)
pixRotateShearCenterIP = _tesseract.pixRotateShearCenterIP

def pixStrokeWidthTransform(*args):
  return _tesseract.pixStrokeWidthTransform(*args)
pixStrokeWidthTransform = _tesseract.pixStrokeWidthTransform

def pixRunlengthTransform(*args):
  return _tesseract.pixRunlengthTransform(*args)
pixRunlengthTransform = _tesseract.pixRunlengthTransform

def pixFindHorizontalRuns(*args):
  return _tesseract.pixFindHorizontalRuns(*args)
pixFindHorizontalRuns = _tesseract.pixFindHorizontalRuns

def pixFindVerticalRuns(*args):
  return _tesseract.pixFindVerticalRuns(*args)
pixFindVerticalRuns = _tesseract.pixFindVerticalRuns

def runlengthMembershipOnLine(*args):
  return _tesseract.runlengthMembershipOnLine(*args)
runlengthMembershipOnLine = _tesseract.runlengthMembershipOnLine

def makeMSBitLocTab(*args):
  return _tesseract.makeMSBitLocTab(*args)
makeMSBitLocTab = _tesseract.makeMSBitLocTab

def sarrayCreate(*args):
  return _tesseract.sarrayCreate(*args)
sarrayCreate = _tesseract.sarrayCreate

def sarrayCreateInitialized(*args):
  return _tesseract.sarrayCreateInitialized(*args)
sarrayCreateInitialized = _tesseract.sarrayCreateInitialized

def sarrayCreateWordsFromString(*args):
  return _tesseract.sarrayCreateWordsFromString(*args)
sarrayCreateWordsFromString = _tesseract.sarrayCreateWordsFromString

def sarrayCreateLinesFromString(*args):
  return _tesseract.sarrayCreateLinesFromString(*args)
sarrayCreateLinesFromString = _tesseract.sarrayCreateLinesFromString

def sarrayDestroy(*args):
  return _tesseract.sarrayDestroy(*args)
sarrayDestroy = _tesseract.sarrayDestroy

def sarrayCopy(*args):
  return _tesseract.sarrayCopy(*args)
sarrayCopy = _tesseract.sarrayCopy

def sarrayClone(*args):
  return _tesseract.sarrayClone(*args)
sarrayClone = _tesseract.sarrayClone

def sarrayAddString(*args):
  return _tesseract.sarrayAddString(*args)
sarrayAddString = _tesseract.sarrayAddString

def sarrayRemoveString(*args):
  return _tesseract.sarrayRemoveString(*args)
sarrayRemoveString = _tesseract.sarrayRemoveString

def sarrayReplaceString(*args):
  return _tesseract.sarrayReplaceString(*args)
sarrayReplaceString = _tesseract.sarrayReplaceString

def sarrayClear(*args):
  return _tesseract.sarrayClear(*args)
sarrayClear = _tesseract.sarrayClear

def sarrayGetCount(*args):
  return _tesseract.sarrayGetCount(*args)
sarrayGetCount = _tesseract.sarrayGetCount

def sarrayGetArray(*args):
  return _tesseract.sarrayGetArray(*args)
sarrayGetArray = _tesseract.sarrayGetArray

def sarrayGetString(*args):
  return _tesseract.sarrayGetString(*args)
sarrayGetString = _tesseract.sarrayGetString

def sarrayGetRefcount(*args):
  return _tesseract.sarrayGetRefcount(*args)
sarrayGetRefcount = _tesseract.sarrayGetRefcount

def sarrayChangeRefcount(*args):
  return _tesseract.sarrayChangeRefcount(*args)
sarrayChangeRefcount = _tesseract.sarrayChangeRefcount

def sarrayToString(*args):
  return _tesseract.sarrayToString(*args)
sarrayToString = _tesseract.sarrayToString

def sarrayToStringRange(*args):
  return _tesseract.sarrayToStringRange(*args)
sarrayToStringRange = _tesseract.sarrayToStringRange

def sarrayConcatenate(*args):
  return _tesseract.sarrayConcatenate(*args)
sarrayConcatenate = _tesseract.sarrayConcatenate

def sarrayAppendRange(*args):
  return _tesseract.sarrayAppendRange(*args)
sarrayAppendRange = _tesseract.sarrayAppendRange

def sarrayPadToSameSize(*args):
  return _tesseract.sarrayPadToSameSize(*args)
sarrayPadToSameSize = _tesseract.sarrayPadToSameSize

def sarrayConvertWordsToLines(*args):
  return _tesseract.sarrayConvertWordsToLines(*args)
sarrayConvertWordsToLines = _tesseract.sarrayConvertWordsToLines

def sarraySplitString(*args):
  return _tesseract.sarraySplitString(*args)
sarraySplitString = _tesseract.sarraySplitString

def sarraySelectBySubstring(*args):
  return _tesseract.sarraySelectBySubstring(*args)
sarraySelectBySubstring = _tesseract.sarraySelectBySubstring

def sarraySelectByRange(*args):
  return _tesseract.sarraySelectByRange(*args)
sarraySelectByRange = _tesseract.sarraySelectByRange

def sarrayParseRange(*args):
  return _tesseract.sarrayParseRange(*args)
sarrayParseRange = _tesseract.sarrayParseRange

def sarraySort(*args):
  return _tesseract.sarraySort(*args)
sarraySort = _tesseract.sarraySort

def sarraySortByIndex(*args):
  return _tesseract.sarraySortByIndex(*args)
sarraySortByIndex = _tesseract.sarraySortByIndex

def stringCompareLexical(*args):
  return _tesseract.stringCompareLexical(*args)
stringCompareLexical = _tesseract.stringCompareLexical

def sarrayRead(*args):
  return _tesseract.sarrayRead(*args)
sarrayRead = _tesseract.sarrayRead

def sarrayReadStream(*args):
  return _tesseract.sarrayReadStream(*args)
sarrayReadStream = _tesseract.sarrayReadStream

def sarrayWrite(*args):
  return _tesseract.sarrayWrite(*args)
sarrayWrite = _tesseract.sarrayWrite

def sarrayWriteStream(*args):
  return _tesseract.sarrayWriteStream(*args)
sarrayWriteStream = _tesseract.sarrayWriteStream

def sarrayAppend(*args):
  return _tesseract.sarrayAppend(*args)
sarrayAppend = _tesseract.sarrayAppend

def getNumberedPathnamesInDirectory(*args):
  return _tesseract.getNumberedPathnamesInDirectory(*args)
getNumberedPathnamesInDirectory = _tesseract.getNumberedPathnamesInDirectory

def getSortedPathnamesInDirectory(*args):
  return _tesseract.getSortedPathnamesInDirectory(*args)
getSortedPathnamesInDirectory = _tesseract.getSortedPathnamesInDirectory

def convertSortedToNumberedPathnames(*args):
  return _tesseract.convertSortedToNumberedPathnames(*args)
convertSortedToNumberedPathnames = _tesseract.convertSortedToNumberedPathnames

def getFilenamesInDirectory(*args):
  return _tesseract.getFilenamesInDirectory(*args)
getFilenamesInDirectory = _tesseract.getFilenamesInDirectory

def pixScale(*args):
  return _tesseract.pixScale(*args)
pixScale = _tesseract.pixScale

def pixScaleToSize(*args):
  return _tesseract.pixScaleToSize(*args)
pixScaleToSize = _tesseract.pixScaleToSize

def pixScaleGeneral(*args):
  return _tesseract.pixScaleGeneral(*args)
pixScaleGeneral = _tesseract.pixScaleGeneral

def pixScaleLI(*args):
  return _tesseract.pixScaleLI(*args)
pixScaleLI = _tesseract.pixScaleLI

def pixScaleColorLI(*args):
  return _tesseract.pixScaleColorLI(*args)
pixScaleColorLI = _tesseract.pixScaleColorLI

def pixScaleColor2xLI(*args):
  return _tesseract.pixScaleColor2xLI(*args)
pixScaleColor2xLI = _tesseract.pixScaleColor2xLI

def pixScaleColor4xLI(*args):
  return _tesseract.pixScaleColor4xLI(*args)
pixScaleColor4xLI = _tesseract.pixScaleColor4xLI

def pixScaleGrayLI(*args):
  return _tesseract.pixScaleGrayLI(*args)
pixScaleGrayLI = _tesseract.pixScaleGrayLI

def pixScaleGray2xLI(*args):
  return _tesseract.pixScaleGray2xLI(*args)
pixScaleGray2xLI = _tesseract.pixScaleGray2xLI

def pixScaleGray4xLI(*args):
  return _tesseract.pixScaleGray4xLI(*args)
pixScaleGray4xLI = _tesseract.pixScaleGray4xLI

def pixScaleBySampling(*args):
  return _tesseract.pixScaleBySampling(*args)
pixScaleBySampling = _tesseract.pixScaleBySampling

def pixScaleBySamplingToSize(*args):
  return _tesseract.pixScaleBySamplingToSize(*args)
pixScaleBySamplingToSize = _tesseract.pixScaleBySamplingToSize

def pixScaleByIntSubsampling(*args):
  return _tesseract.pixScaleByIntSubsampling(*args)
pixScaleByIntSubsampling = _tesseract.pixScaleByIntSubsampling

def pixScaleRGBToGrayFast(*args):
  return _tesseract.pixScaleRGBToGrayFast(*args)
pixScaleRGBToGrayFast = _tesseract.pixScaleRGBToGrayFast

def pixScaleRGBToBinaryFast(*args):
  return _tesseract.pixScaleRGBToBinaryFast(*args)
pixScaleRGBToBinaryFast = _tesseract.pixScaleRGBToBinaryFast

def pixScaleGrayToBinaryFast(*args):
  return _tesseract.pixScaleGrayToBinaryFast(*args)
pixScaleGrayToBinaryFast = _tesseract.pixScaleGrayToBinaryFast

def pixScaleSmooth(*args):
  return _tesseract.pixScaleSmooth(*args)
pixScaleSmooth = _tesseract.pixScaleSmooth

def pixScaleRGBToGray2(*args):
  return _tesseract.pixScaleRGBToGray2(*args)
pixScaleRGBToGray2 = _tesseract.pixScaleRGBToGray2

def pixScaleAreaMap(*args):
  return _tesseract.pixScaleAreaMap(*args)
pixScaleAreaMap = _tesseract.pixScaleAreaMap

def pixScaleAreaMap2(*args):
  return _tesseract.pixScaleAreaMap2(*args)
pixScaleAreaMap2 = _tesseract.pixScaleAreaMap2

def pixScaleBinary(*args):
  return _tesseract.pixScaleBinary(*args)
pixScaleBinary = _tesseract.pixScaleBinary

def pixScaleToGray(*args):
  return _tesseract.pixScaleToGray(*args)
pixScaleToGray = _tesseract.pixScaleToGray

def pixScaleToGrayFast(*args):
  return _tesseract.pixScaleToGrayFast(*args)
pixScaleToGrayFast = _tesseract.pixScaleToGrayFast

def pixScaleToGray2(*args):
  return _tesseract.pixScaleToGray2(*args)
pixScaleToGray2 = _tesseract.pixScaleToGray2

def pixScaleToGray3(*args):
  return _tesseract.pixScaleToGray3(*args)
pixScaleToGray3 = _tesseract.pixScaleToGray3

def pixScaleToGray4(*args):
  return _tesseract.pixScaleToGray4(*args)
pixScaleToGray4 = _tesseract.pixScaleToGray4

def pixScaleToGray6(*args):
  return _tesseract.pixScaleToGray6(*args)
pixScaleToGray6 = _tesseract.pixScaleToGray6

def pixScaleToGray8(*args):
  return _tesseract.pixScaleToGray8(*args)
pixScaleToGray8 = _tesseract.pixScaleToGray8

def pixScaleToGray16(*args):
  return _tesseract.pixScaleToGray16(*args)
pixScaleToGray16 = _tesseract.pixScaleToGray16

def pixScaleToGrayMipmap(*args):
  return _tesseract.pixScaleToGrayMipmap(*args)
pixScaleToGrayMipmap = _tesseract.pixScaleToGrayMipmap

def pixScaleMipmap(*args):
  return _tesseract.pixScaleMipmap(*args)
pixScaleMipmap = _tesseract.pixScaleMipmap

def pixExpandReplicate(*args):
  return _tesseract.pixExpandReplicate(*args)
pixExpandReplicate = _tesseract.pixExpandReplicate

def pixScaleGray2xLIThresh(*args):
  return _tesseract.pixScaleGray2xLIThresh(*args)
pixScaleGray2xLIThresh = _tesseract.pixScaleGray2xLIThresh

def pixScaleGray2xLIDither(*args):
  return _tesseract.pixScaleGray2xLIDither(*args)
pixScaleGray2xLIDither = _tesseract.pixScaleGray2xLIDither

def pixScaleGray4xLIThresh(*args):
  return _tesseract.pixScaleGray4xLIThresh(*args)
pixScaleGray4xLIThresh = _tesseract.pixScaleGray4xLIThresh

def pixScaleGray4xLIDither(*args):
  return _tesseract.pixScaleGray4xLIDither(*args)
pixScaleGray4xLIDither = _tesseract.pixScaleGray4xLIDither

def pixScaleGrayMinMax(*args):
  return _tesseract.pixScaleGrayMinMax(*args)
pixScaleGrayMinMax = _tesseract.pixScaleGrayMinMax

def pixScaleGrayMinMax2(*args):
  return _tesseract.pixScaleGrayMinMax2(*args)
pixScaleGrayMinMax2 = _tesseract.pixScaleGrayMinMax2

def pixScaleGrayRankCascade(*args):
  return _tesseract.pixScaleGrayRankCascade(*args)
pixScaleGrayRankCascade = _tesseract.pixScaleGrayRankCascade

def pixScaleGrayRank2(*args):
  return _tesseract.pixScaleGrayRank2(*args)
pixScaleGrayRank2 = _tesseract.pixScaleGrayRank2

def pixScaleAndTransferAlpha(*args):
  return _tesseract.pixScaleAndTransferAlpha(*args)
pixScaleAndTransferAlpha = _tesseract.pixScaleAndTransferAlpha

def pixScaleWithAlpha(*args):
  return _tesseract.pixScaleWithAlpha(*args)
pixScaleWithAlpha = _tesseract.pixScaleWithAlpha

def scaleColorLILow(*args):
  return _tesseract.scaleColorLILow(*args)
scaleColorLILow = _tesseract.scaleColorLILow

def scaleGrayLILow(*args):
  return _tesseract.scaleGrayLILow(*args)
scaleGrayLILow = _tesseract.scaleGrayLILow

def scaleColor2xLILow(*args):
  return _tesseract.scaleColor2xLILow(*args)
scaleColor2xLILow = _tesseract.scaleColor2xLILow

def scaleColor2xLILineLow(*args):
  return _tesseract.scaleColor2xLILineLow(*args)
scaleColor2xLILineLow = _tesseract.scaleColor2xLILineLow

def scaleGray2xLILow(*args):
  return _tesseract.scaleGray2xLILow(*args)
scaleGray2xLILow = _tesseract.scaleGray2xLILow

def scaleGray2xLILineLow(*args):
  return _tesseract.scaleGray2xLILineLow(*args)
scaleGray2xLILineLow = _tesseract.scaleGray2xLILineLow

def scaleGray4xLILow(*args):
  return _tesseract.scaleGray4xLILow(*args)
scaleGray4xLILow = _tesseract.scaleGray4xLILow

def scaleGray4xLILineLow(*args):
  return _tesseract.scaleGray4xLILineLow(*args)
scaleGray4xLILineLow = _tesseract.scaleGray4xLILineLow

def scaleBySamplingLow(*args):
  return _tesseract.scaleBySamplingLow(*args)
scaleBySamplingLow = _tesseract.scaleBySamplingLow

def scaleSmoothLow(*args):
  return _tesseract.scaleSmoothLow(*args)
scaleSmoothLow = _tesseract.scaleSmoothLow

def scaleRGBToGray2Low(*args):
  return _tesseract.scaleRGBToGray2Low(*args)
scaleRGBToGray2Low = _tesseract.scaleRGBToGray2Low

def scaleColorAreaMapLow(*args):
  return _tesseract.scaleColorAreaMapLow(*args)
scaleColorAreaMapLow = _tesseract.scaleColorAreaMapLow

def scaleGrayAreaMapLow(*args):
  return _tesseract.scaleGrayAreaMapLow(*args)
scaleGrayAreaMapLow = _tesseract.scaleGrayAreaMapLow

def scaleAreaMapLow2(*args):
  return _tesseract.scaleAreaMapLow2(*args)
scaleAreaMapLow2 = _tesseract.scaleAreaMapLow2

def scaleBinaryLow(*args):
  return _tesseract.scaleBinaryLow(*args)
scaleBinaryLow = _tesseract.scaleBinaryLow

def scaleToGray2Low(*args):
  return _tesseract.scaleToGray2Low(*args)
scaleToGray2Low = _tesseract.scaleToGray2Low

def makeSumTabSG2():
  return _tesseract.makeSumTabSG2()
makeSumTabSG2 = _tesseract.makeSumTabSG2

def makeValTabSG2():
  return _tesseract.makeValTabSG2()
makeValTabSG2 = _tesseract.makeValTabSG2

def scaleToGray3Low(*args):
  return _tesseract.scaleToGray3Low(*args)
scaleToGray3Low = _tesseract.scaleToGray3Low

def makeSumTabSG3():
  return _tesseract.makeSumTabSG3()
makeSumTabSG3 = _tesseract.makeSumTabSG3

def makeValTabSG3():
  return _tesseract.makeValTabSG3()
makeValTabSG3 = _tesseract.makeValTabSG3

def scaleToGray4Low(*args):
  return _tesseract.scaleToGray4Low(*args)
scaleToGray4Low = _tesseract.scaleToGray4Low

def makeSumTabSG4():
  return _tesseract.makeSumTabSG4()
makeSumTabSG4 = _tesseract.makeSumTabSG4

def makeValTabSG4():
  return _tesseract.makeValTabSG4()
makeValTabSG4 = _tesseract.makeValTabSG4

def scaleToGray6Low(*args):
  return _tesseract.scaleToGray6Low(*args)
scaleToGray6Low = _tesseract.scaleToGray6Low

def makeValTabSG6():
  return _tesseract.makeValTabSG6()
makeValTabSG6 = _tesseract.makeValTabSG6

def scaleToGray8Low(*args):
  return _tesseract.scaleToGray8Low(*args)
scaleToGray8Low = _tesseract.scaleToGray8Low

def makeValTabSG8():
  return _tesseract.makeValTabSG8()
makeValTabSG8 = _tesseract.makeValTabSG8

def scaleToGray16Low(*args):
  return _tesseract.scaleToGray16Low(*args)
scaleToGray16Low = _tesseract.scaleToGray16Low

def scaleMipmapLow(*args):
  return _tesseract.scaleMipmapLow(*args)
scaleMipmapLow = _tesseract.scaleMipmapLow

def pixSeedfillBinary(*args):
  return _tesseract.pixSeedfillBinary(*args)
pixSeedfillBinary = _tesseract.pixSeedfillBinary

def pixSeedfillBinaryRestricted(*args):
  return _tesseract.pixSeedfillBinaryRestricted(*args)
pixSeedfillBinaryRestricted = _tesseract.pixSeedfillBinaryRestricted

def pixHolesByFilling(*args):
  return _tesseract.pixHolesByFilling(*args)
pixHolesByFilling = _tesseract.pixHolesByFilling

def pixFillClosedBorders(*args):
  return _tesseract.pixFillClosedBorders(*args)
pixFillClosedBorders = _tesseract.pixFillClosedBorders

def pixExtractBorderConnComps(*args):
  return _tesseract.pixExtractBorderConnComps(*args)
pixExtractBorderConnComps = _tesseract.pixExtractBorderConnComps

def pixRemoveBorderConnComps(*args):
  return _tesseract.pixRemoveBorderConnComps(*args)
pixRemoveBorderConnComps = _tesseract.pixRemoveBorderConnComps

def pixFillBgFromBorder(*args):
  return _tesseract.pixFillBgFromBorder(*args)
pixFillBgFromBorder = _tesseract.pixFillBgFromBorder

def pixFillHolesToBoundingRect(*args):
  return _tesseract.pixFillHolesToBoundingRect(*args)
pixFillHolesToBoundingRect = _tesseract.pixFillHolesToBoundingRect

def pixSeedfillGray(*args):
  return _tesseract.pixSeedfillGray(*args)
pixSeedfillGray = _tesseract.pixSeedfillGray

def pixSeedfillGrayInv(*args):
  return _tesseract.pixSeedfillGrayInv(*args)
pixSeedfillGrayInv = _tesseract.pixSeedfillGrayInv

def pixSeedfillGraySimple(*args):
  return _tesseract.pixSeedfillGraySimple(*args)
pixSeedfillGraySimple = _tesseract.pixSeedfillGraySimple

def pixSeedfillGrayInvSimple(*args):
  return _tesseract.pixSeedfillGrayInvSimple(*args)
pixSeedfillGrayInvSimple = _tesseract.pixSeedfillGrayInvSimple

def pixSeedfillGrayBasin(*args):
  return _tesseract.pixSeedfillGrayBasin(*args)
pixSeedfillGrayBasin = _tesseract.pixSeedfillGrayBasin

def pixDistanceFunction(*args):
  return _tesseract.pixDistanceFunction(*args)
pixDistanceFunction = _tesseract.pixDistanceFunction

def pixSeedspread(*args):
  return _tesseract.pixSeedspread(*args)
pixSeedspread = _tesseract.pixSeedspread

def pixLocalExtrema(*args):
  return _tesseract.pixLocalExtrema(*args)
pixLocalExtrema = _tesseract.pixLocalExtrema

def pixSelectedLocalExtrema(*args):
  return _tesseract.pixSelectedLocalExtrema(*args)
pixSelectedLocalExtrema = _tesseract.pixSelectedLocalExtrema

def pixFindEqualValues(*args):
  return _tesseract.pixFindEqualValues(*args)
pixFindEqualValues = _tesseract.pixFindEqualValues

def pixSelectMinInConnComp(*args):
  return _tesseract.pixSelectMinInConnComp(*args)
pixSelectMinInConnComp = _tesseract.pixSelectMinInConnComp

def pixRemoveSeededComponents(*args):
  return _tesseract.pixRemoveSeededComponents(*args)
pixRemoveSeededComponents = _tesseract.pixRemoveSeededComponents

def seedfillBinaryLow(*args):
  return _tesseract.seedfillBinaryLow(*args)
seedfillBinaryLow = _tesseract.seedfillBinaryLow

def seedfillGrayLow(*args):
  return _tesseract.seedfillGrayLow(*args)
seedfillGrayLow = _tesseract.seedfillGrayLow

def seedfillGrayInvLow(*args):
  return _tesseract.seedfillGrayInvLow(*args)
seedfillGrayInvLow = _tesseract.seedfillGrayInvLow

def seedfillGrayLowSimple(*args):
  return _tesseract.seedfillGrayLowSimple(*args)
seedfillGrayLowSimple = _tesseract.seedfillGrayLowSimple

def seedfillGrayInvLowSimple(*args):
  return _tesseract.seedfillGrayInvLowSimple(*args)
seedfillGrayInvLowSimple = _tesseract.seedfillGrayInvLowSimple

def distanceFunctionLow(*args):
  return _tesseract.distanceFunctionLow(*args)
distanceFunctionLow = _tesseract.distanceFunctionLow

def seedspreadLow(*args):
  return _tesseract.seedspreadLow(*args)
seedspreadLow = _tesseract.seedspreadLow

def selaCreate(*args):
  return _tesseract.selaCreate(*args)
selaCreate = _tesseract.selaCreate

def selaDestroy(*args):
  return _tesseract.selaDestroy(*args)
selaDestroy = _tesseract.selaDestroy

def selCreate(*args):
  return _tesseract.selCreate(*args)
selCreate = _tesseract.selCreate

def selDestroy(*args):
  return _tesseract.selDestroy(*args)
selDestroy = _tesseract.selDestroy

def selCopy(*args):
  return _tesseract.selCopy(*args)
selCopy = _tesseract.selCopy

def selCreateBrick(*args):
  return _tesseract.selCreateBrick(*args)
selCreateBrick = _tesseract.selCreateBrick

def selCreateComb(*args):
  return _tesseract.selCreateComb(*args)
selCreateComb = _tesseract.selCreateComb

def create2dIntArray(*args):
  return _tesseract.create2dIntArray(*args)
create2dIntArray = _tesseract.create2dIntArray

def selaAddSel(*args):
  return _tesseract.selaAddSel(*args)
selaAddSel = _tesseract.selaAddSel

def selaGetCount(*args):
  return _tesseract.selaGetCount(*args)
selaGetCount = _tesseract.selaGetCount

def selaGetSel(*args):
  return _tesseract.selaGetSel(*args)
selaGetSel = _tesseract.selaGetSel

def selGetName(*args):
  return _tesseract.selGetName(*args)
selGetName = _tesseract.selGetName

def selSetName(*args):
  return _tesseract.selSetName(*args)
selSetName = _tesseract.selSetName

def selaFindSelByName(*args):
  return _tesseract.selaFindSelByName(*args)
selaFindSelByName = _tesseract.selaFindSelByName

def selGetElement(*args):
  return _tesseract.selGetElement(*args)
selGetElement = _tesseract.selGetElement

def selSetElement(*args):
  return _tesseract.selSetElement(*args)
selSetElement = _tesseract.selSetElement

def selGetParameters(*args):
  return _tesseract.selGetParameters(*args)
selGetParameters = _tesseract.selGetParameters

def selSetOrigin(*args):
  return _tesseract.selSetOrigin(*args)
selSetOrigin = _tesseract.selSetOrigin

def selGetTypeAtOrigin(*args):
  return _tesseract.selGetTypeAtOrigin(*args)
selGetTypeAtOrigin = _tesseract.selGetTypeAtOrigin

def selaGetBrickName(*args):
  return _tesseract.selaGetBrickName(*args)
selaGetBrickName = _tesseract.selaGetBrickName

def selaGetCombName(*args):
  return _tesseract.selaGetCombName(*args)
selaGetCombName = _tesseract.selaGetCombName

def getCompositeParameters(*args):
  return _tesseract.getCompositeParameters(*args)
getCompositeParameters = _tesseract.getCompositeParameters

def selaGetSelnames(*args):
  return _tesseract.selaGetSelnames(*args)
selaGetSelnames = _tesseract.selaGetSelnames

def selFindMaxTranslations(*args):
  return _tesseract.selFindMaxTranslations(*args)
selFindMaxTranslations = _tesseract.selFindMaxTranslations

def selRotateOrth(*args):
  return _tesseract.selRotateOrth(*args)
selRotateOrth = _tesseract.selRotateOrth

def selaRead(*args):
  return _tesseract.selaRead(*args)
selaRead = _tesseract.selaRead

def selaReadStream(*args):
  return _tesseract.selaReadStream(*args)
selaReadStream = _tesseract.selaReadStream

def selRead(*args):
  return _tesseract.selRead(*args)
selRead = _tesseract.selRead

def selReadStream(*args):
  return _tesseract.selReadStream(*args)
selReadStream = _tesseract.selReadStream

def selaWrite(*args):
  return _tesseract.selaWrite(*args)
selaWrite = _tesseract.selaWrite

def selaWriteStream(*args):
  return _tesseract.selaWriteStream(*args)
selaWriteStream = _tesseract.selaWriteStream

def selWrite(*args):
  return _tesseract.selWrite(*args)
selWrite = _tesseract.selWrite

def selWriteStream(*args):
  return _tesseract.selWriteStream(*args)
selWriteStream = _tesseract.selWriteStream

def selCreateFromString(*args):
  return _tesseract.selCreateFromString(*args)
selCreateFromString = _tesseract.selCreateFromString

def selPrintToString(*args):
  return _tesseract.selPrintToString(*args)
selPrintToString = _tesseract.selPrintToString

def selaCreateFromFile(*args):
  return _tesseract.selaCreateFromFile(*args)
selaCreateFromFile = _tesseract.selaCreateFromFile

def selCreateFromPta(*args):
  return _tesseract.selCreateFromPta(*args)
selCreateFromPta = _tesseract.selCreateFromPta

def selCreateFromPix(*args):
  return _tesseract.selCreateFromPix(*args)
selCreateFromPix = _tesseract.selCreateFromPix

def selReadFromColorImage(*args):
  return _tesseract.selReadFromColorImage(*args)
selReadFromColorImage = _tesseract.selReadFromColorImage

def selCreateFromColorPix(*args):
  return _tesseract.selCreateFromColorPix(*args)
selCreateFromColorPix = _tesseract.selCreateFromColorPix

def selDisplayInPix(*args):
  return _tesseract.selDisplayInPix(*args)
selDisplayInPix = _tesseract.selDisplayInPix

def selaDisplayInPix(*args):
  return _tesseract.selaDisplayInPix(*args)
selaDisplayInPix = _tesseract.selaDisplayInPix

def selaAddBasic(*args):
  return _tesseract.selaAddBasic(*args)
selaAddBasic = _tesseract.selaAddBasic

def selaAddHitMiss(*args):
  return _tesseract.selaAddHitMiss(*args)
selaAddHitMiss = _tesseract.selaAddHitMiss

def selaAddDwaLinear(*args):
  return _tesseract.selaAddDwaLinear(*args)
selaAddDwaLinear = _tesseract.selaAddDwaLinear

def selaAddDwaCombs(*args):
  return _tesseract.selaAddDwaCombs(*args)
selaAddDwaCombs = _tesseract.selaAddDwaCombs

def selaAddCrossJunctions(*args):
  return _tesseract.selaAddCrossJunctions(*args)
selaAddCrossJunctions = _tesseract.selaAddCrossJunctions

def selaAddTJunctions(*args):
  return _tesseract.selaAddTJunctions(*args)
selaAddTJunctions = _tesseract.selaAddTJunctions

def pixGenerateSelWithRuns(*args):
  return _tesseract.pixGenerateSelWithRuns(*args)
pixGenerateSelWithRuns = _tesseract.pixGenerateSelWithRuns

def pixGenerateSelRandom(*args):
  return _tesseract.pixGenerateSelRandom(*args)
pixGenerateSelRandom = _tesseract.pixGenerateSelRandom

def pixGenerateSelBoundary(*args):
  return _tesseract.pixGenerateSelBoundary(*args)
pixGenerateSelBoundary = _tesseract.pixGenerateSelBoundary

def pixGetRunCentersOnLine(*args):
  return _tesseract.pixGetRunCentersOnLine(*args)
pixGetRunCentersOnLine = _tesseract.pixGetRunCentersOnLine

def pixGetRunsOnLine(*args):
  return _tesseract.pixGetRunsOnLine(*args)
pixGetRunsOnLine = _tesseract.pixGetRunsOnLine

def pixSubsampleBoundaryPixels(*args):
  return _tesseract.pixSubsampleBoundaryPixels(*args)
pixSubsampleBoundaryPixels = _tesseract.pixSubsampleBoundaryPixels

def adjacentOnPixelInRaster(*args):
  return _tesseract.adjacentOnPixelInRaster(*args)
adjacentOnPixelInRaster = _tesseract.adjacentOnPixelInRaster

def pixDisplayHitMissSel(*args):
  return _tesseract.pixDisplayHitMissSel(*args)
pixDisplayHitMissSel = _tesseract.pixDisplayHitMissSel

def pixHShear(*args):
  return _tesseract.pixHShear(*args)
pixHShear = _tesseract.pixHShear

def pixVShear(*args):
  return _tesseract.pixVShear(*args)
pixVShear = _tesseract.pixVShear

def pixHShearCorner(*args):
  return _tesseract.pixHShearCorner(*args)
pixHShearCorner = _tesseract.pixHShearCorner

def pixVShearCorner(*args):
  return _tesseract.pixVShearCorner(*args)
pixVShearCorner = _tesseract.pixVShearCorner

def pixHShearCenter(*args):
  return _tesseract.pixHShearCenter(*args)
pixHShearCenter = _tesseract.pixHShearCenter

def pixVShearCenter(*args):
  return _tesseract.pixVShearCenter(*args)
pixVShearCenter = _tesseract.pixVShearCenter

def pixHShearIP(*args):
  return _tesseract.pixHShearIP(*args)
pixHShearIP = _tesseract.pixHShearIP

def pixVShearIP(*args):
  return _tesseract.pixVShearIP(*args)
pixVShearIP = _tesseract.pixVShearIP

def pixHShearLI(*args):
  return _tesseract.pixHShearLI(*args)
pixHShearLI = _tesseract.pixHShearLI

def pixVShearLI(*args):
  return _tesseract.pixVShearLI(*args)
pixVShearLI = _tesseract.pixVShearLI

def pixDeskew(*args):
  return _tesseract.pixDeskew(*args)
pixDeskew = _tesseract.pixDeskew

def pixFindSkewAndDeskew(*args):
  return _tesseract.pixFindSkewAndDeskew(*args)
pixFindSkewAndDeskew = _tesseract.pixFindSkewAndDeskew

def pixDeskewGeneral(*args):
  return _tesseract.pixDeskewGeneral(*args)
pixDeskewGeneral = _tesseract.pixDeskewGeneral

def pixFindSkew(*args):
  return _tesseract.pixFindSkew(*args)
pixFindSkew = _tesseract.pixFindSkew

def pixFindSkewSweep(*args):
  return _tesseract.pixFindSkewSweep(*args)
pixFindSkewSweep = _tesseract.pixFindSkewSweep

def pixFindSkewSweepAndSearch(*args):
  return _tesseract.pixFindSkewSweepAndSearch(*args)
pixFindSkewSweepAndSearch = _tesseract.pixFindSkewSweepAndSearch

def pixFindSkewSweepAndSearchScore(*args):
  return _tesseract.pixFindSkewSweepAndSearchScore(*args)
pixFindSkewSweepAndSearchScore = _tesseract.pixFindSkewSweepAndSearchScore

def pixFindSkewSweepAndSearchScorePivot(*args):
  return _tesseract.pixFindSkewSweepAndSearchScorePivot(*args)
pixFindSkewSweepAndSearchScorePivot = _tesseract.pixFindSkewSweepAndSearchScorePivot

def pixFindSkewOrthogonalRange(*args):
  return _tesseract.pixFindSkewOrthogonalRange(*args)
pixFindSkewOrthogonalRange = _tesseract.pixFindSkewOrthogonalRange

def pixFindDifferentialSquareSum(*args):
  return _tesseract.pixFindDifferentialSquareSum(*args)
pixFindDifferentialSquareSum = _tesseract.pixFindDifferentialSquareSum

def pixFindNormalizedSquareSum(*args):
  return _tesseract.pixFindNormalizedSquareSum(*args)
pixFindNormalizedSquareSum = _tesseract.pixFindNormalizedSquareSum

def pixReadStreamSpix(*args):
  return _tesseract.pixReadStreamSpix(*args)
pixReadStreamSpix = _tesseract.pixReadStreamSpix

def readHeaderSpix(*args):
  return _tesseract.readHeaderSpix(*args)
readHeaderSpix = _tesseract.readHeaderSpix

def freadHeaderSpix(*args):
  return _tesseract.freadHeaderSpix(*args)
freadHeaderSpix = _tesseract.freadHeaderSpix

def sreadHeaderSpix(*args):
  return _tesseract.sreadHeaderSpix(*args)
sreadHeaderSpix = _tesseract.sreadHeaderSpix

def pixWriteStreamSpix(*args):
  return _tesseract.pixWriteStreamSpix(*args)
pixWriteStreamSpix = _tesseract.pixWriteStreamSpix

def pixReadMemSpix(*args):
  return _tesseract.pixReadMemSpix(*args)
pixReadMemSpix = _tesseract.pixReadMemSpix

def pixWriteMemSpix(*args):
  return _tesseract.pixWriteMemSpix(*args)
pixWriteMemSpix = _tesseract.pixWriteMemSpix

def pixSerializeToMemory(*args):
  return _tesseract.pixSerializeToMemory(*args)
pixSerializeToMemory = _tesseract.pixSerializeToMemory

def pixDeserializeFromMemory(*args):
  return _tesseract.pixDeserializeFromMemory(*args)
pixDeserializeFromMemory = _tesseract.pixDeserializeFromMemory

def lstackCreate(*args):
  return _tesseract.lstackCreate(*args)
lstackCreate = _tesseract.lstackCreate

def lstackDestroy(*args):
  return _tesseract.lstackDestroy(*args)
lstackDestroy = _tesseract.lstackDestroy

def lstackAdd(*args):
  return _tesseract.lstackAdd(*args)
lstackAdd = _tesseract.lstackAdd

def lstackRemove(*args):
  return _tesseract.lstackRemove(*args)
lstackRemove = _tesseract.lstackRemove

def lstackGetCount(*args):
  return _tesseract.lstackGetCount(*args)
lstackGetCount = _tesseract.lstackGetCount

def lstackPrint(*args):
  return _tesseract.lstackPrint(*args)
lstackPrint = _tesseract.lstackPrint

def sudokuReadFile(*args):
  return _tesseract.sudokuReadFile(*args)
sudokuReadFile = _tesseract.sudokuReadFile

def sudokuReadString(*args):
  return _tesseract.sudokuReadString(*args)
sudokuReadString = _tesseract.sudokuReadString

def sudokuCreate(*args):
  return _tesseract.sudokuCreate(*args)
sudokuCreate = _tesseract.sudokuCreate

def sudokuDestroy(*args):
  return _tesseract.sudokuDestroy(*args)
sudokuDestroy = _tesseract.sudokuDestroy

def sudokuSolve(*args):
  return _tesseract.sudokuSolve(*args)
sudokuSolve = _tesseract.sudokuSolve

def sudokuTestUniqueness(*args):
  return _tesseract.sudokuTestUniqueness(*args)
sudokuTestUniqueness = _tesseract.sudokuTestUniqueness

def sudokuGenerate(*args):
  return _tesseract.sudokuGenerate(*args)
sudokuGenerate = _tesseract.sudokuGenerate

def sudokuOutput(*args):
  return _tesseract.sudokuOutput(*args)
sudokuOutput = _tesseract.sudokuOutput

def pixAddSingleTextblock(*args):
  return _tesseract.pixAddSingleTextblock(*args)
pixAddSingleTextblock = _tesseract.pixAddSingleTextblock

def pixAddSingleTextline(*args):
  return _tesseract.pixAddSingleTextline(*args)
pixAddSingleTextline = _tesseract.pixAddSingleTextline

def pixSetTextblock(*args):
  return _tesseract.pixSetTextblock(*args)
pixSetTextblock = _tesseract.pixSetTextblock

def pixSetTextline(*args):
  return _tesseract.pixSetTextline(*args)
pixSetTextline = _tesseract.pixSetTextline

def pixaAddTextNumber(*args):
  return _tesseract.pixaAddTextNumber(*args)
pixaAddTextNumber = _tesseract.pixaAddTextNumber

def pixaAddTextline(*args):
  return _tesseract.pixaAddTextline(*args)
pixaAddTextline = _tesseract.pixaAddTextline

def bmfGetLineStrings(*args):
  return _tesseract.bmfGetLineStrings(*args)
bmfGetLineStrings = _tesseract.bmfGetLineStrings

def bmfGetWordWidths(*args):
  return _tesseract.bmfGetWordWidths(*args)
bmfGetWordWidths = _tesseract.bmfGetWordWidths

def bmfGetStringWidth(*args):
  return _tesseract.bmfGetStringWidth(*args)
bmfGetStringWidth = _tesseract.bmfGetStringWidth

def splitStringToParagraphs(*args):
  return _tesseract.splitStringToParagraphs(*args)
splitStringToParagraphs = _tesseract.splitStringToParagraphs

def pixReadTiff(*args):
  return _tesseract.pixReadTiff(*args)
pixReadTiff = _tesseract.pixReadTiff

def pixReadStreamTiff(*args):
  return _tesseract.pixReadStreamTiff(*args)
pixReadStreamTiff = _tesseract.pixReadStreamTiff

def pixWriteTiff(*args):
  return _tesseract.pixWriteTiff(*args)
pixWriteTiff = _tesseract.pixWriteTiff

def pixWriteTiffCustom(*args):
  return _tesseract.pixWriteTiffCustom(*args)
pixWriteTiffCustom = _tesseract.pixWriteTiffCustom

def pixWriteStreamTiff(*args):
  return _tesseract.pixWriteStreamTiff(*args)
pixWriteStreamTiff = _tesseract.pixWriteStreamTiff

def pixaReadMultipageTiff(*args):
  return _tesseract.pixaReadMultipageTiff(*args)
pixaReadMultipageTiff = _tesseract.pixaReadMultipageTiff

def writeMultipageTiff(*args):
  return _tesseract.writeMultipageTiff(*args)
writeMultipageTiff = _tesseract.writeMultipageTiff

def writeMultipageTiffSA(*args):
  return _tesseract.writeMultipageTiffSA(*args)
writeMultipageTiffSA = _tesseract.writeMultipageTiffSA

def fprintTiffInfo(*args):
  return _tesseract.fprintTiffInfo(*args)
fprintTiffInfo = _tesseract.fprintTiffInfo

def tiffGetCount(*args):
  return _tesseract.tiffGetCount(*args)
tiffGetCount = _tesseract.tiffGetCount

def getTiffResolution(*args):
  return _tesseract.getTiffResolution(*args)
getTiffResolution = _tesseract.getTiffResolution

def readHeaderTiff(*args):
  return _tesseract.readHeaderTiff(*args)
readHeaderTiff = _tesseract.readHeaderTiff

def freadHeaderTiff(*args):
  return _tesseract.freadHeaderTiff(*args)
freadHeaderTiff = _tesseract.freadHeaderTiff

def readHeaderMemTiff(*args):
  return _tesseract.readHeaderMemTiff(*args)
readHeaderMemTiff = _tesseract.readHeaderMemTiff

def findTiffCompression(*args):
  return _tesseract.findTiffCompression(*args)
findTiffCompression = _tesseract.findTiffCompression

def extractG4DataFromFile(*args):
  return _tesseract.extractG4DataFromFile(*args)
extractG4DataFromFile = _tesseract.extractG4DataFromFile

def pixReadMemTiff(*args):
  return _tesseract.pixReadMemTiff(*args)
pixReadMemTiff = _tesseract.pixReadMemTiff

def pixWriteMemTiff(*args):
  return _tesseract.pixWriteMemTiff(*args)
pixWriteMemTiff = _tesseract.pixWriteMemTiff

def pixWriteMemTiffCustom(*args):
  return _tesseract.pixWriteMemTiffCustom(*args)
pixWriteMemTiffCustom = _tesseract.pixWriteMemTiffCustom

def setMsgSeverity(*args):
  return _tesseract.setMsgSeverity(*args)
setMsgSeverity = _tesseract.setMsgSeverity

def returnErrorInt(*args):
  return _tesseract.returnErrorInt(*args)
returnErrorInt = _tesseract.returnErrorInt

def returnErrorFloat(*args):
  return _tesseract.returnErrorFloat(*args)
returnErrorFloat = _tesseract.returnErrorFloat

def returnErrorPtr(*args):
  return _tesseract.returnErrorPtr(*args)
returnErrorPtr = _tesseract.returnErrorPtr

def stringNew(*args):
  return _tesseract.stringNew(*args)
stringNew = _tesseract.stringNew

def stringCopy(*args):
  return _tesseract.stringCopy(*args)
stringCopy = _tesseract.stringCopy

def stringReplace(*args):
  return _tesseract.stringReplace(*args)
stringReplace = _tesseract.stringReplace

def stringLength(*args):
  return _tesseract.stringLength(*args)
stringLength = _tesseract.stringLength

def stringCat(*args):
  return _tesseract.stringCat(*args)
stringCat = _tesseract.stringCat

def stringJoin(*args):
  return _tesseract.stringJoin(*args)
stringJoin = _tesseract.stringJoin

def stringReverse(*args):
  return _tesseract.stringReverse(*args)
stringReverse = _tesseract.stringReverse

def strtokSafe(*args):
  return _tesseract.strtokSafe(*args)
strtokSafe = _tesseract.strtokSafe

def stringSplitOnToken(*args):
  return _tesseract.stringSplitOnToken(*args)
stringSplitOnToken = _tesseract.stringSplitOnToken

def stringRemoveChars(*args):
  return _tesseract.stringRemoveChars(*args)
stringRemoveChars = _tesseract.stringRemoveChars

def stringFindSubstr(*args):
  return _tesseract.stringFindSubstr(*args)
stringFindSubstr = _tesseract.stringFindSubstr

def stringReplaceSubstr(*args):
  return _tesseract.stringReplaceSubstr(*args)
stringReplaceSubstr = _tesseract.stringReplaceSubstr

def stringReplaceEachSubstr(*args):
  return _tesseract.stringReplaceEachSubstr(*args)
stringReplaceEachSubstr = _tesseract.stringReplaceEachSubstr

def arrayFindEachSequence(*args):
  return _tesseract.arrayFindEachSequence(*args)
arrayFindEachSequence = _tesseract.arrayFindEachSequence

def arrayFindSequence(*args):
  return _tesseract.arrayFindSequence(*args)
arrayFindSequence = _tesseract.arrayFindSequence

def reallocNew(*args):
  return _tesseract.reallocNew(*args)
reallocNew = _tesseract.reallocNew

def l_binaryRead(*args):
  return _tesseract.l_binaryRead(*args)
l_binaryRead = _tesseract.l_binaryRead

def l_binaryReadStream(*args):
  return _tesseract.l_binaryReadStream(*args)
l_binaryReadStream = _tesseract.l_binaryReadStream

def l_binaryWrite(*args):
  return _tesseract.l_binaryWrite(*args)
l_binaryWrite = _tesseract.l_binaryWrite

def nbytesInFile(*args):
  return _tesseract.nbytesInFile(*args)
nbytesInFile = _tesseract.nbytesInFile

def fnbytesInFile(*args):
  return _tesseract.fnbytesInFile(*args)
fnbytesInFile = _tesseract.fnbytesInFile

def l_binaryCopy(*args):
  return _tesseract.l_binaryCopy(*args)
l_binaryCopy = _tesseract.l_binaryCopy

def fileCopy(*args):
  return _tesseract.fileCopy(*args)
fileCopy = _tesseract.fileCopy

def fileConcatenate(*args):
  return _tesseract.fileConcatenate(*args)
fileConcatenate = _tesseract.fileConcatenate

def fileAppendString(*args):
  return _tesseract.fileAppendString(*args)
fileAppendString = _tesseract.fileAppendString

def filesAreIdentical(*args):
  return _tesseract.filesAreIdentical(*args)
filesAreIdentical = _tesseract.filesAreIdentical

def convertOnLittleEnd16(*args):
  return _tesseract.convertOnLittleEnd16(*args)
convertOnLittleEnd16 = _tesseract.convertOnLittleEnd16

def convertOnBigEnd16(*args):
  return _tesseract.convertOnBigEnd16(*args)
convertOnBigEnd16 = _tesseract.convertOnBigEnd16

def convertOnLittleEnd32(*args):
  return _tesseract.convertOnLittleEnd32(*args)
convertOnLittleEnd32 = _tesseract.convertOnLittleEnd32

def convertOnBigEnd32(*args):
  return _tesseract.convertOnBigEnd32(*args)
convertOnBigEnd32 = _tesseract.convertOnBigEnd32

def fopenReadStream(*args):
  return _tesseract.fopenReadStream(*args)
fopenReadStream = _tesseract.fopenReadStream

def fopenWriteStream(*args):
  return _tesseract.fopenWriteStream(*args)
fopenWriteStream = _tesseract.fopenWriteStream

def lept_fopen(*args):
  return _tesseract.lept_fopen(*args)
lept_fopen = _tesseract.lept_fopen

def lept_fclose(*args):
  return _tesseract.lept_fclose(*args)
lept_fclose = _tesseract.lept_fclose

def lept_calloc(*args):
  return _tesseract.lept_calloc(*args)
lept_calloc = _tesseract.lept_calloc

def lept_free(*args):
  return _tesseract.lept_free(*args)
lept_free = _tesseract.lept_free

def lept_mkdir(*args):
  return _tesseract.lept_mkdir(*args)
lept_mkdir = _tesseract.lept_mkdir

def lept_rmdir(*args):
  return _tesseract.lept_rmdir(*args)
lept_rmdir = _tesseract.lept_rmdir

def lept_direxists(*args):
  return _tesseract.lept_direxists(*args)
lept_direxists = _tesseract.lept_direxists

def lept_rm(*args):
  return _tesseract.lept_rm(*args)
lept_rm = _tesseract.lept_rm

def lept_mv(*args):
  return _tesseract.lept_mv(*args)
lept_mv = _tesseract.lept_mv

def lept_cp(*args):
  return _tesseract.lept_cp(*args)
lept_cp = _tesseract.lept_cp

def splitPathAtDirectory(*args):
  return _tesseract.splitPathAtDirectory(*args)
splitPathAtDirectory = _tesseract.splitPathAtDirectory

def splitPathAtExtension(*args):
  return _tesseract.splitPathAtExtension(*args)
splitPathAtExtension = _tesseract.splitPathAtExtension

def pathJoin(*args):
  return _tesseract.pathJoin(*args)
pathJoin = _tesseract.pathJoin

def genPathname(*args):
  return _tesseract.genPathname(*args)
genPathname = _tesseract.genPathname

def makeTempDirname(*args):
  return _tesseract.makeTempDirname(*args)
makeTempDirname = _tesseract.makeTempDirname

def genTempFilename(*args):
  return _tesseract.genTempFilename(*args)
genTempFilename = _tesseract.genTempFilename

def extractNumberFromFilename(*args):
  return _tesseract.extractNumberFromFilename(*args)
extractNumberFromFilename = _tesseract.extractNumberFromFilename

def fileCorruptByDeletion(*args):
  return _tesseract.fileCorruptByDeletion(*args)
fileCorruptByDeletion = _tesseract.fileCorruptByDeletion

def genRandomIntegerInRange(*args):
  return _tesseract.genRandomIntegerInRange(*args)
genRandomIntegerInRange = _tesseract.genRandomIntegerInRange

def lept_roundftoi(*args):
  return _tesseract.lept_roundftoi(*args)
lept_roundftoi = _tesseract.lept_roundftoi

def convertBinaryToGrayCode(*args):
  return _tesseract.convertBinaryToGrayCode(*args)
convertBinaryToGrayCode = _tesseract.convertBinaryToGrayCode

def convertGrayCodeToBinary(*args):
  return _tesseract.convertGrayCodeToBinary(*args)
convertGrayCodeToBinary = _tesseract.convertGrayCodeToBinary

def getLeptonicaVersion():
  return _tesseract.getLeptonicaVersion()
getLeptonicaVersion = _tesseract.getLeptonicaVersion

def startTimer():
  return _tesseract.startTimer()
startTimer = _tesseract.startTimer

def stopTimer():
  return _tesseract.stopTimer()
stopTimer = _tesseract.stopTimer

def startTimerNested():
  return _tesseract.startTimerNested()
startTimerNested = _tesseract.startTimerNested

def stopTimerNested(*args):
  return _tesseract.stopTimerNested(*args)
stopTimerNested = _tesseract.stopTimerNested

def l_getCurrentTime(*args):
  return _tesseract.l_getCurrentTime(*args)
l_getCurrentTime = _tesseract.l_getCurrentTime

def l_getFormattedDate():
  return _tesseract.l_getFormattedDate()
l_getFormattedDate = _tesseract.l_getFormattedDate

def pixHtmlViewer(*args):
  return _tesseract.pixHtmlViewer(*args)
pixHtmlViewer = _tesseract.pixHtmlViewer

def pixSimpleCaptcha(*args):
  return _tesseract.pixSimpleCaptcha(*args)
pixSimpleCaptcha = _tesseract.pixSimpleCaptcha

def pixRandomHarmonicWarp(*args):
  return _tesseract.pixRandomHarmonicWarp(*args)
pixRandomHarmonicWarp = _tesseract.pixRandomHarmonicWarp

def pixWarpStereoscopic(*args):
  return _tesseract.pixWarpStereoscopic(*args)
pixWarpStereoscopic = _tesseract.pixWarpStereoscopic

def pixStretchHorizontal(*args):
  return _tesseract.pixStretchHorizontal(*args)
pixStretchHorizontal = _tesseract.pixStretchHorizontal

def pixStretchHorizontalSampled(*args):
  return _tesseract.pixStretchHorizontalSampled(*args)
pixStretchHorizontalSampled = _tesseract.pixStretchHorizontalSampled

def pixStretchHorizontalLI(*args):
  return _tesseract.pixStretchHorizontalLI(*args)
pixStretchHorizontalLI = _tesseract.pixStretchHorizontalLI

def pixQuadraticVShear(*args):
  return _tesseract.pixQuadraticVShear(*args)
pixQuadraticVShear = _tesseract.pixQuadraticVShear

def pixQuadraticVShearSampled(*args):
  return _tesseract.pixQuadraticVShearSampled(*args)
pixQuadraticVShearSampled = _tesseract.pixQuadraticVShearSampled

def pixQuadraticVShearLI(*args):
  return _tesseract.pixQuadraticVShearLI(*args)
pixQuadraticVShearLI = _tesseract.pixQuadraticVShearLI

def pixStereoFromPair(*args):
  return _tesseract.pixStereoFromPair(*args)
pixStereoFromPair = _tesseract.pixStereoFromPair

def wshedCreate(*args):
  return _tesseract.wshedCreate(*args)
wshedCreate = _tesseract.wshedCreate

def wshedDestroy(*args):
  return _tesseract.wshedDestroy(*args)
wshedDestroy = _tesseract.wshedDestroy

def wshedApply(*args):
  return _tesseract.wshedApply(*args)
wshedApply = _tesseract.wshedApply

def wshedBasins(*args):
  return _tesseract.wshedBasins(*args)
wshedBasins = _tesseract.wshedBasins

def wshedRenderFill(*args):
  return _tesseract.wshedRenderFill(*args)
wshedRenderFill = _tesseract.wshedRenderFill

def wshedRenderColors(*args):
  return _tesseract.wshedRenderColors(*args)
wshedRenderColors = _tesseract.wshedRenderColors

def pixReadStreamWebP(*args):
  return _tesseract.pixReadStreamWebP(*args)
pixReadStreamWebP = _tesseract.pixReadStreamWebP

def pixReadMemWebP(*args):
  return _tesseract.pixReadMemWebP(*args)
pixReadMemWebP = _tesseract.pixReadMemWebP

def readHeaderWebP(*args):
  return _tesseract.readHeaderWebP(*args)
readHeaderWebP = _tesseract.readHeaderWebP

def pixWriteWebP(*args):
  return _tesseract.pixWriteWebP(*args)
pixWriteWebP = _tesseract.pixWriteWebP

def pixWriteStreamWebP(*args):
  return _tesseract.pixWriteStreamWebP(*args)
pixWriteStreamWebP = _tesseract.pixWriteStreamWebP

def pixWriteMemWebP(*args):
  return _tesseract.pixWriteMemWebP(*args)
pixWriteMemWebP = _tesseract.pixWriteMemWebP

def pixaWriteFiles(*args):
  return _tesseract.pixaWriteFiles(*args)
pixaWriteFiles = _tesseract.pixaWriteFiles

def pixWrite(*args):
  return _tesseract.pixWrite(*args)
pixWrite = _tesseract.pixWrite

def pixWriteStream(*args):
  return _tesseract.pixWriteStream(*args)
pixWriteStream = _tesseract.pixWriteStream

def pixWriteImpliedFormat(*args):
  return _tesseract.pixWriteImpliedFormat(*args)
pixWriteImpliedFormat = _tesseract.pixWriteImpliedFormat

def pixWriteTempfile(*args):
  return _tesseract.pixWriteTempfile(*args)
pixWriteTempfile = _tesseract.pixWriteTempfile

def pixChooseOutputFormat(*args):
  return _tesseract.pixChooseOutputFormat(*args)
pixChooseOutputFormat = _tesseract.pixChooseOutputFormat

def getImpliedFileFormat(*args):
  return _tesseract.getImpliedFileFormat(*args)
getImpliedFileFormat = _tesseract.getImpliedFileFormat

def getFormatExtension(*args):
  return _tesseract.getFormatExtension(*args)
getFormatExtension = _tesseract.getFormatExtension

def pixWriteMem(*args):
  return _tesseract.pixWriteMem(*args)
pixWriteMem = _tesseract.pixWriteMem

def pixDisplay(*args):
  return _tesseract.pixDisplay(*args)
pixDisplay = _tesseract.pixDisplay

def pixDisplayWithTitle(*args):
  return _tesseract.pixDisplayWithTitle(*args)
pixDisplayWithTitle = _tesseract.pixDisplayWithTitle

def pixDisplayMultiple(*args):
  return _tesseract.pixDisplayMultiple(*args)
pixDisplayMultiple = _tesseract.pixDisplayMultiple

def pixDisplayWrite(*args):
  return _tesseract.pixDisplayWrite(*args)
pixDisplayWrite = _tesseract.pixDisplayWrite

def pixDisplayWriteFormat(*args):
  return _tesseract.pixDisplayWriteFormat(*args)
pixDisplayWriteFormat = _tesseract.pixDisplayWriteFormat

def pixSaveTiled(*args):
  return _tesseract.pixSaveTiled(*args)
pixSaveTiled = _tesseract.pixSaveTiled

def pixSaveTiledOutline(*args):
  return _tesseract.pixSaveTiledOutline(*args)
pixSaveTiledOutline = _tesseract.pixSaveTiledOutline

def pixSaveTiledWithText(*args):
  return _tesseract.pixSaveTiledWithText(*args)
pixSaveTiledWithText = _tesseract.pixSaveTiledWithText

def l_chooseDisplayProg(*args):
  return _tesseract.l_chooseDisplayProg(*args)
l_chooseDisplayProg = _tesseract.l_chooseDisplayProg

def zlibCompress(*args):
  return _tesseract.zlibCompress(*args)
zlibCompress = _tesseract.zlibCompress

def zlibUncompress(*args):
  return _tesseract.zlibUncompress(*args)
zlibUncompress = _tesseract.zlibUncompress
PT_UNKNOWN = _tesseract.PT_UNKNOWN
PT_FLOWING_TEXT = _tesseract.PT_FLOWING_TEXT
PT_HEADING_TEXT = _tesseract.PT_HEADING_TEXT
PT_PULLOUT_TEXT = _tesseract.PT_PULLOUT_TEXT
PT_EQUATION = _tesseract.PT_EQUATION
PT_INLINE_EQUATION = _tesseract.PT_INLINE_EQUATION
PT_TABLE = _tesseract.PT_TABLE
PT_VERTICAL_TEXT = _tesseract.PT_VERTICAL_TEXT
PT_CAPTION_TEXT = _tesseract.PT_CAPTION_TEXT
PT_FLOWING_IMAGE = _tesseract.PT_FLOWING_IMAGE
PT_HEADING_IMAGE = _tesseract.PT_HEADING_IMAGE
PT_PULLOUT_IMAGE = _tesseract.PT_PULLOUT_IMAGE
PT_HORZ_LINE = _tesseract.PT_HORZ_LINE
PT_VERT_LINE = _tesseract.PT_VERT_LINE
PT_NOISE = _tesseract.PT_NOISE
PT_COUNT = _tesseract.PT_COUNT

def PTIsLineType(*args):
  return _tesseract.PTIsLineType(*args)
PTIsLineType = _tesseract.PTIsLineType

def PTIsImageType(*args):
  return _tesseract.PTIsImageType(*args)
PTIsImageType = _tesseract.PTIsImageType

def PTIsTextType(*args):
  return _tesseract.PTIsTextType(*args)
PTIsTextType = _tesseract.PTIsTextType

def PTIsPulloutType(*args):
  return _tesseract.PTIsPulloutType(*args)
PTIsPulloutType = _tesseract.PTIsPulloutType
ORIENTATION_PAGE_UP = _tesseract.ORIENTATION_PAGE_UP
ORIENTATION_PAGE_RIGHT = _tesseract.ORIENTATION_PAGE_RIGHT
ORIENTATION_PAGE_DOWN = _tesseract.ORIENTATION_PAGE_DOWN
ORIENTATION_PAGE_LEFT = _tesseract.ORIENTATION_PAGE_LEFT
WRITING_DIRECTION_LEFT_TO_RIGHT = _tesseract.WRITING_DIRECTION_LEFT_TO_RIGHT
WRITING_DIRECTION_RIGHT_TO_LEFT = _tesseract.WRITING_DIRECTION_RIGHT_TO_LEFT
WRITING_DIRECTION_TOP_TO_BOTTOM = _tesseract.WRITING_DIRECTION_TOP_TO_BOTTOM
TEXTLINE_ORDER_LEFT_TO_RIGHT = _tesseract.TEXTLINE_ORDER_LEFT_TO_RIGHT
TEXTLINE_ORDER_RIGHT_TO_LEFT = _tesseract.TEXTLINE_ORDER_RIGHT_TO_LEFT
TEXTLINE_ORDER_TOP_TO_BOTTOM = _tesseract.TEXTLINE_ORDER_TOP_TO_BOTTOM
PSM_OSD_ONLY = _tesseract.PSM_OSD_ONLY
PSM_AUTO_OSD = _tesseract.PSM_AUTO_OSD
PSM_AUTO_ONLY = _tesseract.PSM_AUTO_ONLY
PSM_AUTO = _tesseract.PSM_AUTO
PSM_SINGLE_COLUMN = _tesseract.PSM_SINGLE_COLUMN
PSM_SINGLE_BLOCK_VERT_TEXT = _tesseract.PSM_SINGLE_BLOCK_VERT_TEXT
PSM_SINGLE_BLOCK = _tesseract.PSM_SINGLE_BLOCK
PSM_SINGLE_LINE = _tesseract.PSM_SINGLE_LINE
PSM_SINGLE_WORD = _tesseract.PSM_SINGLE_WORD
PSM_CIRCLE_WORD = _tesseract.PSM_CIRCLE_WORD
PSM_SINGLE_CHAR = _tesseract.PSM_SINGLE_CHAR
PSM_SPARSE_TEXT = _tesseract.PSM_SPARSE_TEXT
PSM_SPARSE_TEXT_OSD = _tesseract.PSM_SPARSE_TEXT_OSD
PSM_COUNT = _tesseract.PSM_COUNT
RIL_BLOCK = _tesseract.RIL_BLOCK
RIL_PARA = _tesseract.RIL_PARA
RIL_TEXTLINE = _tesseract.RIL_TEXTLINE
RIL_WORD = _tesseract.RIL_WORD
RIL_SYMBOL = _tesseract.RIL_SYMBOL
JUSTIFICATION_UNKNOWN = _tesseract.JUSTIFICATION_UNKNOWN
JUSTIFICATION_LEFT = _tesseract.JUSTIFICATION_LEFT
JUSTIFICATION_CENTER = _tesseract.JUSTIFICATION_CENTER
JUSTIFICATION_RIGHT = _tesseract.JUSTIFICATION_RIGHT
OEM_TESSERACT_ONLY = _tesseract.OEM_TESSERACT_ONLY
OEM_CUBE_ONLY = _tesseract.OEM_CUBE_ONLY
OEM_TESSERACT_CUBE_COMBINED = _tesseract.OEM_TESSERACT_CUBE_COMBINED
OEM_DEFAULT = _tesseract.OEM_DEFAULT
class PageIterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PageIterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PageIterator, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _tesseract.delete_PageIterator
    __del__ = lambda self : None;
    def __init__(self, *args): 
        this = _tesseract.new_PageIterator(*args)
        try: self.this.append(this)
        except: self.this = this
    def PositionedAtSameWord(self, *args): return _tesseract.PageIterator_PositionedAtSameWord(self, *args)
    def Begin(self): return _tesseract.PageIterator_Begin(self)
    def RestartParagraph(self): return _tesseract.PageIterator_RestartParagraph(self)
    def IsWithinFirstTextlineOfParagraph(self): return _tesseract.PageIterator_IsWithinFirstTextlineOfParagraph(self)
    def RestartRow(self): return _tesseract.PageIterator_RestartRow(self)
    def Next(self, *args): return _tesseract.PageIterator_Next(self, *args)
    def IsAtBeginningOf(self, *args): return _tesseract.PageIterator_IsAtBeginningOf(self, *args)
    def IsAtFinalElement(self, *args): return _tesseract.PageIterator_IsAtFinalElement(self, *args)
    def Cmp(self, *args): return _tesseract.PageIterator_Cmp(self, *args)
    def BoundingBox(self, *args): return _tesseract.PageIterator_BoundingBox(self, *args)
    def BoundingBoxInternal(self, *args): return _tesseract.PageIterator_BoundingBoxInternal(self, *args)
    def Empty(self, *args): return _tesseract.PageIterator_Empty(self, *args)
    def BlockType(self): return _tesseract.PageIterator_BlockType(self)
    def BlockPolygon(self): return _tesseract.PageIterator_BlockPolygon(self)
    def GetBinaryImage(self, *args): return _tesseract.PageIterator_GetBinaryImage(self, *args)
    def GetImage(self, *args): return _tesseract.PageIterator_GetImage(self, *args)
    def Baseline(self, *args): return _tesseract.PageIterator_Baseline(self, *args)
    def Orientation(self, *args): return _tesseract.PageIterator_Orientation(self, *args)
    def ParagraphInfo(self, *args): return _tesseract.PageIterator_ParagraphInfo(self, *args)
    def SetWordBlamerBundle(self, *args): return _tesseract.PageIterator_SetWordBlamerBundle(self, *args)
PageIterator_swigregister = _tesseract.PageIterator_swigregister
PageIterator_swigregister(PageIterator)
cvar = _tesseract.cvar
kPointsPerInch = cvar.kPointsPerInch

class LTRResultIterator(PageIterator):
    __swig_setmethods__ = {}
    for _s in [PageIterator]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, LTRResultIterator, name, value)
    __swig_getmethods__ = {}
    for _s in [PageIterator]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, LTRResultIterator, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _tesseract.new_LTRResultIterator(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _tesseract.delete_LTRResultIterator
    __del__ = lambda self : None;
    def GetUTF8Text(self, *args): return _tesseract.LTRResultIterator_GetUTF8Text(self, *args)
    def SetLineSeparator(self, *args): return _tesseract.LTRResultIterator_SetLineSeparator(self, *args)
    def SetParagraphSeparator(self, *args): return _tesseract.LTRResultIterator_SetParagraphSeparator(self, *args)
    def Confidence(self, *args): return _tesseract.LTRResultIterator_Confidence(self, *args)
    def WordFontAttributes(self, *args): return _tesseract.LTRResultIterator_WordFontAttributes(self, *args)
    def WordRecognitionLanguage(self): return _tesseract.LTRResultIterator_WordRecognitionLanguage(self)
    def WordDirection(self): return _tesseract.LTRResultIterator_WordDirection(self)
    def WordIsFromDictionary(self): return _tesseract.LTRResultIterator_WordIsFromDictionary(self)
    def WordIsNumeric(self): return _tesseract.LTRResultIterator_WordIsNumeric(self)
    def HasBlamerInfo(self): return _tesseract.LTRResultIterator_HasBlamerInfo(self)
    def GetParamsTrainingBundle(self): return _tesseract.LTRResultIterator_GetParamsTrainingBundle(self)
    def GetBlamerDebug(self): return _tesseract.LTRResultIterator_GetBlamerDebug(self)
    def GetBlamerMisadaptionDebug(self): return _tesseract.LTRResultIterator_GetBlamerMisadaptionDebug(self)
    def HasTruthString(self): return _tesseract.LTRResultIterator_HasTruthString(self)
    def EquivalentToTruth(self, *args): return _tesseract.LTRResultIterator_EquivalentToTruth(self, *args)
    def WordTruthUTF8Text(self): return _tesseract.LTRResultIterator_WordTruthUTF8Text(self)
    def WordNormedUTF8Text(self): return _tesseract.LTRResultIterator_WordNormedUTF8Text(self)
    def WordLattice(self, *args): return _tesseract.LTRResultIterator_WordLattice(self, *args)
    def SymbolIsSuperscript(self): return _tesseract.LTRResultIterator_SymbolIsSuperscript(self)
    def SymbolIsSubscript(self): return _tesseract.LTRResultIterator_SymbolIsSubscript(self)
    def SymbolIsDropcap(self): return _tesseract.LTRResultIterator_SymbolIsDropcap(self)
LTRResultIterator_swigregister = _tesseract.LTRResultIterator_swigregister
LTRResultIterator_swigregister(LTRResultIterator)

class ChoiceIterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ChoiceIterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ChoiceIterator, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _tesseract.new_ChoiceIterator(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _tesseract.delete_ChoiceIterator
    __del__ = lambda self : None;
    def Next(self): return _tesseract.ChoiceIterator_Next(self)
    def GetUTF8Text(self): return _tesseract.ChoiceIterator_GetUTF8Text(self)
    def Confidence(self): return _tesseract.ChoiceIterator_Confidence(self)
ChoiceIterator_swigregister = _tesseract.ChoiceIterator_swigregister
ChoiceIterator_swigregister(ChoiceIterator)

class ResultIterator(LTRResultIterator):
    __swig_setmethods__ = {}
    for _s in [LTRResultIterator]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ResultIterator, name, value)
    __swig_getmethods__ = {}
    for _s in [LTRResultIterator]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ResultIterator, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_getmethods__["StartOfParagraph"] = lambda x: _tesseract.ResultIterator_StartOfParagraph
    if _newclass:StartOfParagraph = staticmethod(_tesseract.ResultIterator_StartOfParagraph)
    __swig_destroy__ = _tesseract.delete_ResultIterator
    __del__ = lambda self : None;
    def Begin(self): return _tesseract.ResultIterator_Begin(self)
    def Next(self, *args): return _tesseract.ResultIterator_Next(self, *args)
    def IsAtBeginningOf(self, *args): return _tesseract.ResultIterator_IsAtBeginningOf(self, *args)
    def IsAtFinalElement(self, *args): return _tesseract.ResultIterator_IsAtFinalElement(self, *args)
    def GetUTF8Text(self, *args): return _tesseract.ResultIterator_GetUTF8Text(self, *args)
    def ParagraphIsLtr(self): return _tesseract.ResultIterator_ParagraphIsLtr(self)
    __swig_getmethods__["CalculateTextlineOrder"] = lambda x: _tesseract.ResultIterator_CalculateTextlineOrder
    if _newclass:CalculateTextlineOrder = staticmethod(_tesseract.ResultIterator_CalculateTextlineOrder)
ResultIterator_swigregister = _tesseract.ResultIterator_swigregister
ResultIterator_swigregister(ResultIterator)

def ResultIterator_StartOfParagraph(*args):
  return _tesseract.ResultIterator_StartOfParagraph(*args)
ResultIterator_StartOfParagraph = _tesseract.ResultIterator_StartOfParagraph

def ResultIterator_CalculateTextlineOrder(*args):
  return _tesseract.ResultIterator_CalculateTextlineOrder(*args)
ResultIterator_CalculateTextlineOrder = _tesseract.ResultIterator_CalculateTextlineOrder
ResultIterator.kMinorRunStart = _tesseract.cvar.ResultIterator_kMinorRunStart
ResultIterator.kMinorRunEnd = _tesseract.cvar.ResultIterator_kMinorRunEnd
ResultIterator.kComplexWord = _tesseract.cvar.ResultIterator_kComplexWord

class TessBaseAPI(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, TessBaseAPI, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, TessBaseAPI, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _tesseract.new_TessBaseAPI()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _tesseract.delete_TessBaseAPI
    __del__ = lambda self : None;
    __swig_getmethods__["Version"] = lambda x: _tesseract.TessBaseAPI_Version
    if _newclass:Version = staticmethod(_tesseract.TessBaseAPI_Version)
    __swig_getmethods__["getOpenCLDevice"] = lambda x: _tesseract.TessBaseAPI_getOpenCLDevice
    if _newclass:getOpenCLDevice = staticmethod(_tesseract.TessBaseAPI_getOpenCLDevice)
    __swig_getmethods__["CatchSignals"] = lambda x: _tesseract.TessBaseAPI_CatchSignals
    if _newclass:CatchSignals = staticmethod(_tesseract.TessBaseAPI_CatchSignals)
    def SetInputName(self, *args): return _tesseract.TessBaseAPI_SetInputName(self, *args)
    def GetInputName(self): return _tesseract.TessBaseAPI_GetInputName(self)
    def SetInputImage(self, *args): return _tesseract.TessBaseAPI_SetInputImage(self, *args)
    def GetInputImage(self): return _tesseract.TessBaseAPI_GetInputImage(self)
    def GetSourceYResolution(self): return _tesseract.TessBaseAPI_GetSourceYResolution(self)
    def GetDatapath(self): return _tesseract.TessBaseAPI_GetDatapath(self)
    def SetOutputName(self, *args): return _tesseract.TessBaseAPI_SetOutputName(self, *args)
    def SetVariable(self, *args): return _tesseract.TessBaseAPI_SetVariable(self, *args)
    def SetDebugVariable(self, *args): return _tesseract.TessBaseAPI_SetDebugVariable(self, *args)
    def GetIntVariable(self, *args): return _tesseract.TessBaseAPI_GetIntVariable(self, *args)
    def GetBoolVariable(self, *args): return _tesseract.TessBaseAPI_GetBoolVariable(self, *args)
    def GetDoubleVariable(self, *args): return _tesseract.TessBaseAPI_GetDoubleVariable(self, *args)
    def GetStringVariable(self, *args): return _tesseract.TessBaseAPI_GetStringVariable(self, *args)
    def PrintVariables(self, *args): return _tesseract.TessBaseAPI_PrintVariables(self, *args)
    def GetVariableAsString(self, *args): return _tesseract.TessBaseAPI_GetVariableAsString(self, *args)
    def Init(self, *args): return _tesseract.TessBaseAPI_Init(self, *args)
    def GetInitLanguagesAsString(self): return _tesseract.TessBaseAPI_GetInitLanguagesAsString(self)
    def GetLoadedLanguagesAsVector(self, *args): return _tesseract.TessBaseAPI_GetLoadedLanguagesAsVector(self, *args)
    def GetAvailableLanguagesAsVector(self, *args): return _tesseract.TessBaseAPI_GetAvailableLanguagesAsVector(self, *args)
    def InitLangMod(self, *args): return _tesseract.TessBaseAPI_InitLangMod(self, *args)
    def InitForAnalysePage(self): return _tesseract.TessBaseAPI_InitForAnalysePage(self)
    def ReadConfigFile(self, *args): return _tesseract.TessBaseAPI_ReadConfigFile(self, *args)
    def ReadDebugConfigFile(self, *args): return _tesseract.TessBaseAPI_ReadDebugConfigFile(self, *args)
    def SetPageSegMode(self, *args): return _tesseract.TessBaseAPI_SetPageSegMode(self, *args)
    def GetPageSegMode(self): return _tesseract.TessBaseAPI_GetPageSegMode(self)
    def TesseractRect(self, *args): return _tesseract.TessBaseAPI_TesseractRect(self, *args)
    def ClearAdaptiveClassifier(self): return _tesseract.TessBaseAPI_ClearAdaptiveClassifier(self)
    def SetImage(self, *args): return _tesseract.TessBaseAPI_SetImage(self, *args)
    def SetSourceResolution(self, *args): return _tesseract.TessBaseAPI_SetSourceResolution(self, *args)
    def SetRectangle(self, *args): return _tesseract.TessBaseAPI_SetRectangle(self, *args)
    def GetThresholdedImage(self): return _tesseract.TessBaseAPI_GetThresholdedImage(self)
    def GetRegions(self, *args): return _tesseract.TessBaseAPI_GetRegions(self, *args)
    def GetTextlines(self, *args): return _tesseract.TessBaseAPI_GetTextlines(self, *args)
    def GetStrips(self, *args): return _tesseract.TessBaseAPI_GetStrips(self, *args)
    def GetWords(self, *args): return _tesseract.TessBaseAPI_GetWords(self, *args)
    def GetConnectedComponents(self, *args): return _tesseract.TessBaseAPI_GetConnectedComponents(self, *args)
    def GetComponentImages(self, *args): return _tesseract.TessBaseAPI_GetComponentImages(self, *args)
    def GetThresholdedImageScaleFactor(self): return _tesseract.TessBaseAPI_GetThresholdedImageScaleFactor(self)
    def DumpPGM(self, *args): return _tesseract.TessBaseAPI_DumpPGM(self, *args)
    def AnalyseLayout(self): return _tesseract.TessBaseAPI_AnalyseLayout(self)
    def Recognize(self, *args): return _tesseract.TessBaseAPI_Recognize(self, *args)
    def RecognizeForChopTest(self, *args): return _tesseract.TessBaseAPI_RecognizeForChopTest(self, *args)
    def ProcessPages(self, *args): return _tesseract.TessBaseAPI_ProcessPages(self, *args)
    def ProcessPage(self, *args): return _tesseract.TessBaseAPI_ProcessPage(self, *args)
    def GetIterator(self): return _tesseract.TessBaseAPI_GetIterator(self)
    def GetMutableIterator(self): return _tesseract.TessBaseAPI_GetMutableIterator(self)
    def GetUTF8Text(self): return _tesseract.TessBaseAPI_GetUTF8Text(self)
    def GetHOCRText(self, *args): return _tesseract.TessBaseAPI_GetHOCRText(self, *args)
    def GetBoxText(self, *args): return _tesseract.TessBaseAPI_GetBoxText(self, *args)
    def GetUNLVText(self): return _tesseract.TessBaseAPI_GetUNLVText(self)
    def MeanTextConf(self): return _tesseract.TessBaseAPI_MeanTextConf(self)
    def AllWordConfidences(self): return _tesseract.TessBaseAPI_AllWordConfidences(self)
    def AdaptToWordStr(self, *args): return _tesseract.TessBaseAPI_AdaptToWordStr(self, *args)
    def Clear(self): return _tesseract.TessBaseAPI_Clear(self)
    def End(self): return _tesseract.TessBaseAPI_End(self)
    __swig_getmethods__["ClearPersistentCache"] = lambda x: _tesseract.TessBaseAPI_ClearPersistentCache
    if _newclass:ClearPersistentCache = staticmethod(_tesseract.TessBaseAPI_ClearPersistentCache)
    def IsValidWord(self, *args): return _tesseract.TessBaseAPI_IsValidWord(self, *args)
    def GetTextDirection(self, *args): return _tesseract.TessBaseAPI_GetTextDirection(self, *args)
    def DetectOS(self, *args): return _tesseract.TessBaseAPI_DetectOS(self, *args)
    def GetFeaturesForBlob(self, *args): return _tesseract.TessBaseAPI_GetFeaturesForBlob(self, *args)
    __swig_getmethods__["FindRowForBox"] = lambda x: _tesseract.TessBaseAPI_FindRowForBox
    if _newclass:FindRowForBox = staticmethod(_tesseract.TessBaseAPI_FindRowForBox)
    def RunAdaptiveClassifier(self, *args): return _tesseract.TessBaseAPI_RunAdaptiveClassifier(self, *args)
    def GetUnichar(self, *args): return _tesseract.TessBaseAPI_GetUnichar(self, *args)
    def GetDawg(self, *args): return _tesseract.TessBaseAPI_GetDawg(self, *args)
    def NumDawgs(self): return _tesseract.TessBaseAPI_NumDawgs(self)
    __swig_getmethods__["MakeTessOCRRow"] = lambda x: _tesseract.TessBaseAPI_MakeTessOCRRow
    if _newclass:MakeTessOCRRow = staticmethod(_tesseract.TessBaseAPI_MakeTessOCRRow)
    __swig_getmethods__["MakeTBLOB"] = lambda x: _tesseract.TessBaseAPI_MakeTBLOB
    if _newclass:MakeTBLOB = staticmethod(_tesseract.TessBaseAPI_MakeTBLOB)
    __swig_getmethods__["NormalizeTBLOB"] = lambda x: _tesseract.TessBaseAPI_NormalizeTBLOB
    if _newclass:NormalizeTBLOB = staticmethod(_tesseract.TessBaseAPI_NormalizeTBLOB)
    def tesseract(self): return _tesseract.TessBaseAPI_tesseract(self)
    def oem(self): return _tesseract.TessBaseAPI_oem(self)
    def InitTruthCallback(self, *args): return _tesseract.TessBaseAPI_InitTruthCallback(self, *args)
    def GetCubeRecoContext(self): return _tesseract.TessBaseAPI_GetCubeRecoContext(self)
    def set_min_orientation_margin(self, *args): return _tesseract.TessBaseAPI_set_min_orientation_margin(self, *args)
    def GetBlockTextOrientations(self, *args): return _tesseract.TessBaseAPI_GetBlockTextOrientations(self, *args)
    def FindLinesCreateBlockList(self): return _tesseract.TessBaseAPI_FindLinesCreateBlockList(self)
    __swig_getmethods__["DeleteBlockList"] = lambda x: _tesseract.TessBaseAPI_DeleteBlockList
    if _newclass:DeleteBlockList = staticmethod(_tesseract.TessBaseAPI_DeleteBlockList)
TessBaseAPI_swigregister = _tesseract.TessBaseAPI_swigregister
TessBaseAPI_swigregister(TessBaseAPI)

def TessBaseAPI_Version():
  return _tesseract.TessBaseAPI_Version()
TessBaseAPI_Version = _tesseract.TessBaseAPI_Version

def TessBaseAPI_getOpenCLDevice(*args):
  return _tesseract.TessBaseAPI_getOpenCLDevice(*args)
TessBaseAPI_getOpenCLDevice = _tesseract.TessBaseAPI_getOpenCLDevice

def TessBaseAPI_CatchSignals():
  return _tesseract.TessBaseAPI_CatchSignals()
TessBaseAPI_CatchSignals = _tesseract.TessBaseAPI_CatchSignals

def TessBaseAPI_ClearPersistentCache():
  return _tesseract.TessBaseAPI_ClearPersistentCache()
TessBaseAPI_ClearPersistentCache = _tesseract.TessBaseAPI_ClearPersistentCache

def TessBaseAPI_FindRowForBox(*args):
  return _tesseract.TessBaseAPI_FindRowForBox(*args)
TessBaseAPI_FindRowForBox = _tesseract.TessBaseAPI_FindRowForBox

def TessBaseAPI_MakeTessOCRRow(*args):
  return _tesseract.TessBaseAPI_MakeTessOCRRow(*args)
TessBaseAPI_MakeTessOCRRow = _tesseract.TessBaseAPI_MakeTessOCRRow

def TessBaseAPI_MakeTBLOB(*args):
  return _tesseract.TessBaseAPI_MakeTBLOB(*args)
TessBaseAPI_MakeTBLOB = _tesseract.TessBaseAPI_MakeTBLOB

def TessBaseAPI_NormalizeTBLOB(*args):
  return _tesseract.TessBaseAPI_NormalizeTBLOB(*args)
TessBaseAPI_NormalizeTBLOB = _tesseract.TessBaseAPI_NormalizeTBLOB

def TessBaseAPI_DeleteBlockList(*args):
  return _tesseract.TessBaseAPI_DeleteBlockList(*args)
TessBaseAPI_DeleteBlockList = _tesseract.TessBaseAPI_DeleteBlockList


def isLibTiff():
  return _tesseract.isLibTiff()
isLibTiff = _tesseract.isLibTiff

def isLibLept():
  return _tesseract.isLibLept()
isLibLept = _tesseract.isLibLept

def AllWordConfidences(*args):
  return _tesseract.AllWordConfidences(*args)
AllWordConfidences = _tesseract.AllWordConfidences

def ProcessPagesWrapper(*args):
  return _tesseract.ProcessPagesWrapper(*args)
ProcessPagesWrapper = _tesseract.ProcessPagesWrapper

def ProcessPagesPix(*args):
  return _tesseract.ProcessPagesPix(*args)
ProcessPagesPix = _tesseract.ProcessPagesPix

def ProcessPagesFileStream(*args):
  return _tesseract.ProcessPagesFileStream(*args)
ProcessPagesFileStream = _tesseract.ProcessPagesFileStream

def ProcessPagesBuffer(*args):
  return _tesseract.ProcessPagesBuffer(*args)
ProcessPagesBuffer = _tesseract.ProcessPagesBuffer

def ProcessPagesRaw(*args):
  return _tesseract.ProcessPagesRaw(*args)
ProcessPagesRaw = _tesseract.ProcessPagesRaw

def SetCvImage(*args):
  return _tesseract.SetCvImage(*args)
SetCvImage = _tesseract.SetCvImage

def SetImage(*args):
  return _tesseract.SetImage(*args)
SetImage = _tesseract.SetImage

def SetVariable(*args):
  return _tesseract.SetVariable(*args)
SetVariable = _tesseract.SetVariable

def GetUTF8Text(*args):
  return _tesseract.GetUTF8Text(*args)
GetUTF8Text = _tesseract.GetUTF8Text
# This file is compatible with both classic and new-style classes.


